{ Analytica Model DDPLTS_IPPU, encoding="UTF-8" }
SoftwareVersion 5.4.6


{ System Variables with non-default values: }
Time := 1990..2050
{!40300|Att_SlicerPopupSize Time: 232,868}
SampleSize := 1000
TypeChecking := 1
Checking := 1
SaveOptions := 2
SaveValues := 0
{!50400|Sys_UseLegacyColors := 1}

{!-50299|DiagramColor Model: 65535,65535,65535}
{!-50299|DiagramColor Module: 65535,65535,65535}
{!-50299|DiagramColor LinkModule: 65535,65535,65535}
{!-50299|DiagramColor Library: 65535,65535,65535}
{!-50299|DiagramColor LinkLibrary: 65535,65535,65535}
{!-50299|DiagramColor Form: 65535,65535,65535}
NodeInfo FormNode: 1,0,0,,0,0,,,,0,,,0
{!-50299|NodeColor Text: 62258,62258,62258}



Model DDPLTS_IPPU
Title: DDPLTS-IPPU
Description: Modelo desarrollado para proyecto DDPLTS asociado a la ECLP~
Modelo IPPU~
Basado en modelo excel que tiene MMA y en Resutlados de HFC2	
Author: JMV
Date: Fri, Jul 17, 2020 11:00 AM
DiagState: 2,79,92,1211,597,17
FontStyle: Arial,15
FileInfo: 0,Model DDPLTS_IPPU,2,2,0,0,C:\Users\adm\Documents\GitHub\MultiSector_LTS_Chile\IPPU_Analytica\DDPLTS-IPPU.ana

Library Funciones
Title: Funciones
Description: Index-TS~
Indices EVALTS
Author: CDLM
Date: Fri, 16 de Jan de 2004 15:16
DefaultSize: 48,24
NodeLocation: 120,64,1
NodeSize: 56,24
NodeInfo: 1,1,0,1,1,1,0,0,0,0,,,,0
DiagState: 2,7,109,1406,523,0
WindState: 2,0,-23,1921,928
NodeColor: 65535,65531,1
DiagramColor: 52428,52428,52428
FontStyle: Arial, 12
OutlinerState: 2,40,50,448,280
{!40400|Att_clearTypeFonts: 0}

Library Funciones_arrays
Title: Funciones iArrays
Author: ayudanteslac
Date: Jue, 16 de Oct de 2008 17:32
DefaultSize: 48,24
NodeLocation: 464,304,1
NodeSize: 72,32
DiagState: 2,385,278,1445,679,17
WindState: 2,102,90,476,224
NodeColor: 65535,65531,1
FontStyle: Arial,12

Index I_IndiceValor
Att_PrevIndexValue: ['Indice','Valor','Agregacion']
Title: Indice/Valor
Description: Este indice se utiliza para poder elegir las columnas en una tabla a agregar en el array!~
~
Agregacion:~
'sum'~
'average'~
'min'~
'max'~
'product'
Definition: ['Indice','Valor','Agregacion']
NodeLocation: 872,392,1
NodeSize: 56,24
WindState: 2,7,96,676,296

Function F_exporta_tabla_il(array;Cols_names: index; DBTable, DBname, Append)
Title: Exporta a Tabla con indices locales
Description: Esta funcion exporta un arreglo a una tabla que ya debe haber sido creada en access. Tiene la posibilidad de reescribir la tabla o agregar los datos a los ya existentes.~
~
Parametros:~
~
F_exporta_tabla(array, DBTable, DBname, Append)~
Array: el arreglo a exportar~
DBTAble: el nombre de la tabla donde se exportara (rodeado de ' simples)~
DBName: el nombre de la base de datos ~
Append: Boolean: if T, los datos se agregan a los ya existentes~
~
~

Definition: index rowall := sequence(1,size(array));~
index col:= concat(indexnames(array),['valor']);~
var lisexp_p:= Mdarraytotable(array,rowall,col);~
var lisexp:=if Cols_names=slice(Cols_names,size(col))  then slice(lisexp_p,col,size(col)) else lisexp_p[col='.'&Cols_names];~
~
var valor := slice( lisexp, Cols_names,   size(indexnames(array) )+ 1);~
index row := subset( valor <> 0 );~
var lisexpsel := lisexp[rowall=row];~
~
IF (Append) THEN ~
using dd1 :=  DBWrite( 'DSN='&Dbname&'', Insertrecsql(lisexpsel, row, cols_names,  row, DBTable))    do "Datos agregados a tabla"~
ELSE  using dd2 := DBWrite( 'DSN='&Dbname&'', Writetablesql(lisexpsel, row, cols_names, DBTable))  do "Tabla Exportada"~

NodeLocation: 472,784,1
NodeSize: 48,40
WindState: 2,521,446,755,397

Function F_time_anos(array, DBTable, DBname, Append)
Title: Time por anos
Description: Esta funcion camnbia el valor de la variable de sistema time por el indice ano y luego exporta la tabla usando la funcion correspodiente~
~
## F_exporta_tabla(varexp, DBTable, DBname, Append);
Definition: index ano := sequence(min(Time), Max(time));~
var  varexp := array[time=ano];~
varexp
NodeLocation: 336,744,1
NodeSize: 64,24
WindState: 2,94,85,476,224

Function F_array_to_table(param1)
Title: Array to Table
Description: Convierte un objeto multidimensional en una tabla de dos dimensiones~
~
NOTA: el numero total de rows debe ser menos que 32.000!!!!!!
Definition: index i1:=sequence(1, size(param1));~
index i2:= concat(indexnames(param1),['valor' ]);~
MDArrayTOTable(param1,i1,i2)
NodeLocation: 168,448,1
NodeSize: 48,24
WindState: 2,0,117,573,419

Function F_index_n(A: array, n:number)
Title: Index n of table
Description: ESta funcion extrae el nombre de la columna indicando su posiscion en la base de datos
Definition: slice(A.i2,n)
NodeLocation: 136,784,1
NodeSize: 48,24
WindState: 2,0,-23,1281,900

Function F_read_array1(Colsbd: index; Colsarray: index; DbName; DBTable;op_agr: atom text optional='sum',missing: atom number optional=0;tabla: atom number optional=0;excel: atom number optional=0)
Title: Read array
Description: Funcion para leer la tabla TABLA completa desde la base de datos indicada en PDSN y transformarla inmediatamante en un arreglo~
~
Requiere:~
~
1. Colsbd: Indice con nombres de las columnas a utiilziar de la BD + nombre columna con valores~
2. Cols_array: Indice con identifiers de indices para crear arreglo (cada indice listado en cols debe estar creado) (ver F_crea_indice)~
3. DbName: Dsn con base de datos (rodeado de ' simples)~
4. DBTable: Nombre de tabla  leer (rodeado de ' simples)~
5. op_agr= operacion de agrgacion del mdtable /   'sum' (default), 'min', 'max', 'average', and 'product'~
6.valor de los missing values (puede ser 0 o null~
7. Tabla (1) o array (any)~
8. Excel (1) o Otro [SQL o Access] (any)~
~
CDLM Nov08
Definition: var Dbtable_source:=if excel=1 then '[' & DBTable & '$]' else DBTable;~
var table:=F_read_table1(Dbname,Dbtable_source);/*lee tabla*/~
var table1:= table[table.i2=colsbd]; /*define tabla leida como un arreglo con las columnas de interes*/~
var array1:=mdtable(table1,table.i1,Colsbd,Colsarray,op_agr,missing); /*transforma tabla a arreglo*/~
if tabla = 1 then table1 else array1
NodeLocation: 152,832,1
NodeSize: 64,24
WindState: 2,0,-23,1441,786

Function F_read_range1(URL: atom text;colsarray: index;range: atom text;wsht_name: atom text )
Title: Range excel array
Description: Esta funcion lee un rango de celdas desde excel~
~
~
F_read_range(URL: atom text;colsarray: index;range: atom text;wsht_name: atom text )~
~
1. URL: Direccion URL en donde se encuentar el archivo Ejemplo --> '\\Lac5\proyectos\Otros\EMEL\2008-CursoAnalytica\Clases\Ejemplos\BD-EJEMPLOS.xlsx'~
2. colsarray: arreglo con la lista de columnas de la BD que se requiere leer / las columnas debe ser consecutivas~
3. range: Rango de celdas a leer (solo valores no etiquetas de columnas) Ejemplo-->   'A2:E5' ~
4. wsht_name: nombre de la planilla excel Ejemplo--> 'CHILE_POLL_TEST'~
~
~

Definition: Var wb := OpenExcelFile(URL);~
var  data := WorksheetRange( wb,wsht_name ,range,colIndex:Colsarray);~
data
NodeLocation: 136,736,1
NodeSize: 48,24
WindState: 2,94,85,846,344

Function F_array2table_nonul(array)
Title: Array to table sin nulls
Description: Convierte un objeto multidimensional en una tabla de dos dimensiones~
~
NOTA: el numero total de rows debe ser menos que 32.000!!!!!!
Definition: index rowall := sequence(1,size(array));~
index col:= concat(indexnames(array),['valor']);~
var lisexp:= MDArrayTOTable(array,rowall,col);~
var valor := slice( lisexp, col,   size(indexnames(array) )+ 1);~
index row := subset( valor <> null );~
var lisexpsel := lisexp[rowall=row];~
lisexpsel
NodeLocation: 296,448,1
NodeSize: 88,24
WindState: 2,102,90,692,334
DisplayOutputs: Function F_ArraytoTable_sin_0

Function F_exporta_tabla1(array;Cols_names: index; DBTable, DBname, Append)
Title: Exporta a Tabla
Description: Esta funcion exporta un arreglo a una tabla que ya debe haber sido creada en access. Tiene la posibilidad de reescribir la tabla o agregar los datos a los ya existentes.~
~
Parametros:~
~
F_exporta_tabla(array, DBTable, DBname, Append)~
Array: el arreglo a exportar~
DBTAble: el nombre de la tabla donde se exportara (rodeado de ' simples)~
DBName: el nombre de la base de datos ~
Append: Boolean: if T, los datos se agregan a los ya existentes
Definition: index rowall := sequence(1,size(array));~
index col:= concat(indexnames(array),['valor']);~
var lisexp:= Mdarraytotable(array,rowall,col);~
var valor := slice( lisexp, col,   size(indexnames(array) )+ 1);~
index row := subset( valor <> 0 );~
var lisexpsel := lisexp[rowall=row];~
lisexpsel~
~
IF (Append) THEN ~
using dd1 :=  DBWrite( 'DSN='&Dbname&'', Insertrecsql(lisexpsel, row, col,  row, DBTable))    do "Datos agregados a tabla"~
ELSE  using dd2 := DBWrite( 'DSN='&Dbname&'', Writetablesql(lisexpsel, row, col, DBTable))  do "Tabla Exportada"~

NodeLocation: 568,784,1
NodeSize: 48,24
WindState: 2,102,90,476,224

Function F_get_data(Colsbd: index; Colsarray: index; DbName; DBTable;op_agr: atom text optional='sum',missing: atom number optional=0;tabla: atom number optional=0;excel: atom number optional=0;etapa: atom number optional=3)
Title: Get Data
Description: Funcion para leer la tabla TABLA completa desde la base de datos indicada en PDSN y transformarla inmediatamante en un arreglo~
~
Requiere:~
~
1. Colsbd: Indice con nombres de las columnas a utiilziar de la BD + nombre columna con valores~
2. Cols_array: Indice con identifiers de indices para crear arreglo (cada indice listado en cols debe estar creado) (ver F_crea_indice)~
3. DbName: Dsn con base de datos (rodeado de ' simples)~
4. DBTable: Nombre de tabla  leer (rodeado de ' simples)~
5. op_agr= operacion de agrgacion del mdtable /   'sum' (default), 'min', 'max', 'average', and 'product'~
6.valor de los missing values (puede ser 0 o null~
7. Tabla (1) o array (any)~
8. Excel (1) o Otro [SQL o Access] (any)~
9. Etapa: (1) Test, (2) Operacion, (3) Final (debe existir un archivo access, sql o excel con la base de datos correspondiente a cada etapa) ~

Definition: var DbName_data:= if etapa=1 then DbName & '_Test' else if etapa = 2 then DbName & '_Operacion' else DbName & '_Final';~
~
var DBTable_data:= if etapa=1 then DBTable & '_Test' else if etapa = 2 then DBTable & '_Operacion' else DBTable & '_Final';~
~
F_read_array1(Colsbd,Colsarray, DbName_data,DBTable_data,op_agr,missing,tabla,excel)
NodeLocation: 320,792,1
NodeSize: 48,24
WindState: 2,94,85,1219,376

Function F_Table_to_Array(tabla,funcion_agrupacion: optional='sum')
Title: Table to Array
Description: Esta funcion transforma una tabla a un arreglo.~
~
Se llama a la funcion entregandole la variable (tabla). Es necesario que el titulo de cada campo de la tabla sea el mismo que el indicador del indice que contiene los distintos valores para dicho campo. Este indice debe ser creado para que funcione el llamado a la funcion.~
~
Por ejemplo la siguiente tabla:~
~
       indice_1     indice_2    valor~
1     x                a                10~
2     x                b                12~
3     y                a                20~
4     y                b                25~
5     z                b                50~
~
Tiene que tener creado los indices:~
~
indice_1:=['x', 'y']~
~
indice_2:=['a', 'b']~
~
Ademas, los valores de la tabla (poblacion, generacion, cantidad de vehiculos, etc) tienen que estar en el ultimo campo de la tabla.~
~
Por defecto SUMA los valores con indices repetidos. Las funciones de agrupacion disponibles son:~
'sum'~
'average'~
'min'~
'max'~
'product'
Definition: index rows:=copyindex(tabla.i1);~
index cols:=copyindex(tabla.i2);~
{index colsarray:=subset(cols<>argmax(cols)); 'Antiguo la cambie por la siguiente linea de codigo}~
var n:=size(cols)-1;~
index colsarray:=cols[@cols=1..n];~
var table:=tabla[tabla.i1=rows, tabla.i2=cols];~
~
mdtable(table,rows,cols,colsarray,funcion_agrupacion,null)
NodeLocation: 168,400,1
NodeSize: 48,24
WindState: 2,521,233,897,480

Function F_cero_null(x)
Title: Funcion cero null
Definition: if x=0 then null else x
NodeLocation: 144,656,1
NodeSize: 48,24
WindState: 2,102,90,476,224

Function F_crear_indice(arreglo,ncol: optional=Identifier of Self,ordenar: optional =false)
Title: Funcion Crear Indice
Description: A partir de un arreglo crea un indice con todos los valores unicos asociados a la columna ncol~
Compatible con la funcion F_tabla_arreglo (indices .i1 e .i2)~
~
-arreglo: tabla creada con la funcion F_tabla_arreglo (indices .i1 e .i2)~
-ncol: numero de la columna o nombre de la columna~
-ordenar: si el indice debe ordenarse~
~
JMV 2016~
Mejorada PBH 2018
Definition: var n:=if isNumber(ncol) then ncol else @[arreglo.i2 = ncol];~
var col= slice(arreglo, arreglo.I2, n)[arreglo.i1=unique(slice(arreglo,arreglo.i2,n),arreglo.i1) ];~
if ordenar=true then ~
sortindex(col)~
else col
NodeLocation: 168,496,1
NodeSize: 48,24
WindState: 2,883,180,918,630

Function F_Table_to_Array_Mul(tabla,n: optional=1,funcion_agrupacion: optional='sum')
Title: Table to Array ~
Multiple Values
Description: Esta funcion transforma una tabla a un arreglo Y PERMITE INCLUIR VARIAS COLUMNAS DE VALORES. ~
~
Se llama a la funcion entregandole la variable Tabla y n: donde n corresponde al numero de filas coordenadas. Es necesario que el titulo de cada campo de la tabla sea el mismo que el indicador del indice que contiene los distintos valores para dicho campo. Este indice debe ser creado para que funcione el llamado a la funcion. ~
Tambien es necesario que la tabla este ordenada con todas las columnas de coordenadas (o indices a crear) a la izquierda y todas las columnas de valores a la derecha.~
~
Por ejemplo la siguiente tabla:~
~
       indice_1     indice_2    valor_1     valor_2~
1     x                a                10                 12~
2     x                b                12                 20~
3     y                a                20                 5~
4     y                b                25                 12~
5     z                b                50                 34~
~
Tiene que tener creado los indices:~
~
indice_1:=['x', 'y']~
~
indice_2:=['a', 'b']~
~
Y para llamarla debe entregarse como n=2 (ya que las primeras 2 columnas son de indices)~
~
Por defecto SUMA los valores con indices repetidos. Las funciones de agrupacion disponibles son:~
'sum'~
'average'~
'min'~
'max'~
'product'
Definition: index rows:=copyindex(tabla.i1);~
index cols:=copyindex(tabla.i2);~
index colsarray:=cols[@cols=1..n];~
index vals:= cols[@cols=n+1..size(cols)];~
~
var table:=tabla[tabla.i1=rows, tabla.i2=cols];~
~
mdtable(table,rows,cols,colsarray,valueColumn: vals,conglomerationFn:funcion_agrupacion)
NodeLocation: 272,400,1
NodeSize: 64,24
WindState: 2,1015,126,889,700

Function F_null_cero(x)
Title: Funcion null cero
Definition: if x=Null then 0 else x
NodeLocation: 144,608,1
NodeSize: 48,24
WindState: 2,94,85,476,224

Function F_lectura_tabla(dsnname; tabla; origen: optional text='Excel',sqlQuery: optional text='')
Title: Funcion Lectura tabla
Description: Funcion para leer la tabla dbtabla completa desde la base de datos indicada en Dsnname~
~
dsn : nombre de la conexion a la base de datos origen o Driver Configurado con la funcion F_DSN~
table: nombre de la tabla que se esta leyendo desde Dbname~
origen:~
   Excel: hoja de excel~
   Access:  tabla de access~
sqlQuery: Permite ingresar una query SQL para obtener una tabla mas resumida~
~
Ultima Modificacion: PBH Agosto 2019
Definition: GL_Reset;~
var dsn:=if findInText('Driver=',dsnname)>0 then dsnname else 'DSN='&dsnname&''; {PERMITE DISTINGUIR ENTRE ODBC CONFIGURADA O DRIVER CREADO EN ANALYTICA}~
~
var query:=if sqlQuery='' then~
	if origen='Excel' then 'SELECT * FROM ' & '['&tabla&'$]'~
	else if origen ='Access' then 'SELECT * FROM ' & tabla~
	else MsgBox(" Funcion Lectura Tabla:  Error en especificion de origen ***")~
else sqlQuery;~
~
index i1:=DBquery( dsn , query);~
~
index i2:=dblabels(i1);~
dbtable(i1,i2);
NodeLocation: 152,296,5
NodeSize: 48,24
WindState: 2,47,188,1351,568

Module Antigua
Title: Antigua
Author: Greenie
Date: Wed, Nov 2, 2016 7:01 PM
NodeLocation: 136,72,1
NodeSize: 48,24
DiagState: 2,1,0,1599,469,17

Function F_col2index1(tabla_2d: array, index_name: string)
Title: Column To Index
Description: This function sorts the 's' column in table 'price'. Then, it picks up every unique values in the 's' column, and return these values as an array.~
~
Esta funcion extrae la columna 'index_name' de la tabla de dos dimensiones Tabla_2d. ~
Entrega los elementos unicos de esta columna, ordenados alfabeticamente.
Definition: using a:=tabla_2d[tabla_2d.i2=index_Name] do~
using b:=a[tabla_2d.i1=sortIndex(a,tabla_2d.i1)] do~
using z:=unique(b, tabla_2d.i1) do~
b[tabla_2d.i1=z]
NodeLocation: 240,40,1
NodeSize: 64,24
WindState: 2,35,7,1280,675

Function F_read_table1(dbname, dbtabla)
Title: Read Table
Description: Funcion para leer la tabla dbtabla completa desde la base de datos indicada en Dbname~
~
** Hay que ver como poder seleccionar algunas columnas antes de leerlas~
~
Si la tabla es de excel '[dbtabla$]'~
~
Dbname y Dbtable entre ' simples~
~
~
Lac jun07~
~
mod CDLM Nov2008~

Definition: index i1:=DBquery( 'DSN='&Dbname&'' , 'SELECT * FROM ' & dbtabla);~
index i2:=dblabels(i1);~
dbtable(i1,i2);
NodeLocation: 248,96,1
NodeSize: 48,24
WindState: 2,102,90,894,420

Function F_creat_index1(DbName; DBTable;Ncol_bd: number)
Title: Creat index
Description: Esta funcion permite crar una lista con los campos unicos de una columna de la base de datos a leer.....~
~
1. DbName: Dsn con base de datos (rodeado de ' simples)~
2. DBTable: Nombre de tabla  leer (rodeado de ' simples)~
3. Ncol_bd: numero indicativo de la posicion de la columna en la BD desde donde se quiere crear el indice~
~
Copiar y pegar la lista generada en un indice aparte con nombre ad hoc~
~
***CDLM nov2008
Definition: var Table:=F_read_table1(Dbname,DBTable);~
F_col2index1(Table,F_index_n(Table,Ncol_bd))
NodeLocation: 144,96,1
NodeSize: 48,24
WindState: 2,102,90,850,503

Function F_lectura_bd(dsnname, dbtabla)
Title: Funcion Lectura BD
Description: Funcion f_lectura_bd~
~
~
Funcion para leer la tabla dbtabla completa desde la base de datos indicada en Dsnname~
~
Dsnname : es el nombre de la conexion a la base de datos origen~
Dbtabla: es el nombre de la tabla que se esta leyendo desde Dbname~
~
El siguiente es el formato para dbtabla:  'dbtabla'~
~
Dsnname y Dbtable entre ' simples
Definition: MsgBox('Se modifico esta funciÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â‚¬Å¾Ã‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€šÃ‚Â ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¾Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¾ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â‚¬Å¾Ã‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Â¦Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Â¦Ãƒâ€šÃ‚Â¾ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â‚¬Å¾Ã‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€šÃ‚Â ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¾Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Â¦Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â‚¬Å¾Ã‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¦ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¦ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¾ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â‚¬Å¾Ã‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€šÃ‚Â ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¾Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¾ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â‚¬Å¾Ã‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¦ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Â¦Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â‚¬Å¾Ã‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€šÃ‚Â ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¾Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Â¦Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â‚¬Å¾Ã‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Â¦Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€šÃ‚Â¦ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Â¦Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â‚¬Å¾Ã‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Â¦Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€šÃ‚Â¦ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¾ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Â¦Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â‚¬Å¾Ã‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€šÃ‚Â ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¾Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¾ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â‚¬Å¾Ã‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Â¦Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Â¦Ãƒâ€šÃ‚Â¾ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â‚¬Å¾Ã‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€šÃ‚Â ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¾Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Â¦Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€šÃ‚Â¦ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â‚¬Å¾Ã‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¦ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Â¦Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â‚¬Å¾Ã‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€šÃ‚Â ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¾Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¾ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â‚¬Å¾Ã‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¦ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Â¦Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â‚¬Å¾Ã‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€šÃ‚Â ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¾Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Â¦Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â‚¬Å¾Ã‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¦ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¦ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â‚¬Å¾Ã‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¦ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Â¦Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â‚¬Å¾Ã‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€šÃ‚Â ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¾Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Â¦Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€šÃ‚Â¦ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â‚¬Å¾Ã‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¦ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Â¦Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â°ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â‚¬Å¾Ã‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€šÃ‚Â ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¾Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¾ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â‚¬Å¾Ã‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¦ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¦ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â‚¬Å¾Ã‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€šÃ‚Â ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¾Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Â¦Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€šÃ‚Â¦ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬ÃƒÂ¢Ã¢â‚¬Å¾Ã‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã‚Â¦ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã¢â‚¬Â ÃƒÂ¢Ã¢â€šÂ¬Ã¢â€žÂ¢ÃƒÆ’Ã†â€™Ãƒâ€šÃ‚Â¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡Ãƒâ€šÃ‚Â¬ÃƒÆ’Ã¢â‚¬Â¦Ãƒâ€šÃ‚Â¡ÃƒÆ’Ã†â€™Ãƒâ€ Ã¢â‚¬â„¢ÃƒÆ’Ã‚Â¢ÃƒÂ¢Ã¢â‚¬Å¡Ã‚Â¬Ãƒâ€¦Ã‚Â¡ÃƒÆ’Ã†â€™ÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ÃƒÆ’Ã¢â‚¬Å¡Ãƒâ€šÃ‚Â¥n, Use la nueva funcion f_lectura_tabla')
NodeLocation: 136,40,1
NodeSize: 48,24
WindState: 2,496,173,1212,673

Close Antigua

Text Te1478124218
Description: LECTURA DE TABLA EXCEL O ACCES
NodeLocation: 508,252,-4
NodeSize: 436,92
NodeInfo: 1,0,0,1,1,1,1,,0,,0
NodeColor: 65535,65531,39321
NodeFont: Arial,16

Text Te1478124362
Description: Manipulacion de bases de datos
NodeLocation: 508,452,-1
NodeSize: 436,108
NodeInfo: 1,0,0,1,1,1,1,,0,,0
NodeColor: 39321,65535,58982
NodeFont: Arial,16

Text Te1478124494
Description: Limpieza Datos
NodeLocation: 500,632,-1
NodeSize: 436,64
NodeInfo: 1,0,0,1,1,1,1,,0,,0
WindState: 2,94,85,476,224
NodeColor: 65535,52427,57888
NodeFont: Arial,16

Text Te1478124782
Description: Importante: Analytica 4.6 no suma indice con <null>; es decir si hay un valor en el indice definido como null la suma va a ser 0, lo que podria generar graves problemas en el modelo
NodeLocation: 1208,604,-1
NodeSize: 272,52
NodeInfo: 1,0,0,1,0,1,0,,0,,0
NodeColor: 65535,65535,65535

Text Te1478125349
Description: Otras
NodeLocation: 508,776,-1
NodeSize: 436,88
NodeInfo: 1,0,0,1,0,1,1,,0,,0
NodeColor: 65535,42597,19661
NodeFont: Arial,16

Function F_cero_texto(x)
Title: Funcion cero texto
Description: Funcion para pasar los ceros a texto en un arreglo. Compatible con la funcion summary de estadistica
Definition: if x = 0 then 'Zero' else x
NodeLocation: 248,608,1
NodeSize: 48,24
WindState: 2,94,85,959,410

Function F_Filtrar_Tabla(table,col_name,condition)
Title: Filtrar Tabla
Description: Funcion para filtrar una tabla. Se le ingresa como parametros de entrada la tabla, el nombre de la columna que se desee filtrar y la condicion. Funciona solo con tablas generadas con indices .1 para filas y .i2 para columnas.~
~
Ej: Filtrar columna 'Tipo' por 'Estacionarias'~
Devuelve una tabla solo con las filas que contienen 'Estacionarias' en la columna 'Tipo'.~
~
Funcion util para filtrar base de datos muy grandes antes de volverlas array.
Definition: {FILTRO LA TABLA POR LA COLUMNA DESEADA}~
var tabla_col:=table[.i2=col_name]; ~
{FILAS SELECCIONADAS QUE CUMPLEN LA CONDICION,SI CUMPLE LA CONDICION MARCO EL NUMERO DE LA FILA}~
var filas_sel:= ~
   if tabla_col=condition then @tabla_col.i1 else 0;  ~
{CREO UN INDICE UNICO, ELIMINANDO LAS FILAS QUE NO CUMPLEN}~
index i1:=subset(filas_sel>0);~
{DEVUELVO LA TABLA FILTRADA POR LAS FILAS SELECCIONADAS}~
table[.i1=i1]
NodeLocation: 256,496,1
NodeSize: 48,24
WindState: 2,185,302,1236,767

Function F_Cambiar_Nom_Index(table,i)
Title: Cambiar Nombre Indice
Description: Cambia el indice de columna tablas a un indice local i2, para que la tabla sea compatible a una leida desde base de datos.
Definition: var tabla:=table;~
{CAMBIO EL INDICE ENTREGADO (GLOBAL) POR UN LOCAL CON NOMRBRE I2 (PARA QUE SEA COMPATIBLE CON OTRAS FUNCIONES)}~
index i2:=copyindex(i);~
tabla[i=i2]
NodeLocation: 344,496,1
NodeSize: 48,24
WindState: 2,102,82,607,284

Function F_Juntar_Tablas(tabla1,tabla2)
Title: Juntar Tablas
Description: Junta dos tablas de indices i1 e i2 (otro). ~
Para que funcione correctamente ambas tablas deben estar indexadas por un indice i2 global (puede llamarse de otra forma, pero no pueden ser i2 locales, ya que no concidirian entre ambas tablas.~
Las junta hacia abajo en un nuevo indice i1.~
Existe la opcion de no sumar tablas no existentes, cuando estas tiene valor cero.
Definition: {OPCION DE JUNTAR UNA TABLA CON UN CERO, SE DESCARTA AUTOMATICAMENTE}~
if F_Suma_Total(tabla1)=0 then tabla2 else~
if F_Suma_Total(tabla2)=0 then tabla1 else(~
var n_orig:=size(tabla1.i1); {TAMANO ORIGINAL}~
var n:=n_orig+size(tabla2.i1); {TAMANO NUEVO}~
index i1:=1..n;~
{CREO DOS TABLAS PARA LUEGO SUMARLAS, CON ESTE PROCEDIMIENTO EVITO QUE LA ITERACION REQUEIRA NxM pasos}~
var tabla3:=tabla1[.i1=i1]; ~
var tabla4:=tabla2[.i1=i1-n_orig];~
tabla3:=if tabla3=null then '' else tabla3;~
tabla4:=if tabla4=null then '' else tabla4;~
{DEBO CONVERTIR LOS NUMEROS DE LA TABLA EN NUMEROS PARA QUE NO QUEDEN COMO TEXTO}~
var tabla:=tabla3+tabla4;~
var tabla_aux:=parsenumber(tabla);~
if isnumber(tabla_aux) then tabla_aux else tabla )
NodeLocation: 496,400,1
NodeSize: 48,24
WindState: 2,837,409,977,470

Function F_Array_to_Tab_sin_0(array)
Title: Array to Table  y 0
Description: Convierte un Array a una Tabla omitiendo valores null o ceros. ~
Compatible con las demas funciones de arrays y utiliza los indices i1 e i2.~
~
Esta funcion es para versiones de Analytica 4.6 o superiores. Permite generar una tabla de dos dimensiones con eficiencia de memoria.
Definition: var table:=MDArrayTOTable(array,omitZero:true,omitNull:True);~
index i2:= concat(indexnames(array),['valor' ]);~
index i1:=CopyIndex(table.row);~
MDArrayTOTable(array,i1,i2,omitZero:true,omitNull:True)
NodeLocation: 1024,440,1
NodeSize: 48,24
WindState: 2,102,84,1183,478

Function F_Cambiar_Nombre_Col(table,nom_orig,nom_cambio)
Title: Cambiar Nombre Columna
Description: Funcion para cambiar el nombre de alguna columna de una tabla con indices i1 e i2. Compatible con las demas funciones de manejo de tablas y array. ~
Solo funciona con una tabla de datos indexada por el indice local i2. ~
Se enntrega la tabla, el nombre original de la columna y el cambio de nombre deseado.
Definition: var tabla:=table;~
index i2:=if tabla.i2=nom_orig then nom_cambio else tabla.i2; {CREAR NUEVO INDICE CON EL CAMBIO DE NOMBRE}~
{INDEXAR LA TABLA CON ESTE NUEVO INDICE}~
tabla:=tabla[.i2=i2]; ~
if tabla.i2=nom_cambio then table[.i2=nom_orig] else tabla
NodeLocation: 584,400,1
NodeSize: 48,24
WindState: 2,604,237,949,332

Function F_ArraytoTable_sin_0(param1)
Title: Array to Table sin 0
Description: JMV -~
La funcion arry to table sin cero anterior no me funcionaba~
Esta es mas simple y funciona en todas las versiones de analytica~
~
Basicamente creo la tabla y luego filtro dejando fuera los 0
Definition: index i3:=sequence(1, size(param1));~
index i2:= concat(indexnames(param1),['valor' ]);~
var table:=MDArrayTOTable(param1,i3,i2);~
~
var tabla_col:=table[.i2='valor'];~
var filas_sel:= ~
   if tabla_col<>0 then @tabla_col.i3 else 0;~
index i1:=subset(filas_sel>0);~
table[.i3=i1]
NodeLocation: 424,448,1
NodeSize: 48,24
WindState: 2,102,82,1224,347
DisplayInputs: Function F_array2table_nonul

Function F_CountNoZero(param1; i: index)
Title: Cuenta sin ceros
Description: JMV -~
Funcion que cuenta sobre un indice i el numero de items en un arreglo param1  en un arreglo que no son 0.~
~
Ejemplo:~
var a:= /indexado por i y j~
[ 0 2 3 4 ,~
  1 2 3 4 ,~
   0 0 1 0]; ~
 ~
F_CountNoZero(a,j) = /Notese que resultado esta indexado por i~
[3,~
 4,~
 1] ~
~
F_CountNoZero(a,i) = /Notese que resultado esta indexado por j~
[1 2 3 2]
Definition: var table:=param1;~
~
var sinCero= if table<>0 then 1 else 0;~
~
sum(sinCero,i)
NodeLocation: 432,496,1
NodeSize: 48,24
WindState: 2,620,94,760,406

Function F_Filtrar_Tabla_opc(table,col_name,opcion,condition)
Title: Filtrar Tabla con opcion
Description: Funcion para filtrar una tabla. Se le ingresa como parametros de entrada la tabla, el nombre de la columna que se desee filtrar y la condicion. Funciona solo con tablas generadas con indices .1 para filas y .i2 para columnas.~
opcion~
0 =~
1 <~
2 <=~
3 >~
4 >=~
5 <>~
~
Ej: Filtrar columna 'Tipo' por 'Estacionarias'~
Devuelve una tabla solo con las filas que contienen 'Estacionarias' en la columna 'Tipo'.~
~
Funcin util para filtrar base de datos muy grandes antes de volverlas array.~
~
JMV 2017
Definition: {FILTRO LA TABLA POR LA COLUMNA DESEADA}~
var tabla_col:=table[.i2=col_name]; ~
{FILAS SELECCIONADAS QUE CUMPLEN LA CONDICION,SI CUMPLE LA CONDICION MARCO EL N DE LA FILA}~
var filas_sel:= ~
   if opcion=0 and tabla_col=condition then @tabla_col.i1 else ~
   if opcion=1 and tabla_col<condition then @tabla_col.i1 else ~
   if opcion=2 and tabla_col<=condition then @tabla_col.i1 else ~
   if opcion=3 and tabla_col>condition then @tabla_col.i1 else~
   if opcion=4 and tabla_col>=condition then @tabla_col.i1 else~
   if opcion=5 and tabla_col<>condition then @tabla_col.i1 else 0  ;  ~
{CREO UN INDICE UNICO, ELIMINANDO LAS FILAS QUE NO CUMPLEN LA CONDICION}~
index i1:=subset(filas_sel>0);~
{DEVUELVO LA TABLA FILTRADA POR LAS FILAS SELECCIONADAS}~
table[.i1=i1]
NodeLocation: 520,496,1
NodeSize: 48,24
WindState: 2,261,110,1236,767

Function F_Table_Array_Mul_Fn(tabla:array,array_agrupacion:array,indice_agrupacion:index)
Title: Table to Array ~
Multiple Values Fn
Description: Esta funcion transforma una tabla a un arreglo Y PERMITE INCLUIR VARIAS COLUMNAS DE VALORES, y diferenciar la agregacion de datos para cada columna de estos valores!~
~
Se llama a la funcion entregandole la variable Tabla y n: donde n corresponde al numero de filas coordenadas. Es necesario que el titulo de cada campo de la tabla sea el mismo que el indicador del indice que contiene los distintos valores para dicho campo. Este indice debe ser creado para que funcione el llamado a la funcion. ~
Tambien es necesario que la tabla este ordenada con todas las columnas de coordenadas (o indices a crear) a la izquierda y todas las columnas de valores a la derecha.~
~
Por ejemplo la siguiente tabla:~
~
       indice_1     indice_2    valor_1     valor_2~
1     x                a                10                 12~
2     x                b                12                 20~
3     y                a                20                 5~
4     y                b                25                 12~
5     z                b                50                 34~
~
Tiene que tener creado los indices:~
~
indice_1:=['x', 'y']~
~
indice_2:=['a', 'b']~
~
Y para llamarla debe entregarse como n=2 (ya que las primeras 2 columnas son de indices)~
~
Adicionalmente tengo que tener un array creado donde se indique que columnas de la tabla son indice y cuales valores, la funcion de agregacion para cada valor incluido en mi array.~
~
Este array, para este ejemplo, se vera de la siguinte forma:~
                 Indice     Valor    Agregacion~
indice_1       1            0 ~
indice_2       1            0~
valor_1        1            1               'sum'~
valor_2        1            1               'average'~
~
Asi, yo le tengo que pasar este array adicional, y el indice de las filas. El indice de Indice/Valor/Agregacion ya existe y la funcion funciona por defecto con este.~
~
Las funciones de agregacion disponibles son:~
'sum'~
'average'~
'min'~
'max'~
'product'
Definition: index rows:=copyindex(tabla.i1);~
index cols:=copyindex(tabla.i2);~
var n:=sum(array_agrupacion[I_IndiceValor='Indice'],indice_agrupacion);~
index colsarray:=cols[@cols=1..n];~
index vals:= cols[@cols=n+1..size(cols)];~
var agrupacion:=array_agrupacion[indice_agrupacion=vals,I_IndiceValor='Agregacion'];~
agrupacion:=array(vals,agrupacion);~
var table:=tabla[tabla.i1=rows, tabla.i2=cols];~
~
mdtable(table,rows,cols,colsarray,valueColumn: vals,conglomerationFn:agrupacion)
NodeLocation: 392,400,1
NodeSize: 64,24
WindState: 2,703,60,889,700

Function F_Crear_Tabla_Eq(Table;Indice1,Indice2,Valor:Text)
Title: Funcion Crear Tabla Equivalencia
Description: Crea una tabla de equivalencia a partir de una base de datos indexada por indices locales i1 e i2. Esta funcion es compatible con la funcion lectura tabla. ~
~
Los parametros de entrada son en formato de TEXTO, los dos indices para crear la tabla y el nombre de la columna con valores (necesaria para crear la equivalencia y con la menor cantindad de null posible)~
~
La tabla de equivalencia es entre 2 indices de la base de datos, y permite establecer parentesco entre ambos.~
~
Especialmente util para crear "Index Child" en Cubeplan.
Definition: index i2:=[Indice1,Indice2,Valor];~
var tabla:=table[.i2=i2];~
var cubo:=f_table_to_Array(tabla);~
if abs(cubo)>0 then 1 else 0
NodeLocation: 664,456,1
NodeSize: 64,24
WindState: 2,413,476,1007,359

Function F_Concatenar_Indices(Indice1,Indice2:index;sep:text optional='-')
Title: Concatenar Indices
Description: Crea un Indice a partir del cruze entre ambos indices entregados, separados por el separador (default "-").~
~
Si el indice 1 tiene largo n, el indice 2 largo m, el indice resultante tendra largo n*m~
~
Programada por PBH Agosto 2017
Definition: index i1:=sort(indice1,indice1);~
index i2:=sort(indice2,indice2);~
var cubo:=i1&sep&i2;~
var tabla:=f_array_to_table(cubo);~
index i:=tabla[.i2='valor'];~
copyindex(i)
NodeLocation: 688,768,1
NodeSize: 48,32
WindState: 2,102,82,851,365

Function F_Tabla_Concat_I(param1;I,J,K:Index)
Title: Tabla Concatenando Indices
Description: Para esta funcion se tiene que haber creado el indice de la forma K=F_Concatenar_Indices(I,J).~
~
Funciona de la siguiente forma:~
   m  e  s~
a 1  2  3~
n  9  8  7  ~
o  5  4  6~
=>~
a-m 1~
a-e 2~
a-s 3~
n-m 9~
n-e 8~
n-s 7~
o-m 5~
o-e 4~
o-s 6~
~
JMV Agosto 2017
Definition: var Kvar=K;~
Index aux:=1..2;~
var sep=SplitText(Kvar,'-',resultindex:aux);~
var ik=sep[.aux=1];~
var jk=sep[.aux=2];~
~
var ivar=numbertoText(I);~
var jvar=numberToText(J);~
~
var Matriz:= if ik=ivar and jk=jvar then 1 else 0;~
~
sum(Matriz*param1,I,J)~

NodeLocation: 792,768,1
NodeSize: 64,32
WindState: 2,1006,0,668,379

Variable GL_Reset
Title: Reset BD
Definition: 858
NodeLocation: 264,296,1
NodeSize: 48,24
WindState: 2,102,82,476,224

Button GL_Releer_BasesDatos
Title: Releer Bases de Datos
Description: Permite leer nuevamente una base de datos (REFRESH). Util para cuando se han realizado cambios a la base de datos externa al modelo.~
~
Se puede apretar en EDIT MODE utilizando ALT+CLICK~
~
Obliga a la funcion lectura tabla a evaluarse nuevamente, lo que obliga a leer nuevamente la base de datos.~
~
Se debe esperar que la base de datos se guarde correctamente antes de tratar de leerla nuevamente, para evitar conflictos de archivos del ODBC~
~
pbh, Agosto 2017
NodeLocation: 264,240,1
NodeSize: 48,24
NodeInfo: 1,1,0,1,1,1,0,,1,,0
WindState: 2,-38,138,1008,363
Aliases: Alias Al1175045245
Script: ( GL_Reset := GL_Reset+1 )

Function F_DSN(DSN_name;Source_type: optional text='Excel';Path_relativo: optional boolean=true)
Title: Funcion DSN
Description: Genera un DSN para conectarse a una base de datos a traves de ODBC, sin necesidad de configurar en ODBC a priori.~
~
-DSN_name: Nombre del archivo junto con su extension (ej: para excel es .xlsx). El path es por defecto relativo a la ubicacion del modelo.~
-Source_type: "Excel" (por defecto) o "Access"~
-Path_relativo: Boolean para dar la opcion de entregar path absoluto~
~
PBH AGOSTO 2017
Definition: var driver_name:= If Source_type="Excel" then "Driver=Microsoft Excel Driver (*.xls, *.xlsx, *.xlsm, *.xlsb)" else "Driver=Microsoft Access Driver (*.mdb, *.accdb)";~
var path:=if Path_relativo=True then CurrentDataDirectory()&DSN_name else DSN_name;~
driver_name&";DBQ="&path
NodeLocation: 152,224,1
NodeSize: 48,24
WindState: 2,562,185,1307,417

Function f_table_to_array_dir(Tabla :Array,Indices : array , Valores :array, Agrupacion: array optional=['sum'])
Title: Tabla to array directo
Description: Genera un arreglo a partir de una tabla, para multiples dimensiones y valores, con agrupaciones dadas (i.e. sum, average, min,max)~
~
var t->~
ano mes dia c      e      p~
1     2      1   0.8   1      5~
1     2      2   1.2   0      7~
2     1     1     0.9  1      7~
2    2      2    1.1    0     8~
~
f_table_to_array_dir(t,['ano','mes'],['c','p'],['average','min'])~
~
vals=c~
ano - mes ~
          1     2~
      1   -    1~
      2  0.9 1.1~
~
vals=p~
ano - mes ~
          1     2~
      1   -    5~
      2   7   8~
~
JMV y PBH Agosto 2017~
~
PBH Abril 2019: Agrega valor por defecto en agrupacion
Definition: index rows:=copyindex(Tabla.i1);~
index cols:=concat(Indices,Valores);~
var t1:= Tabla[.i1=rows,.i2=cols];~
~
index ind:=Indices;~
index vals:= valores;~
index agr=agrupacion;~
~
var cubo:=mdtable(t1,rows,cols,vars: ind, valuecolumn: vals, conglomerationFn: array(vals,agr));~
~
if size(cubo.vals)=1 then cubo[@ .vals=1] else cubo
NodeLocation: 672,400,1
NodeSize: 48,24
WindState: 2,215,203,1023,463

Function F_Crear_Var_Agg(Table;IndiceDetalle,IndiceAgregado)
Title: Funcion Crear Variable Agregacion
Description: Crea una variable de agregacion a partir de una base de datos indexada por indices locales i1 e i2. Esta funcion es compatible con la funcion lectura tabla. ~
~
Los parametros de entrada son en formato de TEXTO, los dos indices para crear la tabla y el nombre de la columna con valores (necesaria para crear la equivalencia y con la menor cantindad de null posible)~
~
La tabla de equivalencia es entre 2 indices de la base de datos, y permite establecer parentesco entre ambos.~
~
Especialmente util para utilizarla como parametro "map" en la funcion "Aggregate" de Lumina. Esta funcion permite realizar equivalencia gastando MUCHO MENOS recursos de CPU y RAM.
Definition: index i2:=[IndiceDetalle,IndiceAgregado];~
var tabla:=table[.i2=i2];~
F_Table_to_Array(tabla,'max')
NodeLocation: 640,520,1
NodeSize: 64,32
WindState: 2,398,23,1007,533
DisplayOutputs: Variable Agg_comuna, Variable Agg_Provincia, Variable Agg_Region

Function F_arrayToTable_0Null(param1)
Title: Array to Table sin 0 y Null
Description: PBH-~
La funcion array to table clasica pero eliminando adicionalmente los valores Null
Definition: index i3:=sequence(1, size(param1));~
index i2:= concat(indexnames(param1),['valor' ]);~
var table:=MDArrayTOTable(param1,i3,i2);~
~
var tabla_col:=table[.i2='valor'];~
var filas_sel:= ~
   if tabla_col<>0 and tabla_col<>Null then @tabla_col.i3 else 0;~
index i1:=subset(filas_sel>0);~
table[.i3=i1]
NodeLocation: 1192,440,1
NodeSize: 48,24
WindState: 2,102,82,1224,347

Function F_Array2Table_NoNull(param1)
Title: Array to Table sin Null
Description: PBH -~
La funcion arry to table sin Null  no  funcionaba como queria~
Esta es mas simple y funciona en todas las versiones de analytica~
~
Basicamente creo la tabla y luego filtro dejando fuera los NULL~
~
Creada a partir de la funcion de Sin 0 de JMV
Definition: index i3:=sequence(1, size(param1));~
index i2:= concat(indexnames(param1),['valor' ]);~
var table:=MDArrayTOTable(param1,i3,i2);~
~
var tabla_col:=table[.i2='valor'];~
var filas_sel:= ~
   if tabla_col<>Null then @tabla_col.i3 else 0;~
index i1:=subset(filas_sel > 0);~
table[.i3=i1]
NodeLocation: 520,448,1
NodeSize: 48,24
WindState: 2,102,82,1224,347

Function F_Aggregate_Tabla_2D(tabla; map; col_index: Index;col_nueva:text)
Title: Aggregate Tabla 2D
Description: Funcion para realizar un "Aggregate" (cambio de indices) pero para una columna de una Tabla 2D.~
~
Funciona con tablas estandar GL, con indices locales "i1" e "i2"~
~
Recibe:~
 - tabla: Tabla 2D con indices locales "i1" e "i2"~
 - map: Variable indexada por col_index con el valor de destino para el nuevo indice (cambio columna)~
 - col_index: Indice con el mismo nombre de la columna que se desea modificar~
 - col_nueva: Nombre de la nueva columna~
~
PBH SEPTIEMBRE 2019
Definition: { paso el indice a texto para filtrarlo despues}~
local columna:=Identifier of col_index;~
~
{ genero el cambio de valores en la columna deseada}~
local a:=if tabla.i2=columna then ~
map[col_index=tabla[.i2=columna]] ~
else tabla;~
~
{cambio de nombres de columnas}~
F_Cambiar_Nombre_Col(a,columna,col_nueva)
NodeLocation: 424,248,1
NodeSize: 56,24
WindState: 2,534,58,799,752
DisplayOutputs: Function F_Map_Sexo_Tabla

Function F_Parse_Columnas(x)
Title: Parse Columnas
Description: Convierte a numero ciertas columnas clave, para que funcionen bien los maps entre codigos!~
~
Asegura que los codigos siempre esten en formato numero~
~
PBH Dic 2019
Definition: if x.i2='NIVEL_INS' then ParseNumber(x)~
else if x.i2='Nivel_Madre' then ParseNumber(x)~
else if x.i2='Nivel_Padre' then ParseNumber(x) ~
else if x.i2='Ano_Tasa' then ParseNumber(x)~
else if x.i2='Activ_Padre' then ParseNumber(x)~
else if x.i2='Activ_Madre' then ParseNumber(x)~
else x
NodeLocation: 872,448,1
NodeSize: 48,24

Function F_Eq_to_Map(tabla; i:index)
Title: F Crear Map desde Eq
Description: Funcion que a partir de una tabla de equivalencia o tabla de verdad genera un mapa. Se le entrega la tabla a cambiar y el indice que quiere que se convierta en el valor del map~
ej~
Tabla(i,j)~
	N O E S~
a1	0 1 0  0~
a2   1 0 0 0~
a3	1 0 0 0~
a4   0 0 0 1	~
-->~
MAP~
	valor~
a1  O~
a2	N~
a3	N~
a4	S~
~
JMV Feb 2020
Definition: var a:=if tabla=1 then ~
i else "";~
JoinText( a,i, "" )
NodeLocation: 800,512,1
NodeSize: 64,24

Close Funciones_arrays

Library Funciones__financie
Title: Funciones  Financieras
Author: ayudanteslac
Date: Jue, 16 de Oct de 2008 17:32
DefaultSize: 48,24
NodeLocation: 288,304,1
NodeSize: 72,32
DiagState: 2,-7,0,1278,450,17

Function F_valor_anualizado1( tasa,vu,costo)
Title: Valor anualizado
Description: Funcion para calc ular el valor anualizado en funcion de la tasa de descuento y la vida util.~
~
ASUME que no HAY VALOR RESIDUAL
Definition: -pmt(tasa,vu,costo,0)
NodeLocation: 112,64,1
NodeSize: 48,24
WindState: 2,102,90,476,224
DisplayOutputs: Variable Costos_inv_justo

Function F_indicadores_all1(costo; ben; I_ano: index; tasa_desc;ano_hoy)
Title: Calcula Indicadores De Rentabilidad
Description: esta FUNCION ESTA OB SOLETA ... CAMBIAR POR CALCULO BENEFICIOS Y  COSTOS MANUALES
Definition: index ind_econ = ["VP Costo", "VP Ben", "Ben Neto","B/C"];~
var vp_ben:=npv(tasa_desc,ben,i_ano)*(1+tasa_desc)/(1+tasa_desc)^(min(anos_evaluacion)-ano_hoy);~
var vp_costo:=npv(tasa_desc,costo,i_ano)*(1+tasa_desc)/(1+tasa_desc)^(min(anos_evaluacion)-ano_hoy);~
var bc := if vp_costo = 0 then 0 else vp_ben/vp_costo;~
array(ind_econ, [vp_costo, vp_ben,vp_ben-vp_costo, bc])~

NodeLocation: 152,120,1
NodeSize: 84,24
WindState: 2,0,-23,1441,760

Index Ej_Anos
Att_PrevIndexValue: [1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016]
Title: 1930 to 2016
Definition: 1930..2016
NodeLocation: 488,120,1
NodeSize: 48,24
WindState: 2,102,82,476,224

Constant GDP_Chained
Title: GDP Chained
Units: Billions of 2009 dollars
Description: Current-Dollar and "Real" Gross Domestic Product~
www.bea.gov/national/xls/gdplev.xls
Definition: Table(Ej_Anos)(966.7,904.8,788.2,778.3,862.2,939,1060.5,1114.6,1077.7,1163.6,1266.1,1490.3,1771.8,2073.7,2239.4,2217.8,1960.9,1939.4,2020,2008.9,2184,2360,2456.1,2571.4,2556.9,2739,2797.4,2856.3,2835.3,3031,3108.7,3188.1,3383.1,3530.4,3734,3976.7,4238.9,4355.2,4569,4712.5,4722,4877.6,5134.3,5424.1,5396,5385.4,5675.4,5937,6267.2,6466.2,6450.4,6617.7,6491.3,6792,7285,7593.8,7860.5,8132.6,8474.5,8786.4,8955,8948.4,9266.6,9521,9905.4,10.1748K,10.561K,11.0349K,11.5259K,12.0659K,12.5597K,12.6822K,12.9088K,13.2711K,13.7735K,14.2342K,14.6138K,14.8737K,14.8304K,14.4187K,14.7838K,15.0206K,15.3546K,15.6122K,16.0133K,16.4715K,16.7162K)
NodeLocation: 576,120,1
NodeSize: 48,24
WindState: 2,102,82,476,224
DefnState: 2,1159,237,400,546,0,DFNM
ValueState: 2,88,90,951,529,0,MIDM

Function F_Conv_dolar(dolar,anoentrada,anosalida)
Title: Convertir Dolar
Units: USD
Definition: dolar*GDP_Chained[Ej_Anos=anosalida]/GDP_Chained[Ej_Anos=anoentrada]
NodeLocation: 512,72,1
NodeSize: 64,24
WindState: 2,102,82,732,335

Constant Inflaciones_Chile
Title: Inflaciones Chile
Units: %
Description: Datos extraidos mediante Web Scraping a la web http://encina.ine.cl/CALCULADORA/.~
Fecha Extraccion: 22 Marzo 2018~
Codidgo compilado por PBH.~
~
~

Definition: Table(Inf_Periodo_Inicio,Inf_Periodo_Fin)(~
0.074,0.018,0.018,0.259,0.315,0.37,0.352,0.518,0.667,0.704,0.833,1,1.463,2.091,2.333,2.833,3.129,4.371,5.611,6.723,8.314,9.851,12.389,13.999,22.424,39.079,72.668,100.442,117.935,156.595,208.979,220.47,241.754,308.979,449.524,622.841,783.95,917.097,1118.096,1430.727,1850.825,2497.719,3050.638,8037.845,48.879481K,232.611121K,1.025120624M,2.812116821M,4.597577737M,5.991575694M,8.322299026M,10.922044154M,11.963979341M,14.444492087M,17.780002838M,21.876438744M,27.655326229M,32.455176814M,39.417381696M,44.416651154M,53.926898566M,68.664694037M,81.476164138M,91.81897202M,103.052725665M,112.27153947M,121.475916654M,129.531551267M,137.362387065M,143.77018449M,147.090607359M,153.747952093M,157.800517893M,162.257309086M,163.997953125M,167.980398193M,174.134523561M,178.605751375M,192.578338294M,206.237444296M,203.39169521M,209.438666886M,218.733082049M,221.983610207M,228.678253844M,239.303855088M,249.782932795M,256.547425959M,262.370069173M,~
'',-0.052,-0.052,0.172,0.224,0.276,0.259,0.414,0.552,0.586,0.707,0.862,1.293,1.878,2.104,2.569,2.844,4.001,5.156,6.191,7.672,9.104,11.467,12.966,20.811,36.319,67.594,93.455,109.743,145.74,194.516,205.216,225.034,287.629,418.493,579.874,729.886,853.862,1041.017,1332.115,1723.278,2325.617,2840.452,7484.159,45.512774K,216.589654K,954.514018K,2.61842849M,4.280913426M,5.578897931M,7.749089614M,10.169773861M,11.139944386M,13.449608538M,16.555381579M,20.369670048M,25.750529021M,30.219783555M,36.702457376M,41.357395543M,50.212612099M,63.935322431M,75.8643856M,85.494818921M,95.95483294M,104.538688762M,113.109102304M,120.609894438M,127.901371073M,133.867822983M,136.959547339M,143.158358658M,146.931798633M,151.081622443M,152.702377323M,156.410526225M,162.140778076M,166.304044166M,179.314250697M,192.032567724M,189.382823367M,195.013301878M,203.667551915M,206.694195651M,212.927736861M,222.821485778M,232.578803161M,238.877382919M,244.298983888M,~
'','',0,0.236,0.291,0.346,0.327,0.491,0.637,0.673,0.8,0.964,1.418,2.036,2.273,2.764,3.054,4.274,5.492,6.583,8.146,9.656,12.148,13.728,0.221,38.356,71.339,98.612,115.789,153.751,205.19,216.474,237.374,303.386,441.394,611.585,769.786,900.531,109.793,1404.893,1817.41,2452.632,2995.573,7892.79,47.997473K,228.413826K,1.006623144M,2.761374459M,4.514618195M,5.8834626M,8.172129939M,10.724964795M,11.748099116M,14.183853041M,17.459177232M,21.481696307M,27.156308501M,31.869549714M,38.706127312M,43.615189047M,52.953831835M,67.425695858M,80.005993475M,90.16217386M,101.193223623M,110.245691483M,119.28398322M,127.194260505M,134.883795285M,141.175969254M,144.436477813M,150.973696214M,154.953136784M,159.32950883M,161.038744373M,164.949329482M,170.992408698M,175.382956869M,189.103419901M,202.516058524M,199.721658649M,205.659517674M,214.786222729M,217.978097769M,224.551942045M,234.985813018M,245.275804351M,251.918237777M,257.635816163M,~
'','','',0.236,0.291,0.346,0.327,0.491,0.637,0.673,0.8,0.964,1.418,2.036,2.273,2.764,3.054,4.274,5.492,6.583,8.146,9.656,12.148,13.728,0.221,38.356,71.339,98.612,115.789,153.751,205.19,216.474,237.374,303.386,441.394,611.585,769.786,900.531,109.793,1404.893,1817.41,2452.632,2995.573,7892.79,47.997473K,228.413826K,1.006623144M,2.761374459M,4.514618195M,5.8834626M,8.172129939M,10.724964795M,11.748099116M,14.183853041M,17.459177232M,21.481696307M,27.156308501M,31.869549714M,38.706127312M,43.615189047M,52.953831835M,67.425695858M,80.005993475M,90.16217386M,101.193223623M,110.245691483M,119.28398322M,127.194260505M,134.883795285M,141.175969254M,144.436477813M,150.973696214M,154.953136784M,159.32950883M,161.038744373M,164.949329482M,170.992408698M,175.382956869M,189.103419901M,202.516058524M,199.721658649M,205.659517674M,214.786222729M,217.978097769M,224.551942045M,234.985813018M,245.275804351M,251.918237777M,257.635816163M,~
'','','','',0.044,0.088,0.074,0.206,0.324,0.353,0.456,0.588,0.956,1.455,1.647,2.045,2.279,3.266,4.25,5.133,6.397,7.618,9.634,10.912,1.763,30.831,5.757,79.565,93.458,124.162,165.765,174.892,191.795,245.185,35.686,494.455,62.247,728.152,887.786,1136.077,1469.719,1983.482,2422.61,6383.448,38.819865K,184.739485K,814.150324K,2.233382233M,3.651394822M,4.758507632M,6.609567489M,8.674284384M,9.501789036M,11.471811605M,14.120873365M,17.374261683M,21.963852601M,25.775892672M,31.305273956M,35.275692442M,42.828728432M,54.533481713M,64.708347894M,72.922603189M,81.844447375M,89.166026871M,96.476140806M,102.873923694M,109.093171422M,114.18224245M,116.819321418M,122.106582853M,125.325129544M,128.864711935M,130.247130972M,133.409987797M,138.297592543M,141.848640495M,152.945665346M,163.793723735M,161.53363056M,166.336133873M,173.717755947M,176.299324555M,181.616208768M,190.055058477M,198.377539232M,203.749897921M,208.374239628M,~
'','','','','',0.042,0.028,0.155,0.268,0.296,0.394,0.521,0.873,1.351,1.535,1.916,2.14,3.085,4.028,4.874,6.084,7.254,9.184,1.048,16.817,29.485,55.033,76.158,89.463,118.869,158.713,167.454,183.642,234.775,341.675,47.354,596.045,697.319,85.022,1087.994,1407.527,1899.565,2320.123,6113.471,37.178257K,176.92741K,779.72251K,2.138939714M,3.496989158M,4.557285765M,6.330070315M,8.307477042M,9.099989211M,10.986705928M,13.523747474M,16.639560571M,21.035072604M,24.685913887M,29.981475604M,33.783997994M,41.017640636M,52.227437935M,61.972042088M,69.83894322M,78.383511607M,85.395485297M,92.396478268M,98.523719707M,104.479975658M,109.353846409M,111.879411877M,116.943092206M,120.025537016M,123.41544197M,124.739402998M,127.768512885M,132.449436709M,135.850322382M,146.478090112M,156.867419362M,154.702898184M,159.302319237M,166.371796501M,168.84419896M,173.936249417M,182.018247595M,189.988797682M,195.13397678M,199.562770103M,~
'','','','','','',-0.014,0.108,0.216,0.243,0.338,0.46,0.797,1.256,1.433,1.797,2.013,2.92,3.824,4.636,5.797,6.919,8.771,9.946,16.094,28.248,52.76,73.028,85.793,1.146,152.234,160.62,176.151,225.21,327.773,454.253,571.823,668.988,815.669,1043.814,1350.383,1822.46,2225.956,586.549,35.669906K,169.74948K,748.089373K,2.052163562M,3.355117368M,4.372398075M,6.073261314M,7.970445273M,8.730805472M,10.540978685M,12.975093254M,15.964498795M,20.181686287M,23.684414088M,28.765136533M,32.413391787M,39.353567823M,50.108587173M,59.457855802M,67.00559923M,75.203517167M,81.931017291M,88.64798218M,94.526643362M,100.241255884M,104.917395232M,107.340499303M,112.198747715M,115.156138709M,118.408516286M,119.678764632M,122.584984484M,127.076004701M,130.338917513M,140.53552005M,150.503357482M,148.426650247M,152.839474235M,159.622145031M,161.994242901M,166.879710474M,174.633824528M,182.281011907M,187.217452707M,191.466571279M,~
'','','','','','','',0.123,0.233,0.26,0.356,0.48,0.822,1.287,1.466,1.836,2.055,2.973,3.891,4.713,5.89,7.028,8.905,10.096,16.329,28.651,5.35,74.047,86.988,115.589,154.343,162.845,178.59,228.324,332.299,460.521,57.979,678.212,826.912,1058.198,1368.988,1847.563,2256.614,5946.171,36.160983K,172.086413K,758.388236K,2.080415447M,3.40130685M,4.432592329M,6.156871133M,8.080173378M,8.851001359M,10.686094993M,13.153719703M,16.184280004M,20.459524973M,24.010474376M,29.161142471M,32.859622784M,39.895343329M,50.798425643M,60.276404448M,67.928056686M,76.238834301M,83.058951052M,89.86838753M,95.827979483M,101.621264338M,106.361779493M,108.818242126M,113.743373417M,116.741478431M,120.038631071M,121.326366761M,124.272596168M,128.825443681M,132.133276592M,142.470254442M,152.575317806M,150.47002081M,154.943595577M,161.819642527M,164.224396762M,169.177121937M,177.037985879M,184.7904511M,189.794851245M,194.102466883M,~
'','','','','','','','',0.098,0.122,0.207,0.317,0.622,1.036,1.195,1.525,1.719,2.537,3.354,4.086,5.134,6.146,7.817,8.877,14.426,25.394,47.514,6.585,77.324,102.784,137.281,144.849,158.865,203.136,295.692,409.83,515.928,603.611,735.979,941.862,1218.516,1644.528,2008.651,5292.968,32.189163K,153.185343K,675.091217K,1.851914724M,3.027727174M,3.945742313M,5.480636461M,7.192694485M,7.878859248M,9.512396976M,11.708992282M,14.406693641M,18.212370814M,21.373304791M,25.958253757M,29.250514716M,35.513473042M,45.219024837M,53.65599812M,60.46723782M,67.865208437M,73.936243623M,79.997771596M,85.302796973M,90.459781448M,94.679626263M,96.866285469M,101.250469268M,103.919280037M,106.854292797M,108.000591164M,110.623224037M,114.676013522M,117.620533496M,126.822158414M,135.817340973M,133.943277433M,137.925501024M,144.046323365M,146.18695352M,150.595700452M,157.593173272M,164.494153249M,168.948899476M,172.783391915M,~
'','','','','','','','','',0.022,0.1,0.2,0.478,0.855,1,1.3,1.477,2.223,2.967,3.634,4.588,5.511,7.033,7.999,13.054,23.047,4.321,59.865,70.361,93.557,124.987,131.882,144.652,184.987,269.314,37.335,469.97,549.858,670.458,858.036,1110.095,1498.232,1829.983,482.237,29.327289K,139.566273K,615.071975K,1.687269693M,2.758546242M,3.594945016M,4.993379016M,6.553226092M,7.178387205M,8.666694852M,10.668001303M,13.125862846M,16.593195337M,19.473105688M,23.650428618M,26.649990292M,32.35613874M,41.198816022M,48.885698083M,55.091382812M,61.831634999M,67.362923282M,72.885549592M,77.71893036M,82.417431839M,86.262110294M,88.254364016M,92.248770856M,94.680310336M,97.354385052M,98.398771475M,100.788238516M,104.480713736M,107.163450425M,115.547002576M,123.742466177M,122.035016726M,125.663199731M,131.239848829M,133.190165724M,137.206951907M,143.582312653M,149.869759277M,153.928455175M,157.422041104M,~
'','','','','','','','','','',0.076,0.174,0.446,0.815,0.957,1.25,1.424,2.153,2.88,3.533,4.467,5.369,6.859,7.804,12.749,22.525,42.241,58.544,68.812,9.154,122.252,128.997,141.49,180.95,263.446,365.179,459.746,53.79,655.881,839.387,1085.974,1465.685,1790.234,4717.598,28.690601K,136.536407K,601.719357K,1.650640737M,2.698660946M,3.51690234M,4.884977739M,6.410962098M,7.02255159M,8.478549569M,10.436409662M,12.840913494M,16.232973671M,19.050364054M,23.137001489M,26.071445685M,31.653719368M,40.304430986M,47.82443854M,53.895404072M,60.489332138M,65.900541695M,71.303277321M,76.031730236M,80.628231956M,84.389446294M,86.338450184M,90.246142454M,92.624895648M,95.240918881M,96.262632722M,98.600226828M,102.212542111M,104.837039274M,113.038592909M,121.056141207M,119.385758772M,122.93517756M,128.390763194M,130.298740664M,134.228326443M,140.465284496M,146.616236954M,150.586822631M,154.004566309M,~
'','','','','','','','','','','',0.091,0.343,0.686,0.818,1.091,1.252,1.93,2.606,3.213,4.081,4.919,6.304,7.182,11.778,20.863,39.185,54.336,63.878,84.966,113.541,119.81,131.42,168.09,244.756,339.299,427.182,499.812,609.455,779.992,1009.151,1362.025,1663.636,438.416,26.66279K,126.886475K,559.192106K,1.533979809M,2.507930032M,3.268341312M,4.53972647M,5.957860199M,6.526224928M,7.879318642M,9.69880481M,11.933367677M,15.085690254M,17.703958459M,21.501768279M,24.22881739M,29.416557713M,37.455870732M,44.444393444M,50.08628678M,56.214181696M,61.24294804M,66.263839357M,70.658103639M,74.929742522M,78.425128882M,80.236384768M,83.867896571M,86.078528755M,88.509661656M,89.459164742M,91.631546803M,94.988557713M,97.42756564M,105.049465411M,112.500364626M,110.948038315M,114.246598009M,119.316604102M,121.089733156M,124.741591119M,130.537745272M,136.25397237M,139.943932518M,143.120123386M,~
'','','','','','','','','','','','',0.231,0.546,0.667,0.917,1.064,1.686,2.305,2.861,3.657,4.426,5.695,6.499,10.712,19.04,35.834,49.721,58.467,77.797,103.989,109.735,120.377,153.99,224.262,310.921,391.475,458.048,558.548,714.864,924.912,1248.36,1524.819,4018.422,24.439241K,116.30506K,512.559812K,1.406057911M,2.298788369M,2.995787347M,4.161149013M,5.461021577M,5.981989171M,7.222245543M,8.890000919M,10.938218872M,13.827662614M,16.227587907M,19.708690348M,22.208325077M,26.963448783M,34.332346518M,40.738081569M,45.90948551M,51.526362333M,56.135769235M,60.737957827M,64.765775133M,68.681193032M,71.885091745M,73.54530318M,76.873975547M,78.900258447M,81.128654043M,81.998976062M,83.990198597M,87.06726128M,89.302875187M,96.289168647M,103.118721648M,101.695847105M,104.719332943M,109.366540524M,110.991804604M,114.339126422M,119.651927044M,124.891465898M,128.273712479M,131.185034087M,~
'','','','','','','','','','','','','',0.255,0.353,0.556,0.676,1.181,1.684,2.136,2.782,3.406,4.436,5.09,8.511,15.273,28.911,40.188,47.291,62.988,84.257,88.923,97.564,124.859,181.924,252.296,317.71,371.771,453.382,580.318,750.888,1013.544,1238.044,3262.978,19.845735K,94.445515K,416.224793K,1.141791293M,1.866734429M,2.432733517M,3.379067244M,4.434630751M,4.857683284M,5.864835371M,7.21913868M,8.882397206M,11.228774425M,13.177637436M,16.004472007M,18.034304218M,21.89570971M,27.879634406M,33.081421369M,37.280867863M,41.842061292M,45.58513723M,49.322351527M,52.593146743M,55.772667847M,58.374398705M,59.722575944M,62.42562944M,64.071075574M,65.880647632M,66.587393962M,68.204369271M,70.703102738M,72.518536437M,78.191766745M,83.737715724M,82.582268271M,85.037494578M,88.811266615M,90.131064801M,92.849262613M,97.163530498M,101.418306052M,104.164864571M,106.529007743M,~
'','','','','','','','','','','','','','',0.078,0.24,0.336,0.737,1.138,1.498,2.013,2.51,3.331,3.852,6.577,11.965,22.83,31.814,37.473,49.978,66.923,70.64,77.525,99.271,144.734,200.798,252.913,295.983,3.611,462.13,598.022,807.277,986.133,2599.377,15.810687K,75.243553K,331.601748K,909.65301K,1.487207645M,1.938133214M,2.692067423M,3.533023859M,3.870065399M,4.672452962M,5.751412281M,7.076513001M,8.945847256M,10.498486089M,12.750595705M,14.367741856M,17.444083333M,22.211413722M,26.355623136M,29.701278355M,33.335133583M,36.31720314M,39.294602788M,41.900411219M,44.433502518M,46.506274355M,47.580353099M,49.733847624M,51.044757396M,52.486424579M,53.049482008M,54.337709371M,56.32842426M,57.774761352M,62.294564762M,66.712964465M,65.792431531M,67.74848472M,70.755009539M,71.806478987M,73.972038831M,77.409171054M,80.798906357M,82.98706088M,84.870549085M,~
'','','','','','','','','','','','','','','',0.15,0.239,0.611,0.983,1.317,1.794,2.255,3.017,3.5,6.027,11.024,2.11,29.433,34.68,46.278,61.994,65.441,71.826,91.994,134.157,186.153,234.485,274.429,334.729,428.518,554.548,748.616,914.492,2410.655,14.663153K,69.782679K,307.535678K,843.634868K,1.379273475M,1.79747312M,2.496690553M,3.276614573M,3.589195323M,4.333349607M,5.334003452M,6.562934984M,8.296602302M,9.736558368M,11.825221125M,13.32500289M,16.17807888M,20.599420256M,24.442863665M,27.545707949M,30.915836128M,33.68148198M,36.442796844M,38.859488723M,41.208740916M,43.131081333M,44.12720881M,46.124413466M,47.340183958M,48.677222143M,49.199415678M,50.394149937M,52.24038869M,53.581757864M,57.773536533M,61.871270869M,61.017545615M,62.83163824M,65.619964515M,66.595123565M,68.603517899M,71.791200245M,74.934925502M,76.964274706M,78.711068751M,~
'','','','','','','','','','','','','','','','',0.077,0.401,0.725,1.015,1.43,1.831,2.493,2.913,5.11,9.455,18.217,25.462,30.025,40.11,53.775,56.773,62.325,79.862,116.524,161.736,203.763,238.496,290.929,372.483,482.07,650.82,795.055,2096.027,12.750046K,60.678595K,267.413976K,733.572852K,1.199331232M,1.562971917M,2.170968381M,2.84914233M,3.12094332M,3.768014106M,4.638121131M,5.706724389M,7.214214836M,8.466312047M,10.282484689M,11.586602648M,14.06746201M,17.911988477M,21.254010422M,23.952052929M,26.882509067M,29.287344562M,31.688414095M,33.789820682M,35.832585866M,37.504134833M,38.370306007M,40.10695231M,41.164111538M,42.326717691M,42.780785064M,43.819652478M,45.425028119M,46.591400234M,50.236313092M,53.799450784M,53.057103823M,54.634527169M,57.059084163M,57.907022483M,59.653398642M,62.425211108M,65.158801194M,66.92339842M,68.442303061M,~
'','','','','','','','','','','','','','','','','',0.301,0.601,0.87,1.256,1.628,2.243,2.633,4.673,8.707,16.842,23.569,2.786,37.169,49.856,52.639,57.794,74.076,108.116,150.093,189.113,221.361,270.042,345.76,44.757,604.183,738.098,1945.986,11.83772K,56.337025K,248.280676K,681.086307K,1.113520097M,1.451142621M,2.015637489M,2.645288706M,2.897642582M,3.498416039M,4.306267694M,5.298413357M,6.698044229M,7.860555019M,9.546782154M,10.757591654M,13.060947777M,16.630401858M,19.73330516M,22.23830517M,24.959089827M,27.191861521M,29.421136705M,31.372189554M,33.26879674M,34.820747893M,35.624945304M,37.237336138M,38.21885658M,39.298279316M,39.71985858M,40.684395972M,42.17490844M,43.257827687M,46.641950333M,49.950148751M,49.260916042M,50.725476177M,52.976558315M,53.763827417M,55.385251944M,57.958743739M,60.496747931M,62.135089824M,63.545318214M,~
'','','','','','','','','','','','','','','','','','',0.231,0.438,0.734,1.02,1.493,1.793,3.361,6.462,12.716,17.887,21.144,28.342,38.095,40.234,44.197,56.713,82.881,115.15,145.146,169.935,207.358,265.565,343.781,464.223,567.168,149.579,9099.79,43.307783K,190.860807K,523.571888K,855.997123K,1.115538003M,1.549482675M,2.033515049M,2.227507282M,2.689340428M,3.310360992M,4.073054063M,5.148993622M,6.042651637M,7.338906612M,8.26969334M,10.040354463M,12.784304263M,15.169602043M,17.095273062M,19.186824415M,20.903225104M,22.616937916M,24.116772612M,25.574753242M,26.767786114M,27.385997548M,28.625492273M,29.380017408M,30.209803065M,30.53388409M,31.275353828M,32.421156883M,33.253630416M,35.855110207M,38.398224695M,37.868390185M,38.994242878M,40.724719372M,41.32991749M,42.576356695M,44.554679468M,46.505721823M,47.76516593M,48.84925213M,~
'','','','','','','','','','','','','','','','','','','',0.168,0.409,0.641,1.025,1.269,2.543,5.063,10.144,14.345,16.991,22.839,30.763,3.251,35.721,45.89,67.149,93.366,117.737,137.878,168.282,215.573,279.12,376.973,460.611,1215.01,7392.994,35.18549K,155.065864K,425.379053K,695.460005K,906.325609K,1.25888666M,1.652141776M,1.809751974M,2.184971189M,2.689523214M,3.309177948M,4.183331742M,4.909389762M,5.962540188M,6.718763661M,8.157348316M,10.386687417M,12.324637452M,13.889160862M,15.588454783M,16.98295521M,18.375271856M,19.593821893M,20.778367335M,21.747654321M,22.24992405M,23.256959257M,23.869977902M,24.544142426M,24.807444072M,25.409855778M,26.340770605M,27.017118911M,29.130707366M,31.196876567M,30.76640922M,31.681115251M,33.087051654M,33.578748634M,34.591425927M,36.198726583M,37.783863093M,38.8071063M,39.687878884M,~
'','','','','','','','','','','','','','','','','','','','',0.206,0.405,0.734,0.942,2.033,4.19,8.539,12.136,1.441,1.947,26.19,27.678,30.434,39.139,57.337,79.78,100.642,117.883,143.91,184.392,238.789,322.554,394.151,1039.934,6328.437,30.119484K,132.739972K,364.134575K,595.330379K,775.836417K,1.077637172M,1.414273028M,1.549191155M,1.870387845M,2.302296536M,2.83273592M,3.581032632M,4.202555792M,5.104077934M,5.75142345M,6.98288658M,8.89125457M,10.550186498M,11.889456237M,13.34409278M,14.537818749M,15.729675348M,16.772783543M,17.786782985M,18.616516001M,19.046470992M,19.908517396M,20.433276128M,21.010377206M,21.23576976M,21.751448696M,22.54833422M,23.127304667M,24.936587315M,26.705277939M,26.336787518M,27.119797922M,28.323313361M,28.744217824M,29.611093989M,30.986982081M,32.34389713M,33.219817973M,33.973780528M,~
'','','','','','','','','','','','','','','','','','','','','',0.165,0.438,0.61,1.515,3.303,6.91,9.892,11.77,15.921,21.545,22.779,25.064,32.282,47.372,65.98,83.278,97.574,119.155,152.721,197.826,267.282,326.647,862.112,5247.184,24.974022K,110.063925K,301.92955K,493.630336K,643.300655K,893.544998K,1.172673586M,1.284543744M,1.550870628M,1.90899666M,2.348821456M,2.969287165M,3.484635959M,4.232151705M,4.768911639M,5.790004786M,7.372367609M,8.747905357M,9.858388585M,11.064530586M,12.054333184M,13.042585755M,13.907500508M,14.748279135M,15.436269442M,15.792775523M,16.507559143M,16.942673708M,17.421189013M,17.608077915M,18.03566378M,18.696417907M,19.176483239M,20.6766874M,22.143233843M,21.837692382M,22.486941667M,23.484861407M,23.833863055M,24.552651373M,25.693497466M,26.818611667M,27.544899566M,28.170063225M,~
'','','','','','','','','','','','','','','','','','','','','','',0.234,0.382,1.159,2.693,5.789,8.348,9.96,13.523,18.35,1.949,21.371,27.566,40.518,56.49,71.337,8.367,102.13,130.94,169.654,229.268,280.222,739.815,4503.55,21.435225K,94.468446K,259.147968K,423.686008K,552.149023K,766.935381K,1.006513276M,1.102532165M,1.331122274M,1.638504192M,2.016008694M,2.548558475M,2.990885719M,3.632483379M,4.093187945M,4.969598879M,6.327751251M,7.508384308M,8.461519333M,9.496758911M,10.346312962M,11.194536615M,11.93689861M,12.658544411M,13.249050997M,13.5550425M,14.168545962M,14.542007642M,14.952720462M,15.11312843M,15.480128178M,16.047257772M,16.45930099M,17.746936044M,19.00568246M,18.743434223M,19.300689136M,20.157210183M,20.456760583M,21.073701302M,22.052896974M,23.01858986M,23.641967519M,24.178549582M,~
'','','','','','','','','','','','','','','','','','','','','','','',0.12,0.749,1.993,4.502,6.576,7.883,10.77,14.683,15.541,17.131,22.152,32.648,45.593,57.626,67.57,82.582,105.932,13.738,185.623,226.919,59.94,3649.752,17.372176K,76.562587K,210.028544K,343.379836K,447.493807K,621.569287K,815.737284K,893.556631K,1.078819481M,1.327939841M,1.633891661M,2.065501282M,2.42398926M,2.943977685M,3.317359724M,4.027654619M,5.128381069M,6.085235439M,6.857712044M,7.696731M,8.385259499M,9.072709766M,9.674363528M,10.259227669M,10.737808888M,10.985802374M,11.483021612M,11.785696892M,12.118562683M,12.248566722M,12.546004872M,13.005640005M,13.339584028M,14.383159102M,15.403321127M,15.190779754M,15.642411864M,16.336586826M,16.579360063M,17.079365057M,17.87296274M,18.655616972M,19.16083884M,19.595716458M,~
'','','','','','','','','','','','','','','','','','','','','','','','',0.562,1.672,3.912,5.763,6.93,9.507,0.13,13.766,15.185,19.667,29.037,40.593,51.334,60.211,73.612,94.456,122.465,165.594,202.458,534.965,3257.953,15.507684K,68.34577K,187.488138K,306.528145K,399.468588K,554.862258K,728.192112K,797.659873K,963.040282K,1.185425002M,1.458542021M,1.843831223M,2.16384621M,2.628029388M,2.961340003M,3.595405928M,4.578002227M,5.432166822M,6.121741105M,6.870716403M,7.485351906M,8.099024892M,8.63610907M,9.158205491M,9.585425291M,9.806804074M,10.250661658M,10.520853775M,10.817996353M,10.934048336M,11.199565373M,11.609872384M,11.907977478M,12.839555896M,13.750233957M,13.56050256M,13.963665435M,14.583341421M,14.800060193M,15.246404565M,15.954833209M,16.653492855M,17.104494225M,17.492700703M,~
'','','','','','','','','','','','','','','','','','','','','','','','','',0.711,2.145,3.331,4.077,5.728,7.964,8.455,9.363,12.233,18.233,25.633,32.51,38.195,46.776,60.122,78.057,105.673,129.278,342.188,2085.766,9929.487,43.762655K,120.051636K,196.275074K,255.786495K,355.287831K,466.274025K,510.75547K,616.651493K,759.048392K,933.930085K,1.180637627M,1.385548925M,1.682773685M,1.896198411M,2.302202121M,2.931376039M,3.47831285M,3.91985955M,4.39944178M,4.793003844M,5.185949591M,5.52985416M,5.864161802M,6.137718252M,6.279471032M,6.563680952M,6.736689779M,6.926955466M,7.001265618M,7.171280908M,7.434007799M,7.624889802M,8.221396063M,8.804519452M,8.683031058M,8.94118343M,9.337973006M,9.476741898M,9.762544152M,10.216163636M,10.663527856M,10.95231207M,11.200887595M,~
'','','','','','','','','','','','','','','','','','','','','','','','','','',0.838,1.531,1.967,2.932,4.239,4.526,5.057,6.734,10.241,14.565,18.585,2.197,26.922,34.723,4.524,61.345,75.14,199.575,121.861,5802.83,25.576481K,70.163249K,114.711712K,149.492908K,207.646038K,272.511444K,298.508435K,360.398912K,443.622171K,545.831029K,690.018196K,809.777728K,983.489468K,1.108224636M,1.345511768M,1.713229774M,2.032884654M,2.290944734M,2.571234517M,2.801250182M,3.030905644M,3.231899199M,3.42728387M,3.587162767M,3.670009573M,3.836114845M,3.937229114M,4.048429081M,4.091859332M,4.191224041M,4.344773649M,4.456333819M,4.804959352M,5.145763323M,5.074759951M,5.225636001M,5.457537971M,5.538640857M,5.705676762M,5.970792729M,6.232252835M,6.401031533M,6.546310436M,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','',0.377,0.614,1.139,1.85,2.006,2.295,3.208,5.116,7.468,9.655,11.463,14.191,18.435,24.137,32.919,40.424,108.122,662.522,3156.562,13.914377K,38.171719K,62.408221K,81.33086K,112.968954K,148.258848K,162.402458K,196.073848K,241.351295K,296.957819K,375.402558K,440.557491K,535.065014K,602.926932K,732.022519K,932.078762K,1.105986357M,1.246383426M,1.398874519M,1.52401408M,1.648957672M,1.758307812M,1.86460645M,1.951588243M,1.996660881M,2.087030121M,2.142041136M,2.202539255M,2.226167395M,2.280226566M,2.363764921M,2.424459008M,2.614128029M,2.799541745M,2.760912503M,2.842996315M,2.969162116M,3.013285978M,3.104161527M,3.248397336M,3.390644182M,3.482467893M,3.561506589M,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.172,0.554,1.07,1.183,1.393,2.056,3.441,5.15,6.738,8.05,10.032,13.114,17.255,23.632,29.083,78.246,480.856,2292.052,10.10448K,27.720394K,45.321173K,59.062976K,82.038862K,107.666721K,117.937946K,142.390432K,175.271348K,215.653338K,272.620658K,319.936794K,388.569062K,437.851037K,531.601488K,676.884247K,803.177608K,905.135303K,1.015875795M,1.106753343M,1.197488576M,1.276899694M,1.354094783M,1.417261794M,1.449993975M,1.515620983M,1.555570508M,1.599504821M,1.616663803M,1.655922091M,1.716588444M,1.760665071M,1.89840453M,2.033053746M,2.00500082M,2.064610871M,2.156233683M,2.188276854M,2.254271548M,2.359016974M,2.462317995M,2.529001254M,2.586399911M,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.325,0.765,0.862,1.041,1.606,2.788,4.245,5.6,6.719,8.409,11.038,14.57,0.029,24.658,66.59,409.986,1954.799,861.826,23.64324K,38.655366K,50.376078K,69.972761K,91.831376K,100.591949K,121.44806K,149.492979K,183.935745K,232.524535K,272.8816K,331.419704K,373.453479K,453.415482K,577.330624K,685.049253K,772.011411K,866.464627K,943.976261K,1.021366513M,1.089098156M,1.154939694M,1.208816349M,1.23673441M,1.292709254M,1.326783161M,1.364255788M,1.378891094M,1.412375427M,1.464119211M,1.501713221M,1.619194501M,1.734040039M,1.710113028M,1.760955866M,1.839103156M,1.866433543M,1.922721996M,2.012061876M,2.100169789M,2.157045536M,2.206002224M,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.332,0.405,0.54,0.967,1.859,2.959,3.981,4.826,6.101,8.085,10.751,14.855,18.364,50.01,309.166,1475.015,6503.797,17.842985K,29.172432K,38.017893K,52.807243K,69.30364K,75.915126K,91.654948K,112.820065K,138.81355K,175.482848K,205.939773K,250.117681K,281.839998K,342.18623K,435.703296K,516.997075K,582.626229K,653.908781K,712.405754K,770.81112K,821.927267K,871.616977K,912.276953K,933.346332K,975.589784K,1.001304896M,1.029584976M,1.040630042M,1.06590021M,1.104950538M,1.133322224M,1.221983743M,1.308656103M,1.290598714M,1.32896911M,1.387945803M,1.408571673M,1.4510518M,1.518475388M,1.584969227M,1.627892577M,1.664839521M,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.055,0.156,0.476,1.146,1.971,2.738,3.372,4.33,5.818,7.819,1.09,13.533,37.284,231.788,1106.788,4881.02,13.391378K,21.894425K,28.533175K,39.632969K,52.013948K,56.976041K,68.789189K,84.674165K,104.182956K,131.704224K,154.562944K,187.719621K,211.528051K,256.819479K,327.006486K,388.019596K,437.275995K,490.775418K,534.678928K,578.513685K,616.877692K,654.171121K,684.687498K,700.500619K,732.205435K,751.5053K,772.730241K,781.019852K,799.985776K,829.29407K,850.587763K,917.130555K,982.180431K,968.627888K,997.425875K,1.041689428M,1.057169684M,1.089052132M,1.1396553M,1.189560668M,1.221775766M,1.249505416M,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.096,0.4,1.034,1.817,2.544,3.145,4.053,5.465,7.362,10.282,12.779,35.298,21.979,104.939,4627.713,12.696503K,20.758361K,27.052654K,37.576526K,49.315106K,54.019737K,65.21995K,80.280719K,98.77728K,124.870582K,146.543258K,177.979572K,200.55268K,243.494122K,310.039415K,367.886807K,414.587494K,465.311052K,506.93659K,548.496942K,584.870399K,620.228825K,649.161833K,664.154477K,694.214261K,712.512735K,732.636402K,740.495899K,758.477759K,786.265366K,806.454218K,869.544378K,931.219085K,918.369727K,945.673505K,987.640404K,1.002317453M,1.032545653M,1.080523232M,1.127839215M,1.158382805M,1.184673677M,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.277,0.856,1.57,2.234,2.782,3.61,4.898,6.628,9.293,11.571,32.115,200.358,957.222,4221.885,11.583236K,18.938262K,24.680696K,34.281876K,44.991264K,49.283411K,59.501633K,73.241933K,90.116788K,113.922332K,133.694833K,162.374934K,182.968921K,222.145426K,282.856288K,335.631848K,378.238002K,424.514318K,462.490292K,500.406796K,533.59117K,565.849509K,592.245784K,605.923932K,633.348192K,650.042328K,668.40163K,675.572038K,691.977319K,717.328618K,735.74739K,793.306053K,849.573363K,837.850587K,862.760477K,901.047883K,914.438106K,942.016016K,985.787109K,1.028954613M,1.056820261M,1.080806052M,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.453,1.013,1.532,1.962,2.61,3.619,4.974,7.061,8.845,24.934,156.69,749.413,3306.068,9070.962,14.830904K,19.327976K,26.846947K,35.23379K,38.595099K,46.597295K,57.357736K,70.57294K,89.215775K,104.700213K,127.16046K,143.288227K,173.968523K,221.513018K,262.84314K,296.209297K,332.449666K,362.189789K,391.88334K,417.871018K,443.133489K,463.805204K,474.51697K,495.993731K,509.067409K,523.445128K,529.06049K,541.907957K,561.761319K,576.185611K,621.261525K,665.326141K,656.145684K,675.653365K,705.63738K,716.123665K,737.720753K,771.999207K,805.804973K,827.627397K,846.411389K,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.385,0.742,1.038,1.484,2.178,3.11,4.546,5.774,16.843,107.497,515.315,227.44,6240.887,10.203967K,13.298139K,18.471505K,24.242001K,26.554722K,32.060565K,39.464196K,48.556807K,61.383853K,72.03779K,87.491374K,98.58795K,119.697269K,152.40986K,180.846704K,203.804007K,228.738889K,249.201331K,269.631729K,287.512333K,304.893964K,319.116963K,326.487105K,341.264009K,350.259244K,360.151713K,364.015315K,372.854907K,386.514846K,396.439359K,427.453463K,457.771752K,451.455216K,464.877312K,485.507562K,492.722562K,507.582257K,531.16726K,554.427033K,569.441768K,582.365936K,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.258,0.472,0.794,1.295,1.968,3.005,3.892,11.886,77.354,371.871,1642.241,4506.744,7368.787,9603.326,13.339409K,17.506726K,19.176918K,23.153109K,28.499837K,35.066307K,44.329698K,52.023721K,63.183936K,71.197622K,86.442276K,110.06654K,130.60296K,147.182185K,165.18957K,179.967065K,194.721418K,207.634369K,220.186975K,230.458491K,235.781034K,246.452567K,252.948714K,260.092822K,262.883025K,269.26677K,279.131657K,286.298907K,308.696564K,330.59172K,326.030065K,335.723188K,350.621869K,355.832373K,366.563695K,383.596229K,400.393891K,411.23718K,420.57071K,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.17,0.426,0.824,1.359,2.183,2.888,9.241,61.272,295.34,1304.971,3581.544,5856.161,7632.068,10.601331K,13.913319K,15.24071K,18.4008K,22.650128K,27.86885K,35.230959K,41.345808K,50.215423K,56.584325K,68.700061K,87.475518K,103.796901K,116.973291K,131.284716K,143.029176K,154.755243K,165.017852K,174.994074K,183.157393K,187.3875K,195.868734K,201.031567K,206.709369K,208.926891K,214.000393K,221.840542K,227.536736K,245.337343K,262.738586K,259.113197K,266.816836K,278.657609K,282.798673K,291.327424K,304.864084K,318.214077K,326.831814K,334.249666K,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.219,0.559,1.017,1.722,2.324,7.756,52.241,252.363,1115.572,3061.986,5006.727,6525.083,9063.729,11.895397K,13.030282K,15.732081K,19.365151K,23.827029K,30.121448K,35.349492K,42.932792K,48.378045K,58.736698K,74.789246K,88.743623K,100.009109K,112.245021K,122.286242K,132.311738K,141.086013K,149.615434K,156.594869K,160.211505K,167.462749K,171.876843K,176.731223K,178.627149K,182.964867K,189.667999K,194.538103K,209.75718K,224.634809K,221.535192K,228.121612K,238.245178K,241.785685K,249.077555K,260.651062K,272.064974K,279.432925K,285.775004K,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.279,0.655,1.233,1.727,6.183,42.679,206.857,915.027,2511.848,4107.297,5352.944,7435.628,975.874,10.689755K,12.906288K,15.886828K,19.547315K,24.711204K,29.000247K,35.221523K,39.688763K,48.186915K,61.356291K,72.804344K,82.046455K,92.084695K,100.322428K,108.547261K,115.745602K,122.743068K,128.468938K,131.435996K,137.384856K,141.006141K,144.988634K,146.544036K,150.102663K,155.601856K,159.597249K,172.082852K,184.288334K,181.745434K,187.148878K,195.454167K,198.358769K,204.340958K,213.835766K,223.199644K,229.244249K,234.447238K,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.293,0.745,1.131,4.615,33.141,161.47,7.153,1963.144,3210.212,4183.859,5811.77,7627.58,8355.327,10.087859K,12.41757K,15.278755K,19.31506K,22.667549K,27.530351K,31.022126K,37.664626K,47.958344K,56.906606K,64.130614K,71.976909K,78.415855K,84.844717K,90.471233K,95.940735K,100.416307K,102.73548K,107.38535K,110.215893K,113.328771K,114.544536K,117.326103K,121.624495K,124.747456K,134.506709K,144.047008K,142.059375K,146.282925K,152.774675K,155.04503K,159.720951K,167.142478K,174.461664K,179.186372K,183.253239K,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.349,0.648,3.341,25.396,124.612,552.574,1517.566,2481.729,3234.499,449.318,5896.991,6459.645,7799.141,9600.343,11.812451K,14.933097K,17.525054K,21.2847K,23.984345K,29.119955K,37.078481K,43.996777K,49.581976K,55.648292K,60.626525K,65.596961K,69.947068K,74.175782K,77.636043K,79.429098K,83.024117K,85.212535K,87.619238K,88.559199K,90.709751K,94.033028K,96.447527K,103.992835K,111.36886K,109.832133K,113.097546K,118.116604K,119.871915K,123.487076K,129.224985K,134.88377K,138.536651K,141.680924K,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.221,2.217,18.562,92.093,409.259,1124.424,1838.974,2396.859,3329.626,4370.057,4787.045,5779.759,7114.647,8754.061,11.066801K,12.987725K,15.774035K,17.774767K,21.580816K,27.478956K,32.606171K,36.745414K,41.241219K,44.930634K,48.614272K,51.838178K,54.972118K,57.53655K,58.8654K,61.529703K,63.15156K,64.93519K,65.631805K,67.225599K,69.688511K,71.477919K,77.069819K,82.536261K,81.397378K,83.817407K,87.537078K,88.837956K,91.517186K,95.769605K,99.963385K,102.670569K,105.00082K,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',1.634,15.018,75.225,334.925,920.511,1505.594,1962.397,2726.159,3578.077,3919.511,4732.358,5825.381,7167.754,9061.454,10.634331K,12.915796K,14.554021K,17.670462K,22.499933K,26.69816K,30.087425K,33.768646K,36.789586K,39.805795K,42.445569K,45.011678K,47.111468K,48.199547K,50.381112K,51.709109K,53.169568K,53.739964K,55.044983K,57.061646K,58.526836K,63.105553K,67.581545K,66.649014K,68.630563K,71.676277K,72.741452K,74.935239K,78.417173K,81.851092K,84.067769K,85.975808K,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',5.081,27.936,126.521,348.816,570.92,744.328,1034.261,1357.659,1487.271,1795.837,2210.761,2720.341,3439.212,4036.294,4902.364,5524.253,6707.29,8540.612,10.134308K,11.420911K,12.818345K,13.965129K,15.110116K,16.112205K,17.086329K,17.883433K,18.296481K,19.124628K,19.628751K,20.183158K,20.399687K,20.895087K,21.660635K,22.216838K,23.954972K,25.65411K,25.30011K,26.052329K,27.208517K,27.612869K,28.445656K,29.767438K,31.070993K,31.912469K,32.636783K,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',3.759,19.972,56.53,93.058,121.576,169.258,222.444,243.76,29.456,362.744,446.55,564.774,662.97,80.543,907.679,1102.24,1403.747,1665.845,1877.438,2107.259,2295.858,2484.162,2648.965,2809.168,2940.26,3008.189,3144.385,3227.293,3318.47,3354.081,3435.554,3561.455,3652.928,3938.78,4218.219,4.16,4283.71,4473.855,4540.355,4677.314,4894.694,5109.075,5247.464,5366.584,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',3.407,11.089,18.765,24.758,34.778,45.954,50.433,61.097,75.436,93.047,117.89,138.525,168.455,189.947,230.832,294.19,349.266,393.73,442.024,481.656,521.225,555.856,589.521,617.068,631.343,659.963,677.385,696.545,704.028,721.148,74.765,766.827,826.895,885.615,873.381,899.377,939.334,95.338,982.088,1027.768,1072.817,1101.898,1126.929,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',1.743,3.485,4.845,7.118,9.654,10.671,13.091,16.344,20.34,25.978,30.66,37.451,42.328,5.165,65.982,78.48,88.569,99.527,108.52,117.499,125.357,132.996,139.247,142.486,148.98,152.933,157.281,158.979,162.864,168.867,173.229,186.859,200.183,19.747,20.336,212.373,215.544,222.074,232.439,242.662,249.26,254.94,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.635,1.131,1.959,2.884,3.254,4.137,5.323,6.779,8.834,10.541,13.017,14.795,18.177,23.417,27.973,31.651,35.646,38.924,42.197,45.062,47.847,50.125,5.136,53.673,55.114,56.699,57.318,58.734,60.923,62.513,67.482,72.339,71.327,73.477,76.782,77.938,80.319,84.097,87.824,90.229,9.23,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.303,0.81,1.376,1.602,2.142,2.867,3.758,5.015,6.059,7.574,8.661,10.729,13.935,16.722,18.971,21.415,23.42,25.422,27.174,28.877,30.271,30.993,32.441,33.323,34.292,34.671,35.537,36.875,37.848,40.887,43.858,43.239,44.554,46.576,47.283,48.739,51.05,53.329,5.481,56.067,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.389,0.823,0.997,1.411,1.968,2.651,3.616,4.417,5.579,6.413,8,10.46,12.598,14.325,1.62,17.738,19.274,20.619,21.926,22.995,23.55,24.661,25.337,26.081,26.371,27.036,28.063,2.889,31.142,33.421,32.946,33.956,3.557,36.049,37.167,38.94,40.689,41.818,42.79,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.312,0.438,0.736,1.136,1.629,2.323,2.9,3.736,4.337,5.48,7.251,8.79,10.033,11.383,12.49,13.596,14.564,1.555,16.275,16.674,17.474,17.961,18.497,1.876,19.184,19.924,20.461,22.14,23.781,23.439,24.166,25.283,25.673,26.478,27.755,29.014,29.827,30.526,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.095,0.323,0.628,1.003,1.532,1.972,2.609,3.067,3.937,5.287,6.46,7.407,8.435,9.279,10.122,10.86,11.577,12.163,12.467,13.077,13.448,13.856,14.015,14.38,14.943,15.353,16.632,17.883,17.622,18.176,19.027,19.324,19.937,20.91,21.87,22.489,23.022,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.207,0.486,0.829,1.312,1.713,2.295,2.713,3.507,4.739,5.81,6.675,7.614,8.384,9.153,9.827,10.481,11.017,11.294,11.851,12.19,12.562,1.278,13.041,13.555,13.929,15.097,16.238,0.16,1.656,17.283,17.554,18.114,0.192,19.878,20.443,20.93,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.231,0.515,0.915,1.247,1.729,2.075,2.733,3.754,4.641,5.357,6.134,6.773,7.41,7.968,8.51,8.953,9.183,9.644,9.925,10.233,10.354,10.629,11.055,11.365,12.332,13.278,13.081,13.5,14.143,14.368,14.832,15.567,16.293,16.761,17.164,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.23,0.555,0.825,1.217,1.498,2.033,2.862,3.582,4.164,4.796,5.314,5.832,6.285,6.726,7.086,7.273,7.647,7.875,8.126,8.224,8.448,8.794,9.045,9.831,10.599,10.439,10.779,1.132,11.485,11.862,12.459,13.049,13.429,13.756,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.264,0.484,0.802,1.03,1.465,2.139,2.724,3.197,3.711,4.132,4.553,4.921,5.279,5.572,5.724,6.028,6.213,6.417,6.497,6.679,6.96,7.164,7.803,8.427,8.297,8.574,8.999,9.147,9.453,9.939,10.418,10.727,10.993,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.174,0.425,0.606,0.95,1.483,1.946,2.32,2.726,3.06,3.392,3.684,3.967,4.199,4.319,4.559,4.706,4.867,4.93,5.074,5.297,5.458,5.964,6.457,6.355,6.573,6.909,7.027,7.269,7.653,8.032,8.277,8.487,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.215,0.369,0.662,1.116,1.51,1.829,2.175,2.459,2.743,2.991,3.232,3.43,3.532,3.737,3.862,3.999,4.053,4.176,4.365,4.503,4.934,5.355,5.267,5.453,5.74,5.84,6.046,6.373,6.696,6.905,7.084,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.127,0.368,0.742,1.067,1.329,1.614,1.848,2.082,2.286,2.485,2.647,2.732,2.901,3.003,3.116,3.161,3.262,3.418,3.531,3.886,4.232,4.16,4.313,4.549,4.632,4.801,5.071,5.337,5.508,5.656,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.214,0.546,0.834,1.067,1.32,1.528,1.735,1.916,2.093,2.237,2.312,2.461,2.553,2.653,2.692,2.782,2.92,3.021,3.336,3.643,3.579,3.715,3.925,3.998,4.148,4.388,4.624,4.776,4.907,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.273,0.511,0.703,0.911,1.082,1.253,1.402,1.547,1.666,1.728,1.851,1.926,2.009,2.041,2.115,2.229,2.312,2.571,2.824,2.772,2.884,3.056,3.116,3.241,3.438,3.632,3.757,3.865,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.187,0.337,0.501,0.635,0.769,0.886,1,1.094,1.142,1.239,1.298,1.363,1.388,1.446,1.536,1.601,1.805,2.004,1.962,2.05,2.186,2.233,2.33,2.485,2.638,2.736,2.821,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.127,0.265,0.378,0.491,0.59,0.686,0.765,0.805,0.887,0.937,0.991,1.013,1.062,1.137,1.192,1.364,1.531,1.496,1.571,1.685,1.725,1.807,1.937,2.066,2.149,2.22,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.122,0.223,0.323,0.411,0.496,0.566,0.602,0.674,0.719,0.767,0.786,0.829,0.896,0.945,1.097,1.246,1.215,1.281,1.382,1.418,1.491,1.606,1.72,1.794,1.857,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.089,0.179,0.257,0.333,0.395,0.427,0.492,0.531,0.575,0.591,0.63,0.69,0.733,0.869,1.001,0.974,1.032,1.123,1.154,1.219,1.322,1.424,1.489,1.546,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.082,0.154,0.223,0.281,0.31,0.369,0.406,0.445,0.461,0.496,0.551,0.591,0.715,0.837,0.812,0.865,0.948,0.977,1.037,1.131,1.225,1.285,1.337,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.066,0.131,0.184,0.211,0.266,0.299,0.336,0.35,0.383,0.433,0.47,0.585,0.698,0.674,0.724,0.801,0.827,0.882,0.97,1.056,1.112,1.16,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.06,0.11,0.136,0.187,0.218,0.253,0.266,0.297,0.344,0.379,0.487,0.592,0.57,0.617,0.689,0.714,0.765,0.847,0.928,0.981,1.026,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.047,0.071,0.119,0.149,0.181,0.194,0.223,0.268,0.3,0.402,0.501,0.481,0.525,0.592,0.616,0.665,0.742,0.818,0.868,0.91,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.023,0.069,0.098,0.129,0.141,0.168,0.211,0.242,0.339,0.434,0.415,0.457,0.521,0.544,0.591,0.664,0.737,0.784,0.825,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.045,0.073,0.103,0.115,0.142,0.184,0.214,0.309,0.402,0.383,0.424,0.487,0.509,0.555,0.627,0.698,0.744,0.784,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.026,0.055,0.067,0.093,0.133,0.162,0.253,0.341,0.323,0.362,0.423,0.444,0.487,0.556,0.625,0.669,0.706,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.028,0.039,0.065,0.104,0.132,0.22,0.307,0.289,0.327,0.386,0.407,0.449,0.516,0.583,0.626,0.663,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.011,0.035,0.073,0.101,0.187,0.271,0.254,0.291,0.348,0.368,0.409,0.475,0.539,0.581,0.617,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.024,0.062,0.089,0.174,0.258,0.24,0.277,0.334,0.354,0.394,0.459,0.523,0.564,0.6,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.037,0.063,0.146,0.228,0.211,0.247,0.302,0.321,0.361,0.425,0.487,0.527,0.562,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.026,0.106,0.184,0.168,0.203,0.256,0.275,0.313,0.374,0.434,0.473,0.507,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.078,0.155,0.139,0.173,0.225,0.243,0.28,0.34,0.399,0.436,0.469,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.071,0.056,0.088,0.136,0.153,0.187,0.243,0.297,0.332,0.362,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',-0.014,0.016,0.061,0.076,0.109,0.16,0.211,0.244,0.272,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.03,0.075,0.091,0.124,0.177,0.228,0.261,0.29,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.044,0.06,0.092,0.143,0.193,0.225,0.253,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.015,0.045,0.094,0.142,0.173,0.199,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.03,0.078,0.125,0.156,0.182,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.046,0.092,0.122,0.147,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.044,0.072,0.096,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.027,0.05,~
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',0.023)
NodeLocation: 464,304,1
NodeSize: 48,24
DefnState: 2,216,218,969,447,,DFNM
ReformDef: [Inf_Periodo_Fin,Inf_Periodo_Inicio]
NumberFormat: 2,%,4,2,0,0,4,0,$,0,"ABBREV",0,,,0,0,15

Index Inf_Periodo_Inicio
Att_PrevIndexValue: [1929,1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017]
Title: Periodo Inicio
Definition: 1929..2017
NodeLocation: 416,240,1
NodeSize: 48,24

Index Inf_Periodo_Fin
Att_PrevIndexValue: [1930,1931,1932,1933,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1957,1958,1959,1960,1961,1962,1963,1964,1965,1966,1967,1968,1969,1970,1971,1972,1973,1974,1975,1976,1977,1978,1979,1980,1981,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018]
Title: Periodo Fin
Definition: 1930..2018
NodeLocation: 512,240,1
NodeSize: 48,24

Function F_Inflacion_CLP(clp,anoinicio,anofin)
Title: Convertir CLP
Description: Funcion para trasladar temporalmente pesos chilenos, en base a las inflaciones registradas en Chile~
~
PBH 2018
Definition: clp*(1+Inflaciones_Chile[Inf_Periodo_Inicio=anoinicio,Inf_Periodo_Fin=anofin])
NodeLocation: 456,368,1
NodeSize: 48,24
WindState: 2,899,194,720,350

Function F_Inflacion_USD(usd,anoinicio,anofin)
Title: Convertir USD
Description: Funcion para trasladar temporalmente USD, en base a las inflaciones registradas en USA~
~
PBH 2018
Definition: usd*(1+Inflaciones_USA[Periodo_Inicio_USA=anoinicio,Periodo_Fin_USA=anofin])
NodeLocation: 776,368,1
NodeSize: 48,24
WindState: 2,899,194,720,350

Constant Inflaciones_USA
Title: Inflaciones USA
Units: %
Description: Fuente: https://data.worldbank.org/indicator/FP.CPI.TOTL.ZG?end=2017&locations=US&start=1998&year_high_desc=false~
~
Fecha consulta: 5 Diciembre 2018~
~

Definition: Table(Periodo_Inicio_USA,Periodo_Fin_USA)(~
0.0155,0.0377,0.0728,0.1031,0.1206,0.146,0.1767,0.2166,0.2559,0.2917,0.3413,0.3365,0.3585,0.4013,0.4303,0.4513,0.4748,0.4766,0.4952,0.5271,~
'',0.0219,0.0564,0.0862,0.1035,0.1285,0.1587,0.198,0.2367,0.272,0.3208,0.3161,0.3377,0.3799,0.4085,0.4291,0.4523,0.454,0.4724,0.5037,~
'','',0.0338,0.063,0.0798,0.1044,0.1339,0.1724,0.2102,0.2447,0.2925,0.2879,0.309,0.3504,0.3783,0.3985,0.4212,0.4229,0.4408,0.4715,~
'','','',0.0283,0.0446,0.0683,0.0969,0.1341,0.1707,0.2041,0.2503,0.2459,0.2663,0.3063,0.3333,0.3528,0.3748,0.3764,0.3938,0.4235,~
'','','','',0.0159,0.0389,0.0667,0.1029,0.1385,0.171,0.2159,0.2116,0.2315,0.2704,0.2966,0.3156,0.337,0.3386,0.3555,0.3843,~
'','','','','',0.0227,0.0501,0.0857,0.1207,0.1527,0.197,0.1927,0.2123,0.2505,0.2764,0.2951,0.3161,0.3177,0.3343,0.3627,~
'','','','','','',0.0268,0.0616,0.0959,0.1271,0.1704,0.1662,0.1854,0.2228,0.2481,0.2664,0.2869,0.2884,0.3047,0.3325,~
'','','','','','','',0.0339,0.0673,0.0977,0.1399,0.1358,0.1544,0.1909,0.2155,0.2333,0.2533,0.2548,0.2707,0.2977,~
'','','','','','','','',0.0323,0.0617,0.1025,0.0985,0.1166,0.1518,0.1756,0.1929,0.2122,0.2137,0.229,0.2551,~
'','','','','','','','','',0.0285,0.068,0.0642,0.0817,0.1158,0.1389,0.1556,0.1743,0.1757,0.1906,0.2159,~
'','','','','','','','','','',0.0384,0.0347,0.0517,0.0849,0.1073,0.1235,0.1418,0.1431,0.1575,0.1822,~
'','','','','','','','','','','',-3.6m,0.0128,0.0448,0.0664,0.082,0.0995,0.1009,0.1147,0.1385,~
'','','','','','','','','','','','',0.0164,0.0485,0.0702,0.0859,0.1035,0.1048,0.1187,0.1426,~
'','','','','','','','','','','','','',0.0316,0.0529,0.0683,0.0857,0.087,0.1007,0.1241,~
'','','','','','','','','','','','','','',0.0207,0.0356,0.0524,0.0537,0.067,0.0897,~
'','','','','','','','','','','','','','','',0.0147,0.0311,0.0323,0.0454,0.0676,~
'','','','','','','','','','','','','','','','',0.0162,0.0174,0.0303,0.0522,~
'','','','','','','','','','','','','','','','','',1.2m,0.0138,0.0354,~
'','','','','','','','','','','','','','','','','','',0.0126,0.0342,~
'','','','','','','','','','','','','','','','','','','',0.0213)
NodeLocation: 784,304,1
NodeSize: 48,24
DefnState: 2,216,218,1410,447,0,DFNM
ReformDef: [Periodo_Fin_USA,Periodo_Inicio_USA]
NumberFormat: 2,%,4,2,0,0,4,0,$,0,"ABBREV",0,,,0,0,15

Index Periodo_Fin_USA
Att_PrevIndexValue: [1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018]
Title: Periodo Fin USA
Definition: 1999..2018
NodeLocation: 832,240,1
NodeSize: 48,24

Index Periodo_Inicio_USA
Att_PrevIndexValue: [1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017]
Title: Periodo Inicio USA
Definition: 1998..2017
NodeLocation: 736,240,1
NodeSize: 48,24

Close Funciones__financie

Library Funciones__estadist
Title: Funciones  Estadisticas
Author: ayudanteslac
Date: Jue, 16 de Oct de 2008 17:32
DefaultSize: 48,24
NodeLocation: 128,304,1
NodeSize: 72,32
DiagState: 2,104,0,1136,495,17

Index I_estadigrafo
Title: estadigrafo
Description: Estadigrafos para funciones
Definition: ['mean','stddev','min','p1','p5','p10','p50','p90','p95','p99','max']
NodeLocation: 224,80,1
NodeSize: 64,24
WindState: 2,555,223,664,473
ValueState: 2,573,183,469,500,0,MIDM

Function F_summary(array; J:index)
Title: Funcion Summary
Description: Calcula diferentes estadigrafos de una variable across un inidice dado (parecido a la de R)~
~
Se debe entregar el arreglo conteniendo <nulls>; e ignorar los warnings~
~
PBH, 2016
Definition: if sum(array,J)=Null then 'No data' else~
~
var e1=mean(array, J);~
var e2:= Sdeviation( array,J);~
{var e3:=} {NO SE COMO OBTENER LA MODA}~
var e4:=min(array,J);~
var e5:=getfract(array,0.01,J); {PERCENTIL 1}~
var e6:=GetFract(array,0.05,J); {PERCENTIL 5}~
var e7:=GetFract(array,0.1,J);  {PERCENTIL 10}~
var e8:= GetFract(array,0.5,J);   {MEDIANA=PERCENTIL 50}~
var e9:=GetFract(array,0.9,J); {PERCENTIL 90}~
var e10=GetFract(array,0.95,J); {PERCENTIL 95}~
var e11=GetFract(array,0.99,J); {PERCENTIL 99}~
var e12=max(array,J);~
~
Table(I_estadigrafo)(~
e1,e2,e4,e5,e6,e7,e8,e9,e10,e11,e12)~
~

NodeLocation: 112,144,1
NodeSize: 48,24
WindState: 2,578,138,768,549

Text Te6
Description: ESTADISTICA
NodeLocation: 412,156,-1
NodeSize: 388,108
NodeInfo: 1,0,0,1,1,1,1,,0,,0
WindState: 2,94,85,476,224
NodeColor: 65535,65531,39321
NodeFont: Arial Black,12

Function F_Suma_Total(array)
Title: Suma Total
Description: Obtiene la suma total del array.~
Basicamente suma sobre todos los indices.~
~
PBH, Agosto 2017
Definition: var cubo:=array;~
for i:=IndexesOf(cubo) do~
cubo:=sum(cubo,i);~
cubo
NodeLocation: 112,216,1
NodeSize: 48,24
WindState: 2,102,82,476,347

{!40404|FreePassObjectCount XzX9wCwPwAXTaS6zVHcwIbmiRUyW8Vf_FY2xsQ5i_9XbjaE3qdm0CTRXXH1g3RtEdBzzrd9TuR6AH9rW9bAnUcjlkY4hSUyBSSRL7l9eH1HUbPEoZ$hw8Qdjs6sZAUpt84GI0pK3BWghlmcS9e_Rfhbaj7zaDb3KQNNK614SvISQGJ1eW4g1QYs$jcZtDf2HJDDEqb7Rs06TBxnaDfzNk$zygbFvS73RalsYPJ0O3cQghkjH0oNdBcIQJE5X8oFNq7icT9Z2gq4HOC10GyPu6RLQGujDzLi35EDvwIiCUkzyszhXQiBVr97CwlRIQ_Jgmrroa4fOOq1GRB64rH3gPXjqyrR9csFNmQWNG5V4i7DgxUMBrDgGeitpXKGkIpEMVoNH8qEjLTYXVYKDlXvMg5oqpd9mWoAQdjpiLFlKmJ_2ADH7fIiu9ZVXWP$cNGYu9RDybDwMv5XZgeeV4to6Un5xthS6mDQuy5570dSY4NizpqulHBux5BMEE8oS$Sq0GCPycCtFl9JTWL7_hKq1YRPgpKwqbkyVufVhi5ZOL2ljIf0PoDe4X$UzU0Y5gFrS4jM1jP6qaK5sfTI7zrjcWRNKHGFGHJMQVbipy5FRdq1GWn3LezIe$Nl9a$SvNsMtPyW4gGtW9pUAtaJ2paM9zoeUME82_wtrqqqsvy05CJRaku4HUixBSk1Lg$Lj5UuJlCf8e8gClJuU5jL_eK0jRAwgSF2tiYPHA4$wtqpooprux06CJSblw5IWl_EWo5Pk4RpBb0RtKoHnIqNwU3fGuXBsYEygP9wiVJ8zqhaTMIDA87678AEINTaiqz8JWjxAQgyFYtCZwIh4VxNrJoIpLuS1dDrT6nS8qYH1nYL8yndUMF83_wusrrsuw_27DKSblw6JWk_EVn4Oj3Pn9ZzNpGkDiDkHqOzZAoR4lQ7qYH1oaMA_qgXPIC73$zxxxz_15AGMUcmw5HUixBRj$JcyIf1QpEf5Z1W0X3b9kJvW9oS6oVCxgRC_nbQG7_smgbYUSRRSTWZdipw2BKVgt4IXn2KdxFawIg3TuKmEiCiEmJtR1eFuXCtZG_jSD$nbPE4wohaUQMJHGGHILPTY}
Library Multivariate_distrib
Title: Multivariate Distributions
Description: A library of multivariate distributions.~
~
In a multivariate distribution, each sample is a vector.  This vector is identified by an index, identified by the I parameter of the functions in this library.  A Mid value from a distribution function will therefore be indexed by I, whlie a Sample from a distribution function is indexed by both I and Run.  These distribution functions can also be used from within the Random function to generate a single monte-carlo sample, which will be indexed by I.~
~
This library also contains functions for generating correlated distributions.  Correlate_with, for example, allows you to generate a univarite distribution with an arbitrary marginal distribution that has a specified rank correlation with an arbitrary reference distribution.   Several functions may be used for generating serial correlations, where each distribution along an index is correlated with the previous point along that index.
Author: Lonnie Chrisman, Ph.D.~
Lumina Decision Systems~
~
With contributions by:~
   John Bowers, US FDA.~
   Max Henrion, Lumina Decision Systems
Date: Fri, Aug 01, 2003 7:12 PM
NodeLocation: 696,336,1
NodeSize: 64,32
NodeInfo: 1,1,0,1,1,1,0,0,0,0,0
DiagState: 2,15,10,311,309,17
WindState: 2,401,199,483,316
FontStyle: Arial, 15
Att_PreLoadScript: {!40404|FreePassObjectCount XzX9wCwPwAXTaS6zVHcwIbmiRUyW8Vf_FY2xsQ5i_9XbjaE3qdm0CTRXXH1g3RtEdBzzrd9TuR6AH9rW9bAnUcjlkY4hSUyBSSRL7l9eH1HUbPEoZ$hw8Qdjs6sZAUpt84GI0pK3BWghlmcS9e_Rfhbaj7zaDb3KQNNK614SvISQGJ1eW4g1QYs$jcZtDf2HJDDEqb7Rs06TBxnaDfzNk$zygbFvS73RalsYPJ0O3cQghkjH0oNdBcIQJE5X8oFNq7icT9Z2gq4HOC10GyPu6RLQGujDzLi35EDvwIiCUkzyszhXQiBVr97CwlRIQ_Jgmrroa4fOOq1GRB64rH3gPXjqyrR9csFNmQWNG5V4i7DgxUMBrDgGeitpXKGkIpEMVoNH8qEjLTYXVYKDlXvMg5oqpd9mWoAQdjpiLFlKmJ_2ADH7fIiu9ZVXWP$cNGYu9RDybDwMv5XZgeeV4to6Un5xthS6mDQuy5570dSY4NizpqulHBux5BMEE8oS$Sq0GCPycCtFl9JTWL7_hKq1YRPgpKwqbkyVufVhi5ZOL2ljIf0PoDe4X$UzU0Y5gFrS4jM1jP6qaK5sfTI7zrjcWRNKHGFGHJMQVbipy5FRdq1GWn3LezIe$Nl9a$SvNsMtPyW4gGtW9pUAtaJ2paM9zoeUME82_wtrqqqsvy05CJRaku4HUixBSk1Lg$Lj5UuJlCf8e8gClJuU5jL_eK0jRAwgSF2tiYPHA4$wtqpooprux06CJSblw5IWl_EWo5Pk4RpBb0RtKoHnIqNwU3fGuXBsYEygP9wiVJ8zqhaTMIDA87678AEINTaiqz8JWjxAQgyFYtCZwIh4VxNrJoIpLuS1dDrT6nS8qYH1nYL8yndUMF83_wusrrsuw_27DKSblw6JWk_EVn4Oj3Pn9ZzNpGkDiDkHqOzZAoR4lQ7qYH1oaMA_qgXPIC73$zxxxz_15AGMUcmw5HUixBRj$JcyIf1QpEf5Z1W0X3b9kJvW9oS6oVCxgRC_nbQG7_smgbYUSRRSTWZdipw2BKVgt4IXn2KdxFawIg3TuKmEiCiEmJtR1eFuXCtZG_jSD$nbPE4wohaUQMJHGGHILPTY}
{!40400|Att_clearTypeFonts: -1}

Function Wishart( cv : Number[I,J,Run] ; n :positive ; I,J : Index ; ~
singleSampleMethod : optional hidden scalar)
Title: Wishart(cv,n,I,J)
Description: Suppose you sample N samples from a Gaussian(0,cv,I,J) distribution, X[I,R].  (R is the index that indexes each sample, R:=1..N).  The Wishart distribution describes the distribution of sum( X * X[I=J], R ).  This matrix is dimensioned by I and J and is called the scatter matrix. ~
~
A sample drawn from the Wishart is therefore a sample scatter matrix.  If you divide that sample by (N-1), you have a sampled covariance matrix.  ~
~
If you compute a sample covariance matrix from data, and then want to use this in your model, if you just use it directly, you'll be ignoring sampling error.  That may be insignificant of N is large.  Otherwise, you may want to use:~
  Wishart( SampleCV, N, I, J) / (N-1)~
instead of just SampleCV in your model.   The extended variance will account for the uncertainty from the finite sample size that was used to obtain your sample CV.~
~
If you can express a prior probability on covariances in the form of an InvertedWishart distribution, then the posterior distribution, after having computed the sample covariance matrix (assumed to be drawn, by nature, from a Wishart), is also an InvertedWishart.
Definition: var T := if i<j then 0 else if i=j ~
             then sqrt(ChiSquared(n-i+1, singleSampleMethod:singleSampleMethod))~
             else (normal(0,1, singleSampleMethod:singleSampleMethod));~
var A := MatrixMultiply(T,I,J,Transpose(T,I,J),I,J);~
var L := Decompose(A,I,J);~
MatrixMultiply(MatrixMultiply(L,I,J,A,I,J),I,J,Transpose(L,I,J),I,J)
NodeLocation: 128,224,1
NodeSize: 100,16
WindState: 2,183,11,538,656

Function Invertedwishart(psi:Number[I,J,Run] ; n :positive ; I,J : Index ;~
singleSampleMethod : optional hidden scalar)
Title: Inverted Wishart(Psi,n,I,J)
Description: The inverted Wishart distribution represents a distribution of covariance matrices.  Each sample from the InvertedWishart is a covariance matrix.  It is conjugate to a Wishart distribution, and therefore is sometimes used as a Bayesian prior distribution for covariance.  The parameter, Psi, must be a positive definite matrix.~
~
Suppose you represent the prior distribution of covariance using an inverted Wishart distribution: InvertedWishart(Psi,m).  You observe some data, X[I,R], where R:=1..N indexes each datapoint and I is the vector dimension, and compute A = Sum( X*X[I=J], R), where A is called the scatter matrix.  A is an observation that gives you information about the true covariance matrix, so can use this to obtain a Bayesian posterior distribution on the true covariance given by:~
  InverseWishart( A+Psi, n+m ).~

Definition: Invert( Wishart( Invert(Psi,I,J), n, I,J, singleSampleMethod:singleSampleMethod), I, J )
NodeLocation: 352,224,1
NodeSize: 108,16
WindState: 2,102,90,553,530

Function Regressiondist( Y : Numeric[I,Run] orNull ; B : Numeric[I,K,Run] orNull ; I,K : Index; C : optional Numeric[K,Run] ;~
 S : optional Numeric[I,Run] ;~
singleSampleMethod : optional hidden scalar )
Title: RegressionDist(Y,B,I,K)
Description: RegressionDist returns linear regression coefficients as a distribution.~
~
Suppose you have data where Y was produced as:~
  Y = Sum( C*B, K ) + Normal(0,S)~
~
S is the measurement noise.  You have the data (B[I,K] and Y[I]).  You might or might not know the measurement noise S.  So you perform a linear regression to obtain an estimate of C.  Because your estimate is obtained from a finite amount of data, your estimate of C is itself uncertain.  This function returns the coefficients C as a distribution (i.e., in Sample mode, it returns a sampling of coefficients indexed by Run and K), reflecting the uncertainty in the estimation of these parameters.~
~
If you know the noise level S in advance, then you can use historical data as a starting point for building a predictive model of Y, as follows:~
~
{ Your model of the dependent variables: }~
Variable Y := your historical dependent data, indexed by I~
Variable B := your historical independent data, indexed by I,K~
Variable X := { indexed by K.  Maybe others.  Possibly uncertain }~
Variable S := { the known noise level }~
Chance C := RegressionDist(Y,B,I,K)~
Variable Predicted_Y := Sum(C*X,K) + Normal(0,S)~
~
If you don't know the noise level, then you need to estimate it. You'll need it for the normal term of Predicted_Y anyway, and you'll need to do a regression to find it.  So you can pass these optional parameters into RegressionDist.  The last three lines above become:~
Variable E_C := Regression(Y,B,I,K)~
Variable S := RegressionNoise( Y,B,I,K,E_C )~
Chance C := RegressionDist(Y,B,I,K,E_C)~
Variable Predicted_Y := Sum(C*X,K) + Normal(0,S)~
~
If you use RegressionNoise to compute S, you should use Mid(RegressionNoise(...)) for the S parameter.  However, when computing S for your prediction, don't RegressionNoise in context.  Better is if you don't know the measurement noise in advance, don't supply it as a parameter.
Definition: if IsNotSpecified(C) Then C := Regression(Y,B,I,K);~
If IsNotSpecified(S) Then S := Mid(RegressionNoise(Y,B,I,K,C))~
                                 Else S:=Mean(S);~
Index K2 := K;~
var cv := Invert( Sum( B*B[K=K2]/S^2,I),K,K2);~
cv := Average( [cv,Transpose(cv,K,K2)]); {for round off errs}~
~
Gaussian(C,cv,K,K2,singleSampleMethod:singleSampleMethod)
NodeLocation: 152,736,1
NodeSize: 112,20
WindState: 2,115,1,884,882

Function Gaussian(meanVec : numeric[I,Run],covar : numeric[I,J,Run]; I,J:IndexType ;~
Over : ... optional atomic ;~
singleSampleMethod : optional hidden scalar )
Title: Gaussian( m, cv, i, j )
Description: A multi-variate Gaussian distribution based on a mean vector and covariance matrix.  The covariance matrix must symmetric and positive-definite.  The meanVec is indexed by I.  The covariance matrix is 2-D, indexed by I & J.  Indexes I & J should be the same length.
Definition: var S := Decompose(covar,I,J);~
var Z := Normal(0,1,over:J,singleSampleMethod:singleSampleMethod);~
sum( S*Z,J ) + meanVec
NodeLocation: 112,72,1
NodeSize: 88,16
WindState: 2,61,300,617,328

Function Dirichlet(alpha : Numeric[I,Run]; I:IndexType ;~
Over : ... optional atomic ;~
singleSampleMethod : optional hidden scalar)
Title: Dirichlet ( a, i )
Description: A Dirichlet distribution with parameters alpha_i>0~
Each sample of a Dirichlet distribution produces a random vector whose elements sum to 1.  It is commonly used to represent second order probability information.~
~
The Dirichlet distribution has a density given by ~
   k * Product( X^(alpha-1), I)~
where k is a normalization factor equal to~
  GammaFn( sum(alpha,I )) / Sum(GammaFn(alpha),I)~
~
The parameters, alpha, can be interpreted as observation counts.  The mean is given by the relative values of alpha (normalized to 1), but the variance narrows as the alphas get larger, just as your confidence in a distribution would narrow as you get more samples.~
~
The Dirichlet lends itself to easy Bayesian updating.  If you have a prior of alpha0, and you observe N
Definition: var a:=Gamma(alpha,singleSampleMethod:singleSampleMethod);~
a/sum(a,I)
NodeLocation: 296,120,1
NodeSize: 64,16
WindState: 2,26,18,624,485

Function Binormal(MeanVec :numeric[I,Run]; Sdeviations : positive[I,Run]; I:IndexType; correlationCoef : numeric[Run];~
Over : ... optional atomic ;~
singleSampleMethod : optional hidden scalar)
Title: BiNormal (m, s, i, c )
Description: A 2-D Normal (or Bi-variate Gaussian) distribution with the indicated individual standard deviations (>0) and the indicated correlation coefficient.  The index, I, must have exactly 2 elements, Sdeviations must be indexed by I.
Definition: if size(I)<>2 then ~
   Error("Index to BiNormal must have 2 elements")~
else begin~
   var s := product(Sdeviations,I) * correlationCoef;~
   Index J:=CopyIndex(I);~
   Gaussian( meanVec, If I<>J Then s else Sdeviations^2, I,J,~
                        singleSampleMethod: singleSampleMethod )~
end
NodeLocation: 288,72,1
NodeSize: 88,16
WindState: 2,2,24,525,540

Function Multinomial(N:NonNegative ; theta:NonNegative  ; I : IndexType;~
Over : ... optional atomic ;~
singleSampleMethod : hidden optional scalar )
Title: Multinomial (n, theta, i )
Description: Returns the Multinomial Distribution.~
~
The multinomial distribution is a generalization of the Binomial distribution to N possible outcomes.  For example, if you were to roll a fair die N times, an outcome would be the number of times each of the six numbers appears.  Theta would be the probability of each outcome, where sum(theta,I)=1, and index I is the list of possible outcome.  If theta doesn't sum to 1, it is normalized.~
~
Each sample is a vector indexed by I indicating the number of times the corresponding outcome (die number) occurred during that sample point.  Each sample will have the property that sum( result, I ) = N.
Definition: var z := n;~
var k := size(I);~
~
var j:=cumulate(1,I) in I do begin~
  Index I2 := j..k;~
  var theta2 := Slice(theta,I,I2); /* unnormalized sub-process */~
  var p := theta2/sum(theta2, I2);~
  p := if IsNan(p) then 0 else p;~
  var xj := Binomial(z,p[I2=j],~
                              singleSampleMethod:singleSampleMethod);~
  z := z - xj;~
  xj~
end~

NodeLocation: 120,120,1
NodeSize: 96,16
WindState: 2,75,167,476,522

Function Correlate_dists(dists : Context[I,RunIndex] ; rankcorrs : numeric array[I,J] ; ~
  I,J : IndexType;~
  RunIndex : optional Index = Run )
Title: Correlate Dists (d, rc, i, j )
Description: Reorders the samples in dists so as to match the desired rank correlations between distributions as closely as possible.  RankCorrs must be positive definite, and the diagonal should contain all ones.~
~
The result will be distributions having the same margins as the original input, but with rank correlations close to those of the rankcorrs matrix.
Definition: if not IsSampleEvalMode and Handle(RunIndex)=Handle(Run) Then~
   dists  {Mid mode}~
Else begin~
  var u := if Handle(RunIndex)=Handle(run) ~
               Then Sample(Gaussian(0,rankcorrs,I,J))~
               Else Random(Gaussian(0,rankcorrs,I,J),Over:RunIndex);~
  var dsort := sortIndex(dists,RunIndex);~
  var urank := UniqueRank(u,RunIndex);~
  dists[RunIndex=dsort[RunIndex=urank]]~
end
NodeLocation: 136,400,1
NodeSize: 104,16
WindState: 2,301,193,557,477

Function Correlate_with( S, ref : Context[RunIndex] ; rc : scalar ; ~
  RunIndex : optional Index = Run )
Title: Correlate With (s, ref, rc )
Description: Reorders the samples of S so that the result is correlated with the reference sample with a rank correlation close to rankcorr.  ~
~
Example: To generate a logNormal distribution that is highly correlated with Ch1, use, e.g.,:  Correlate_With( LogNormal(2,3), Ch1, 0.8 )~
~
Note: This achieves a given unweighted rank correlation.  If you have a non-default SampleWeighting of points, the weighted rank correlaton may differ.
Definition: if IsSampleEvalMode or Handle(runIndex)<>Handle(Run) Then begin~
  Index q := 1..2;~
  var u := If Handle(RunIndex)=Handle(Run) ~
               Then binormal( 0, 1, q, rc )~
                Else Random(binormal(0,1,q,rc),Over:RunIndex);~
  var rrank := UniqueRank(ref,RunIndex);~
  var u1sort := sortIndex(u[q=1],RunIndex);~
  var u2rank := UniqueRank(u[q=2],RunIndex);~
  var ssort := sortIndex(S,RunIndex);~
  S[RunIndex=ssort[RunIndex=u2rank[RunIndex=~
                                                            u1sort[RunIndex=rrank]]]]~
end ~
else {mid mode}~
  S
NodeLocation: 144,312,1
NodeSize: 112,16
WindState: 2,205,170,545,485

Function Uniformspherical(I : IndexType ; R : optional Numeric[I,Run] ;~
Over : ... optional atomic ;~
singleSampleMethod : optional hidden scalar )
Title: Uniform Spherical (i, r )
Description: Generates points uniformly on a sphere (or circle or hypersphere).~
Each sample generated is indexed by I -- so if I has 3 elements, the points will lie on a sphere.~
~
The mid value is a bit strange here since there isn't really a median that lies on the sphere.  Obviously the center of the sphere is the middle value, but that isn't in the allowable range.  So, an arbitrary point on the sphere is used.
Definition: if IsNotSpecified(R) then R:=1;~
var u := Normal(0,1,over:I,~
                          singleSampleMethod:singleSampleMethod); ~
var d := sqrt( sum(u^2,I) );~
ifall d=0 and @I then R/sqrt(size(I)) else r*u/d
NodeLocation: 352,168,1
NodeSize: 96,16
WindState: 2,151,227,476,424

Function Multiuniform(corr : Numeric[I,J,Run] ; I,J : IndexType ; lb,ub : optional Numeric[I,J,Run] ;~
Over : ... optional atomic ;~
singleSampleMethod : hidden optional scalar )
Title: MultiUniform ( c, i, j, lb, ub )
Description: The multi-variate uniform distribution.~
Generates vector samples (indexed by I) such that each component has a uniform marginal distribution, and such that each component have the pair-wise correlations given by corr.  Indexes I and J must have the same number of elements, corr needs to be symmetric and must obey a certain semidefinite condition (namely that the transformed matrix [ 2*sin(30*cov) ] is positive semidefinite.  In most cases, this roughly the same as corr being, or not being, positive semidefinite).  Lb and ub can be used to specify upper and lower bounds, either for all components, or individually if these bounds are indexed by I.  If lb & ub are omitted, each component will have marginal Uniform(0,1).~
~
The correlation specified in corr is true sample correlation - not rank correlation.   ~
~
The transformation here is based on:~
* Falk, M. (1999), "A simple approach to the generation of uniformly distributed random variables with prescribed correlations," Comm. in Stats - Simulation and Computation 28: 785-791.
Definition: if IsNotSpecified(lb) then lb:=0;~
if IsNotSpecified(ub) then ub := 1;~
var R := if I=J then 1 else 2*sin(30*corr);~
var g := Gaussian(0,R,I,J,~
                              singleSampleMethod:singleSampleMethod);~
Cumnormal( g ) * (ub-lb) + lb
NodeLocation: 136,168,1
NodeSize: 112,16
WindState: 2,67,106,608,611

Module Depricated_multi_var
Title: Depricated multi-variate stuff
Description: Functions found in this module are here for legacy reasons.  They existed in older versions of the Multivariate library, but have been become obsolete for whatever reason.
Author: Lonnie
Date: Mon, Apr 30, 2007 3:49 PM
DefaultSize: 48,24
NodeLocation: 80,944,1
NodeSize: 56,32
DiagState: 2,1,0,496,8,17

Function Samplecovariance(X ; I : Index ; J : optional Index ; R : Index)
Title: Sample Covariance
Description: This function is obsolete.  In Analytica 4.0, the builtin function Variance can be used to compute a covariance matrix.  The equivalent of this function would be:  Variance( X, R, CoVarDim:I, CoVarDim2:J ).~
~
Returns a covariance matrix based on the sampled data, X, indexed by I and R.  (I is the dimensionality of X, R corresponds to the samples).  The result will be indexed by I and J -- supply J to be the same length as I.~
~
Note that the mean is simply Average(X,R), and doen't warrant a separate function.
Definition: var I2 := if IsNotSpecified(J) ~
              Then (Index K/((identifier of I)&"2") := I do VarTerm(K)) ~
              Else VarTerm(J);~
var Z:=X-Average(X,R);~
var Zt := Z[@I=@I2];~
Sum(Z*Zt,R)/(size(R)-1)
NodeLocation: 80,48,1
NodeSize: 48,24
WindState: 2,222,299,476,297

Function Samplecorrelation(X : array[I,R] ; I,J,R : IndexType)
Title: sample correlation
Description: This function is obsolete.  A covariance matrix can be computed in Analytica 4.0+ using the built-in function Correlation.  The equivalent of this function is Correlation(X,X[@I=@J],R).~
~
Returns a correlation matrix based on data in X, where each data point is a vector indexed by I, and the entries in the correlation matrix are the pair-wise correlations of the columns of data.  A second index, J, of size identical to I, is required in order to index the 2-dimensional result.
Definition: var z:=x-average(x,R);~
var zt := slice(z,I,cumulate(1,J));~
sum(z*zt,R) / sqrt(sum(z^2,R) * sum(zt^2,R))~

NodeLocation: 208,48,1
NodeSize: 48,24
WindState: 2,70,24,523,377

Close Depricated_multi_var

Text Multvar_te1
Description: Parametric Multivariate  Distributions
NodeLocation: 220,42,-1
NodeSize: 196,14
NodeColor: 65535,65535,65535

Text Multvar_te2
Description: Creating an array of mutually correlated distributions:
NodeLocation: 232,368,-1
NodeSize: 200,16
NodeColor: 65535,65535,65535

Text Multvar_te3
Description: Creating a single univariate  distribution correlated with another existing dist:
NodeLocation: 314,278,-1
NodeSize: 286,10
NodeColor: 65535,65535,65535

Function Normal_correl(m, s, r, y: Numeric ;~
over : optional atomic ;~
singleSampleMethod : optional hidden scalar )
Title: Normal_correl(m, s, r, y)
Description: Generates a normal distribution with mean m, standard deviation s, and correlation r with normally distributed value y.  In a deterministic context, it will return m.~
~
If y is not normally distributed, the result will also not be normal, and the correlation will be approximate. It generalizes appropriately if any of the parameters are arrays:The result array will have the union of  the indexes of the parameters.
Definition: IF r<-1 OR r>1 THEN Error('Correlation parameter r in function Normal_correl(m, s, r, y) is outside the expected range [-1, 1].');~
IFOnly IsSampleEvalMode ~
THEN m + s * (Sqrt(1-r^2) ~
                        * Normal(Sameindexes( 0, m ), Sameindexes( 1, s ),~
                                       singleSampleMethod:singleSampleMethod )  ~
                     +  r * (y - Mean(y))/Sdeviation(y))~
ELSE m
NodeLocation: 368,312,1
NodeSize: 108,16
WindState: 2,102,90,503,416

Module Multivariate_interna
Title: Multivariate Internal Functions
Author: Lonnie
Date: Tue, May 01, 2007 9:29 PM
DefaultSize: 48,24
NodeLocation: 200,944,1
NodeSize: 52,32
DiagState: 2,605,145,86,12,17

Function Sameindexes(x, y)
Title: SameIndexes(x,y)
Description: Returns an array with the same indexes as y, and value x in each cell.
Definition: IF y=y THEN x ELSE x
NodeLocation: 120,64,1
NodeSize: 80,20

Function Uniquerank(X : Array[I]; I : Index)
Title: UniqueRank
Description: Returns the Rank of X along I, but such that the rank assigned is unique for every element.  Thus, when there are ties, instead of getting the same rank, as would happen with the Rank(X,I) function, the ranks will be assigned arbitrarily.   Consider:~
   [ 3, 1, 3, 2, 3, 2, 1 ]~
Ranks become:~
   [5,1,6,3,7,4,2 ]
Definition: index Pos := @I;~
var s := SortIndex(X[@I=@Pos],Pos);~
var result := 1;~
for n:=Pos do ( result[@I=s[@Pos=n]] := n );~
result
NodeLocation: 272,64,1
NodeSize: 52,20
WindState: 2,477,347,537,379

Close Multivariate_interna

Function Multinormal(m, s: Numeric; cm: ArrayType[i, j,Run]; i , j: IndexType ;~
Over : ... optional atomic ;~
singleSampleMethod : optional hidden scalar )
Title: Multinormal(m,s,c,i,j)
Description: A multi-variate normal (or Gaussian) distribution with mean  m, standard deviation s, and correlation matrix cm.  m and s may be scalar or indexed by i. cm must be symmetric, positive-definite, and indexed by i & j, which must be the same length.~
~
Multinormal uses a correlation matrix.  Compare with Gaussian, which also defines a multi-variate normal but which uses a covariance matrix.
Definition: Gaussian(m,cm*s*s[@i=@j],i,j,over,singleSampleMethod)
NodeLocation: 472,72,1
NodeSize: 84,16
WindState: 2,391,248,512,343

Text Multvar_te4
Description: Reshaped distributions:
NodeLocation: 136,448,-1
NodeSize: 100,16
NodeColor: 65535,65535,65535

Function Dist_reshape(x : Numeric[R] ; newdist : all Numeric[R] ; ~
R : optional Index = Run )
Title: Dist_reshape(x, newdist)
Description: Reshapes the probability distribution of uncertain quantity x so that it has the same marginal probability distribution (i.e, same set of sample values) as newdist, but retains the same ranks as x.  Thus:~
     Rank(Sample(x), Run) ~
           = Rank(Sample(Reshape_dist(x, y)), Run)~
In a Mid context, it simply returns the mid value of newdist, with any indexes of x.~
~
The result retains any rank correlations that x may have with other predecessor variables.  So, the rank-order correlation between a third variable z and x will be the same as the rank-order correlation between z and a reshaped version of x, i.e.~
     RankCorrel(x, z) = RankCorrel(Reshape_Dist(x, y), z)~
~
The operation may optionally be applied along an index other than Run.
Definition: IFOnly IsSampleEvalMode or Handle(R)<>Handle(Run) THEN BEGIN~
     VAR dsort := SortIndex(newdist, Run);~
     VAR xranks := Rank(x, Run);~
     newdist[Run = dsort[Run=xranks]]~
     END~
ELSE newdist * (x=x)
NodeLocation: 152,472,1
NodeSize: 116,16
WindState: 2,102,90,646,469

Text Multvar_te5
Description: Arrays with serial correlation
NodeLocation: 208,532,-1
NodeSize: 168,12
NodeColor: 65535,65535,65535

Function Normal_serial_correl(m, s, r: Numeric; i: IndexType ;~
over : ... optional atomic;~
singleSampleMethod : optional hidden scalar )
Title: Normal_serial_correl(m,s,r,i)
Description: Generates an array over index i of normal distributions with mean m, standard deviation s, and correlation r between successive values  over index i.  You can give each distribution a different mean and/or standard deviation if m and/or s are arrays indexed by i. If r is indexed by i, r[i=k] specifies the correlation between result[i=k] and result[i=k-1].  (Then the first correlation, slice(r, i, 1)  is ignored.)
Definition: Var x := Normal(0, 1,singleSampleMethod:singleSampleMethod);~
(FOR j := i DO  ~
       x := Normal_correl( 0, 1, r[i = j],x,~
                                       singleSampleMethod:singleSampleMethod ) ) ~
* s + m
NodeLocation: 160,560,1
NodeSize: 120,16
WindState: 2,353,325,540,383

Function Normal_additive_gro(x, m, s, r: Numeric; i: IndexType ;~
over : ... optional atomic ;~
singleSampleMethod : optional hidden scalar )
Title: Normal_additive_gro(x,m,s,r,i)
Description: Adds a normally distributed percent growth g with mean m and standard deviation s to x for each value of index i. The growth g for each i has serial correlation r with g for i-1.
Definition: x *( 1 + Cumulate(Normal_serial_correl(m, s, r, i,~
                            singleSampleMethod:singleSampleMethod), i))
NodeLocation: 159,600,1
NodeSize: 119,16
WindState: 2,102,90,519,306

Function Normal_compound_gro(x, m, s, r: Numeric; t: IndexType ;~
over : ... optional atomic;~
singleSampleMethod : optional hidden scalar )
Title: Normal_compound_gro(x,m,s,r,t)
Description: An array of values over time index t, starting from with value x, and with compound growth applied for each time interval, with normal uncertainty with mean m and standard deviation s  The growth g for each i has correlation r with g for i-1.
Definition: x * Cumproduct(IF t = Slice(t, 1) THEN 1 ELSE Normal_serial_correl(m, s, r, t, singleSampleMethod:singleSampleMethod ) + 1, t)
NodeLocation: 160,640,1
NodeSize: 128,16
WindState: 2,102,90,529,366

Function Dist_serial_correl(x; r; i: IndexType ;~
over : ... optional atomic;~
singleSampleMethod : optional hidden scalar )
Title: Dist_serial_correl(x,r,i)
Description: Generates an array y over index i where each y[i] has a marginal  distribution identical to x, and serial rank correlation of r with y[i-1].  If x  is indexed by i,  each y[i] has the same marginal distribution as x[i], but with samples reordered to have the specified rank correlation r between successive values.  If r is indexed by i, r[i=k] specifies the rank correlation between y[i=k] and y[i=k-1].  Then the first correlation, r[i=1], is ignored.~
~
In Mid context, it returns Mid(x).~
~
Note: The result retains no probabilistic dependence on x.
Definition: Dist_reshape(Normal_serial_correl( 0, 1, r, i, singleSampleMethod:singleSampleMethod ), x)
NodeLocation: 440,560,1
NodeSize: 120,16
WindState: 2,302,78,477,447

Function Dist_additive_growth(x, g, r: Numeric; i: IndexType;~
over : ... optional atomic;~
singleSampleMethod : optional hidden scalar )
Title: Dist_additive_growth(x,g,r,i)
Description: Generates an array of values over index i, with the first equal to x, and successive values adding an uncertain growth with probability distribution g, and serial correlation r between growth[i = k] and growth[i=k-1].  x, g, and r each may be indexed by i if you want them to vary over i.
Definition: x + Cumulate(Dist_serial_correl( g, r, i, singleSampleMethod : singleSampleMethod), i)
NodeLocation: 439,600,1
NodeSize: 119,16
WindState: 2,102,90,506,300

Function Dist_compound_growth(x, g, r; i: IndexType ;~
over : ... optional atomic ;~
singleSampleMethod : optional hidden scalar )
Title: Dist_compound_growth(x,g,r,i)
Description: Starts with x and applies a compound growth g for each value of index i. The growth g for each i has correlation r with g for i-1.
Definition: x * Cumproduct(~
           IF i = Slice(i, 1) THEN 1 ~
           ELSE (Dist_serial_correl( g, r, i,   ~
                                    singleSampleMethod:singleSampleMethod ) + 1)~
, i)
NodeLocation: 439,640,1
NodeSize: 119,16
WindState: 2,102,90,489,307

Text Multvar_te6
Description: Distributions on Linear Regression coefficients
NodeLocation: 296,700,-1
NodeSize: 256,12
NodeColor: 65535,65535,65535

Function Regressionnoise( Y : Numeric[I,Run] orNull ; B : Numeric[I,K,Run] orNull; I,K : Index; C : optional Numeric[K,Run] )
Title: RegressionNoise(Y,B,I,K,C)
Description: When you have data, Y[I] and B[I,K], generated from an underlying model with unknown coefficients C[k] and S of the form:~
~
Y = Sum( C*B, I) + Normal(0,S)~
~
This function computes an estimate for S.  ~
~
When using in conjunction with RegressionDist, it is most efficient to provide the optional parameter C to both routines, where C is the expected value of the regression coefficients, obtained from calling Regression(Y,B,I,K).  Doing so avoids an unnecessary call to the builtin Regression function.
Definition: if IsNotSpecified(C) Then C := Regression(Y,B,I,K);~
Var resid := Y - Sum(C*B,K);~
sqrt( Sum(resid^2,I) / (size(I)-size(K)) );~

NodeLocation: 384,736,1
NodeSize: 112,20
WindState: 2,332,211,824,530

Function Regressionfitprob( Y : Numeric[I,Run] ; B : Numeric[I,K,Run] ; I,K : Index; C : optional Numeric[K,Run] ; ~
S :  optional Numeric[I,Run] )
Title: RegressionFitProb(Y,B,I,K,C)
Description: Once you've obtained regression coefficients C (indexed by K) by calling the Regression function, this function returns the probability that a fit this poor would occur by chance, given the assumption that the data was generated by a process of the form:~
~
 Y = Sum( C*B,K) + Normal(0,S)~
~
If this result is very close to zero, it probably indicates that the assumption of linearity is bad.  If it is very close to one, then it validates the assumption of linearity.~
~
This is not a distribution function - it does not return a sample when evaluated in Sample mode.  However, it does complement the multivariate RegressionDist function also included in this library.~
~
To use, first call the Regression function, then you must either know the measurement knows a priori, or obtain it using the RegressionNoise function.~
~
Var E_C := Regression(Y,B,I,K);~
Var S := RegressionNoise(Y,B,I,K,C);~
Var PrThisPoor := RegressionFitProb(Y,B,I,K,E_C,S)
Definition: if IsNotSpecified(C) then C:=Regression(Y,B,I,K);~
if IsNotSpecified(S) then S:=RegressionNoise(Y,B,I,K);~
var resid := Y - sum(C*B,K);~
var n := size(I);~
var chi2 := sum( resid^2 / Mean(S)^2, I);~
GammaI( n/2 - 1, chi2/2 )
NodeLocation: 152,800,1
NodeSize: 112,20
WindState: 2,287,69,787,621

Text Te1544550596
NodeLocation: 379,256,-1
NodeSize: 380,1
NodeInfo: 1,0,0,0,1,1,0,,0,,0
NodeColor: 0,0,0

Text Te13
NodeLocation: 376,341,-1
NodeSize: 380,1
NodeInfo: 1,0,0,0,1,1,0,,0,,0
NodeColor: 0,0,0

Text Te12
NodeLocation: 380,424,-1
NodeSize: 380,1
NodeInfo: 1,0,0,0,1,1,0,,0,,0
NodeColor: 0,0,0

Text Te4
NodeLocation: 380,505,-1
NodeSize: 380,1
NodeInfo: 1,0,0,0,1,1,0,,0,,0
NodeColor: 0,0,0

Text Te5
NodeLocation: 380,673,-1
NodeSize: 380,1
NodeInfo: 1,0,0,0,1,1,0,,0,,0
NodeColor: 0,0,0

Close Multivariate_distrib

Function F_reg(X: Numeric[I_X,I_Var] orNull,Y:Numeric[I_X] orNull,I_X:index,I_Var:index,Tipo_Reg:optional='Lineal')
Title: Funcion Regresion
Description: Regresion lineal, exponencial o logaritmica. ~
Estima los coeficientes de la regresion considerando incertidumbre.~
~
PBH, Agosto 2017
Definition: var Yij:=~
if tipo_Reg='Lineal' then Y~
else if tipo_Reg='Exponencial' then ln(Y)~
else if tipo_Reg='Logaritmico' then ln(Y)~
else 0;~
var Xij:=~
if tipo_Reg='Lineal' then X~
else if tipo_Reg='Exponencial' then X~
else if tipo_Reg='Logaritmico' then ln(X)~
else 0;~
~
var reg_coef:=Regressiondist(Yij, Xij, I_X, I_var);~
reg_coef:=if isnan(reg_coef) then null else reg_coef;~
reg_coef
NodeLocation: 80,328,1
NodeSize: 48,32
WindState: 2,885,462,884,501

Index I_Ajuste
Att_PrevIndexValue: ['Lineal','Logaritmico','Exponencial']
Title: Indice tipo de ajuste
Description: index I_curva:=['Lineal', 'Logaritmica', 'Exponencial', 'Potencia'];
Definition: ['Lineal','Logaritmico','Exponencial']
NodeLocation: 80,424,1
NodeSize: 48,24
WindState: 2,102,90,720,273
ValueState: 2,0,-23,1921,974,0,MIDM

{!40404|FreePassObjectCount _drLnwS2Zy63DG2qVHcs9RTaQTdNvTos77E__X$W0GbfZbgseC5Piw0ygTjM1iUs0wpdVFzHmy1OswmcN3OexERg0ygBayOl8ekcErNzRtv60pbM9ysMew7F0iRApBYxKqwoT0Y8fv8Pg20mI1YyFJQXN$iZX5RZu$$uYFyOcv3CNYqiMvPhvBOK47H1Z_MWcmrfHvW9oYu01$lWCrJVmBjrlYIqNrGWUXRKFACqEfy0spZR4S$cKekrqa6lBl48NNMNOWEkGblmqrhgmSwQjrqsrfJydI4ScqgU5vUzcMiq0qcBzWzHavExjw12rY7p59ymZHtJXqHr$xqcCsQq7Y4C6Q0gCWzIOIVpjPVtJdjy3xdvaH_p1JWbR4wf7byQRNMK2riRQbhqy66oY1Jm9aF6ujXNrInv8J9uqS8ZnAdC63$zeEn9FQlC_pdT7as$BKIPeCpP1AGVLW$qWvboyDKMOBuSDIj$_G3tgO_QexO9GEvtNs8XfjgccXUZzQsKKJDB1rFq6HkJDA64cLsGZdkrhJ0tsAXtFD$tf9_xDYsC8usiSyEd8nlmmoV9b2Qlvnkr4eFrTx15y0raTUqDb$BIK$bEtQ$ikptzsd9Tu6SZPQViEpNzESSOOJzRC5Jaq6wwiFnNuRIVZKOBtNxPjwFiUJ7zY3RWXXbabwb7Mu0040kbKq8lgx3u0lfKkFVdptjiZBdMDPes6xeK4lz103YuGf2SuKnFkDkGoLwV5iKzcHyfM4qaL6vjXNE5zsmhdZXWVVWYcfkqw2BKUfs2GVl0HatBXtDb_OpFh8c6c7fBlKvV7lP2jP6pYH2pbPD1tkcUNID97543468CGLSYgpz8JWjxBRi_HavFbyLk8Z$RvOtOvR_Y7jKyaEuZGzhQ9wiUI6xofXQKEA63211247BFLSZhq$ALYm$EVm2Mf_Kh3RrFh7a2X1Y4c9kJvX8nR6oUBwfPAylZOD4xqjdYURPNNNPRUYdjqy4EOamzBQgxDVp8TpAYxLmBe5a3Z4d9jItU5kN1jO5oXG$mZLA$qhZSLGB75211247AFKRYgpz7JVjxARi_HavFbyLk8Z0SwOuPwS0a9lM_cGxcI0kTD_mYLA$riaTOJEB97678ADGLRYfox5HTgt6MduAUo7TqBa_PqHkChBhDmKvU4hKzdIzgN6scN9ymaQH81wqmifdcbcegjnsz4BKUeq0DShxCTm4Ok4RpCc1TwNrLrNvS0bBnP1hL0iP7scM8wkYND4yrlfaXUSSSSUXbfkry4EOYkx9Ndt9Qj1Mi3RpDd2UxPuOuQyW4gGsV7nS7pXF_lWI4ujYPG81xsoljihhjlosx17FNXht3GUjzDVo5Pk4SpCc1SvMrKqLtQ_Y8kM_dIyeL3nXI3reSH7_rkeYTQNLKJKMOSWbhpw4DOam_CRhyEXrAVsDb_OqFiAf8}
Library Distribution_densiti
Title: Distribution Densities Library
Description: The functions in this library return the probability densities (for continuous distributions) and probabilities (for discrete distributions) for the standard distribution functions that are built into Analytica.  It also includes Cumulative distribution functions for continuous distributions and some discrete distributions, and inverse cumulative functions for most continuous distributions.~
~
Probability densities are useful for importance sampling.  In importance sampling, you can sample from a distribution different from your target distribution, and then weight each point by f_target(x) / f_sample(x), where f_target is the density (or prob) of your target distribution, f_sample the density (or prob) of your sample distribution.~
~
Cumulative distribution functions are used in classical hypothesis testing for determining the p-value (or significance level) of a hypothesis based on a data sample, and inverse cumulative distributions are used in finding confidence intervals.~
~
Of course PDF, CDF and Inverse CDF functions are used in many other areas of statistical analysis as well.
Author: Lonnie Chrisman, Ph.D.~
Lumina Decision Systems
Date: Fri, Nov 17, 2006 8:19 AM
NodeLocation: 584,336,0
NodeSize: 56,32
NodeInfo: 1,1,0,1,1,1,0,0,0,0,0
DiagState: 2,47,22,13,1,17
WindState: 2,22,724,582,409
FontStyle: Arial, 15
Att_PreLoadScript: {!40404|FreePassObjectCount _drLnwS2Zy63DG2qVHcs9RTaQTdNvTos77E__X$W0GbfZbgseC5Piw0ygTjM1iUs0wpdVFzHmy1OswmcN3OexERg0ygBayOl8ekcErNzRtv60pbM9ysMew7F0iRApBYxKqwoT0Y8fv8Pg20mI1YyFJQXN$iZX5RZu$$uYFyOcv3CNYqiMvPhvBOK47H1Z_MWcmrfHvW9oYu01$lWCrJVmBjrlYIqNrGWUXRKFACqEfy0spZR4S$cKekrqa6lBl48NNMNOWEkGblmqrhgmSwQjrqsrfJydI4ScqgU5vUzcMiq0qcBzWzHavExjw12rY7p59ymZHtJXqHr$xqcCsQq7Y4C6Q0gCWzIOIVpjPVtJdjy3xdvaH_p1JWbR4wf7byQRNMK2riRQbhqy66oY1Jm9aF6ujXNrInv8J9uqS8ZnAdC63$zeEn9FQlC_pdT7as$BKIPeCpP1AGVLW$qWvboyDKMOBuSDIj$_G3tgO_QexO9GEvtNs8XfjgccXUZzQsKKJDB1rFq6HkJDA64cLsGZdkrhJ0tsAXtFD$tf9_xDYsC8usiSyEd8nlmmoV9b2Qlvnkr4eFrTx15y0raTUqDb$BIK$bEtQ$ikptzsd9Tu6SZPQViEpNzESSOOJzRC5Jaq6wwiFnNuRIVZKOBtNxPjwFiUJ7zY3RWXXbabwb7Mu0040kbKq8lgx3u0lfKkFVdptjiZBdMDPes6xeK4lz103YuGf2SuKnFkDkGoLwV5iKzcHyfM4qaL6vjXNE5zsmhdZXWVVWYcfkqw2BKUfs2GVl0HatBXtDb_OpFh8c6c7fBlKvV7lP2jP6pYH2pbPD1tkcUNID97543468CGLSYgpz8JWjxBRi_HavFbyLk8Z$RvOtOvR_Y7jKyaEuZGzhQ9wiUI6xofXQKEA63211247BFLSZhq$ALYm$EVm2Mf_Kh3RrFh7a2X1Y4c9kJvX8nR6oUBwfPAylZOD4xqjdYURPNNNPRUYdjqy4EOamzBQgxDVp8TpAYxLmBe5a3Z4d9jItU5kN1jO5oXG$mZLA$qhZSLGB75211247AFKRYgpz7JVjxARi_HavFbyLk8Z0SwOuPwS0a9lM_cGxcI0kTD_mYLA$riaTOJEB97678ADGLRYfox5HTgt6MduAUo7TqBa_PqHkChBhDmKvU4hKzdIzgN6scN9ymaQH81wqmifdcbcegjnsz4BKUeq0DShxCTm4Ok4RpCc1TwNrLrNvS0bBnP1hL0iP7scM8wkYND4yrlfaXUSSSSUXbfkry4EOYkx9Ndt9Qj1Mi3RpDd2UxPuOuQyW4gGsV7nS7pXF_lWI4ujYPG81xsoljihhjlosx17FNXht3GUjzDVo5Pk4SpCc1SvMrKqLtQ_Y8kM_dIyeL3nXI3reSH7_rkeYTQNLKJKMOSWbhpw4DOam_CRhyEXrAVsDb_OqFiAf8}
{!40400|Att_clearTypeFonts: -1}

Library Cumulative_densities
Title: Cumulative Densities
Author: Lonnie
Date: Wed, Aug 06, 2008 12:30 PM
DefaultSize: 48,24
NodeLocation: 80,104,1
NodeSize: 56,24
DiagState: 2,786,1,92,146,17

Function CumBinomialInv(u,n,p : atom)
Title: CumBinomialInv
Description: The inverse cumuative probability of a Binomial(n,p) distribution.  Suppose you run n random trials, each having probability p of success.  For a given 0<u<1, this computes the number of successes, k, so that the probability of the outcome of n flips having k or fewer successes is less than or equal to u.
Definition: var flip := p>0.5;~
if flip then p := 1-p;~
var q:=1-p;~
var s := p/q;~
var a := (n+1)*s;~
var r := q^n;~
var iter := 1000;~
var u0 := u;~
var x := 0;~
~
while (u>r and iter>0) do (~
   iter := iter - 1;~
   u := u - r;~
   x := x + 1;~
   r := ((a/x) - s) * r~
);~
if iter=0 then x := round(CumNormalInv(u0,n*p,sqrt(n*p*q)));~
if flip then x := n-x;~
x
NodeLocation: 88,632,1
NodeSize: 72,24
WindState: 2,87,287,883,507

Function CumChiSquared(x, dof)
Title: Cum~
ChiSquared
Description: The cumulative probability at x for a Chi-squared distribution with dof degree-of-freedom.
Definition: GammaI(x/2,dof/2)
NodeLocation: 88,48,1
NodeSize: 56,24
WindState: 2,424,469,476,224

Function CumStudentT(t,dof)
Title: CumStudentT
Description: The cumulative distribution function function for the Student's T distribution with dof degrees of freedom.
Definition: var x := (t+sqrt(t^2+dof)) / (2*sqrt(t^2+dof));~
BetaI(x,dof/2,dof/2)
NodeLocation: 224,48,1
NodeSize: 64,24
WindState: 2,298,533,779,285

Function CumFDist(f,dof1,dof2)
Title: CumFDist
Description: The Cumulative Probability Function for the F-distribution.
Definition: BetaI( dof1*f / (dof1*f + dof2), dof1 / 2, dof2 / 2)
NodeLocation: 368,48,1
NodeSize: 56,24
WindState: 2,348,77,476,224

Function CumChiSquaredInv(p,dof)
Title: Cum~
ChiSquaredInv
Description: The inverse cumulative distribution function for the Chi Squared distribution with dof degrees of freedom.
Definition: 2*GammaIInv(p,dof/2)
NodeLocation: 88,120,1
NodeSize: 64,24
WindState: 2,293,90,476,224

Function CumStudentTInv(p,dof)
Title: CumStudentTInv
Description: The inverse cumulative distribution function for the Student's T distribution with dof degrees of freedom.
Definition: var x := BetaIInv(p,dof/2,dof/2);~
var a := (2*x-1)^2;~
(if p<0.5 then -1 else 1) * sqrt( dof * a / (1-a))~

NodeLocation: 232,120,1
NodeSize: 72,24
WindState: 2,447,319,476,224

Function CumFDistInv(p,dof1,dof2)
Title: CumFDistInv
Description: The Inverse Cumulative Probability Function for the F-distribution.
Definition: var x := BetaIInv( p, dof1 / 2, dof2 / 2);~
dof2 * x / ( dof1 * (1-x) )
NodeLocation: 376,120,1
NodeSize: 64,24
WindState: 2,376,499,476,224

Function CumExponential(x,rate)
Title: Cum~
Exponential
Description: Cumulative probability up to x of an Exponential distribution with given mean.   This is the area to the left of x.
Definition: 1 - exp(-x*rate)
NodeLocation: 88,232,1
NodeSize: 60,25

Function CumExponentialInv(p,rate)
Title: Cum~
ExponentialInv
Description: The inverse cumulative distribution function for an Exponential distribution with given mean.
Definition: -rate * ln(1-p)
NodeLocation: 88,288,1
NodeSize: 64,24
WindState: 2,522,661,476,224

Function CumLogistic(x,mean ; scale : optional=1)
Title: Cum Logistic
Description: The cumulative probability function for the logistic distribution.  This gives the probability area to the left of x in a Logistic(mean,scale) distribution.
Definition: 1/(1+exp(-(x-mean)/scale))
NodeLocation: 216,232,1
NodeSize: 60,25

Function CumLogisticInv(p,mean ; scale : optional=1)
Title: Cum Logistic Inv
Description: The inverse cumulative distribution function for the logistic distribution.  This is the point x at which the area to the left of x is p.
Definition: mean - scale * ln(1/p - 1)
NodeLocation: 216,288,1
NodeSize: 60,25
WindState: 2,464,332,476,224

Function CumLogNormal(x ; median,gsdev,mean,stddev : optional atomic)
Title: Cum LogNormal
Description: The cumulative distribution function for the LogNormal distribution.~
This is the probability area to the left of x.~
You must specify x and then any two of distribution parameters.
Definition: if IsNotSpecified(median)+IsNotSpecified(gsdev)+~
    IsNotSpecified(mean)+IsNotSpecified(stddev)<>2 ~
then Error("You must specify exactly two of the distribution parameters to CumLogNormal");~
~
var w := 0;~
if not IsNotSpecified(mean) and not IsNotSpecified(stddev) then (~
   w := (stddev/mean)^2+1~
);~
~
if IsNotSpecified(median) then (~
  median := if IsNotSpecified(gsdev) then mean/sqrt(w)~
                  else if IsNotSpecified(mean) then (~
                            var tmp := exp(ln(gsdev)^2);~
                            stddev/sqrt(tmp*(tmp-1))~
                   ) else mean * exp(-ln(gsdev)^2/2)~
);~
~
if IsNotSpecified(gsdev) then  (~
  gsdev := if IsNotSpecified(median) then exp(sqrt(ln(w)))~
                 else if IsNotSpecified(mean) then exp(sqrt(ln(1+sqrt(1+4*(stddev/median)^2))/2))~
                 else exp(sqrt(2*ln(mean/median)))~
);~
~
CumNormal(ln(x),ln(median),ln(gsdev))
NodeLocation: 352,232,1
NodeSize: 60,24
WindState: 2,24,570,745,616

Function CumLogNormalInv(p ; median,gsdev,mean,stddev : optional atomic)
Title: Cum LogNormalInv
Description: The inverse cumulative distribution function for the LogNormal distribution.~
This is the value x such that the probability area to the left of x is p.~
You must specify p and then any two of distribution parameters.
Definition: if IsNotSpecified(median)+IsNotSpecified(gsdev)+~
    IsNotSpecified(mean)+IsNotSpecified(stddev)<>2 ~
then Error("You must specify exactly two of the distribution parameters to CumLogNormalInv");~
~
var w := 0;~
if not IsNotSpecified(mean) and not IsNotSpecified(stddev) then (~
   w := (stddev/mean)^2+1~
);~
~
if IsNotSpecified(median) then (~
  median := if IsNotSpecified(gsdev) then mean/sqrt(w)~
                  else if IsNotSpecified(mean) then (~
                            var tmp := exp(ln(gsdev)^2);~
                            stddev/sqrt(tmp*(tmp-1))~
                   ) else mean * exp(-ln(gsdev)^2/2)~
);~
~
if IsNotSpecified(gsdev) then  (~
  gsdev := if IsNotSpecified(median) then exp(sqrt(ln(w)))~
                 else if IsNotSpecified(mean) then exp(sqrt(ln(1+sqrt(1+4*(stddev/median)^2))/2))~
                 else exp(sqrt(2*ln(mean/median)))~
);~
~
exp(CumNormalInv(p,ln(median),ln(gsdev)))
NodeLocation: 352,288,1
NodeSize: 64,24
WindState: 2,-7,382,745,616

Function CumTriangular(x,min,mode,max)
Title: Cum Triangular
Description: The cumulative distribution function for the Triangular(min,mode,max) distribution.  This gives the probability area to the left of x.
Definition: var h := 2/(max-min);~
if x<min then 0~
else if x>max then 1~
else if x<mode then 0.5 * h * (x-min)^2 / (mode-min) ~
else 0.5 * (max-min) * h - 0.5 * h * (max-x)^2 / (max-mode)
NodeLocation: 88,384,1
NodeSize: 60,24
WindState: 2,573,38,477,260

Function CumTriangularInv(p,min,mode,max)
Title: Cum TriangularInv
Description: The inverse cumulative distribution function for a Triangular(min,mode,max) distribution.  This is the value where p area of probability mass is to the left.
Definition: var h := 2/(max-min);~
var a1 := 0.5 * (mode-min) * h;~
if p<=a1 then~
   min + sqrt(2*(mode-min) *p / h)~
else~
   max - sqrt(2*(max-mode)*(1-p) / h)
NodeLocation: 88,441,1
NodeSize: 60,24
WindState: 2,509,262,508,314

Function CumUniform(x,lb,ub)
Title: Cum Uniform
Description: The cumulative distribution function for the Uniform(lb,ub) distribution.
Definition: if x<lb or x>ub then 0 else~
(x-lb) / (ub-lb)
NodeLocation: 208,384,1
NodeSize: 48,24
WindState: 2,642,711,476,224

Function CumUniformInv(p,lb,ub)
Title: Cum UniformInv
Description: The inverse cumulative distribution function for the Uniform(lb,ub) distribution.
Definition: lb + p*(ub-lb)
NodeLocation: 208,440,1
NodeSize: 56,24

Function CumWeibull(x,shape ; scale : optional = 1 )
Title: Cum Weibull
Description: The cumulative distribution function for the Weibull distribution.
Definition: 1-exp( -(x/scale)^shape )
NodeLocation: 320,384,1
NodeSize: 48,24

Function CumWeibullInv(p,shape ; scale : optional=1)
Title: Cum WeibullInv
Description: The inverse cumulative probability function for the Weibull distribution
Definition: scale * ( -ln(1-p) )^(1/shape)
NodeLocation: 336,440,1
NodeSize: 56,24

Text Te99911
Description: Cumulative functions for some discrete distributions:
NodeLocation: 136,512,-1
NodeSize: 112,20
NodeColor: 65535,65535,65535

Function CumBinomial(k,n,p)
Title: Cum Binomial
Description: The cumulative probability of a Binomial(n,p) distribution up to and including k.  In other words, the probability that a sample drawn from a binomial(n,p) distribution is less than or equal to k.
Definition: BetaI( 1-p, n-Floor(k), 1+Floor(k) )
NodeLocation: 80,576,1
NodeSize: 56,24
WindState: 2,849,32,476,224

Function CumPoisson(k,mean)
Title: CumPoisson (x,mean)
Description: The cumulative probability of a Poisson distribution -- the probability that the poisson outcome is less than or equal to k.
Definition: if k<0 then 0 else (~
  k:=Floor(k);~
  1-GammaI(mean,k+1)~
)
NodeLocation: 248,576,1
NodeSize: 96,24
WindState: 2,875,27,434,288

Function CumGeometric(k,p : nonNegative)
Title: Cum Geometric
Description: The cumulative geometric distribution.  This returns the probability that you would see fewer than 1 Bernoulli success in k independent trials, where p is the probability of success in each trial.
Definition: (k>=0) * (1-(1-p)^k)
NodeLocation: 424,576,1
NodeSize: 56,24
WindState: 2,22,527,476,224

Function CumGeometricInv(u,p : nonNegative atom)
Title: Cum GeometricInv
Description: The inverse cumulative probability of a Geometric(p) distribution.  This returns the greatest number of trials, k, such that the probability of seeing k or fewer trials is less than or equal to u, given that the probability of success for each independent trial is p.
Definition: var q := 1-p;~
if p>0 and q>0 then   Ceil( ln(1-u)/ln(q) )~
else if (q>0) then       Inf~
else                           1
NodeLocation: 432,632,1
NodeSize: 64,24
WindState: 2,102,83,476,420

Close Cumulative_densities

Library Distribution_densit1
Title: Distribution Densities
Author: Lonnie
Date: Wed, Aug 06, 2008 12:30 PM
DefaultSize: 48,24
NodeLocation: 80,48,1
NodeSize: 56,24
DiagState: 2,420,24,363,136,17

Function Ldens_wishart(x,cv : Number[I,J] ; n : positive ; I,J : Index)
Title: LDens_Wishart(x,cv,n,I,J)
Description: The natural log of the density of a Wishart distribution at x.  X in this case is a 2-D matrix indexed by I and J.   (X is usually a scatter matrix). Cv must be positive-definite.~
~
The actual density is given by Exp( LnDens_Wishart( x,cv,n,I,J) ), but beware that this is usually a very small number and may underflow the limits of the computer's numeric precision.
Definition: var isPosDefinite := Min(EigenDecomp(x+Transpose(x,I,J),I,J)[.item='value']>0,J);~
if isPosDefinite then begin~
  var p:=size(I);~
  var tr := Sum(MatrixMultiply(Invert(cv,I,J),I,J,x,I,J)[J=I],I);~
  var logdet := ln(Determinant(cv,I,J));~
  var logp := logdet*(0.5*(n-p-1)) + ( -0.5 * tr ) - ln(2) * (0.5*n*p) - ln(Pi)*(p*(p-1)/4) - logdet*(0.5*n) - sum( LGamma(0.5*(n+1-I)), I ) ;~
  exp(logp)~
end ~
  else -INF
NodeLocation: 136,520,1
NodeSize: 72,24
WindState: 2,102,90,693,313

Function Ldens_invertedwishar(x,psi : Number[I,J] ; n : positive ; I,J : index)
Title: LDens_InvertedWishart(x,Psi,n,I,J)
Description: The natural log of the density of the Inverted Wishart distribution.  Psi must be positive-definite. The density is zero (ln density -INF) when x is not positive-definite.
Definition: var isPosDefinite := Min(EigenDecomp(x+Transpose(x,I,J),I,J)[.item='value']>0,J);~
if isPosDefinite then begin~
  var p := size(I);~
  var logDetPsi := ln(Determinant(Psi,I,J));~
  var logDetX := ln(Determinant(X,I,J));~
  var tr := sum( -0.5 * MatrixMultiply(Psi,I,J, Invert(x,I,J),I,J)[J=I],I);~
  logDetPsi * (0.5*n) + logDetX * (-0.5*(n+p+1)) + (-0.5*tr)~
  - ln(2)*(0.5*n*p) - ln(Pi)*(p*(p-1)/4) - sum( LGamma(0.5*(n+1-I)), I ) ;~
end ~
  else -INF
NodeLocation: 136,576,1
NodeSize: 96,24

Function Dens_normal(x,m,sd : numeric orNull)
Title: Dens_Normal(x,m,sd)
Description: The density of a uniform distribution
Definition: 1/(sd*sqrt(2*Pi) ) * exp( - 0.5 * ( (x-m)/sd)^2 )
NodeLocation: 88,112,1
NodeSize: 64,24
WindState: 2,105,359,476,224

Function Dens_uniform(x,min,max:Numeric orNull ; integer : optional boolean = false)
Title: Dens_Uniform~
(x,min,max)
Description: The probability density of x in a uniform distribution.  If the parameter integer is supplied and specified as false, then the probability of a discrete uniform distribution is returned.
Definition: (min <= x and x<= max) * (~
   if integer then   1/(floor(max)-ceil(min)+1)~
   else 1/(max-min)~
)
NodeLocation: 224,112,1
NodeSize: 64,24
WindState: 2,98,83,597,363

Function Dens_beta(x,a,b : numeric orNull; lower : optional=0, upper : optional = 1)
Title: Dens_Beta~
(x,a,b)
Description: The density of a beta distribution at x.
Definition: x := (x-lower) / (upper-lower);~
If 0<=x<=1 then ~
1/Betafn( a,b) * x^(a-1) * (1-x)^(b-1) / (upper-lower)~
else if x=null then null~
else 0
NodeLocation: 216,48,1
NodeSize: 56,24
WindState: 2,405,156,477,242

Function Prob_bernoulli(x ; p : NonNegative orNull)
Title: Prob_Bernoulli~
(x,p)
Description: The probability of a Bernoulli distribution with parameter p at x.  Since a Bernoulli sample consists of 0s and 1s only, the probability is zero everywhere except at x=0 and x=1.
Definition: if x=null or p=null then null~
else if x=0 then (1-p)~
else if x=1 then p~
else 0
NodeLocation: 88,48,1
NodeSize: 64,24
WindState: 2,574,62,514,279

Function Prob_binomial(x,n,p : NonNegative OrNull)
Title: Prob_Binomial(x,n,p)
Description: The probability that x positive events occur in a Binomial sample of size n drawn, where the independent probability of drawing a positive sample in each draw is p.
Definition: if x<0 or x>n then 0 ~
else Combinations(x,n) * p^x * (1-p)^(n-x)
NodeLocation: 344,48,1
NodeSize: 64,24
WindState: 2,407,397,527,340

Function Prob_chancedist(x ; p:NonNegative orNull[I] ; A : Array[I] ; I : Index = Common)
Title: Prob_ChanceDist~
(x,P,A,I)
Description: Returns the probability that a sample from ChanceDist(p,A,I) is x.
Definition: var j := subIndex(A,x,I);~
if IsUndef(j) then 0~
else p[I=j] / sum(p,I)
NodeLocation: 376,112,1
NodeSize: 80,24

Function Dens_chisquared(x ; dof : positive orNull)
Title: Dens_ChiSquared~
(x,dof)
Description: Returns the probability at x of a chi-squared distribution with dof degrees of freedom.
Definition: 0.5^(dof/2) / Gammafn( dof/2 ) * x^(dof/2-1) * exp(-0.5 * x)
NodeLocation: 104,176,1
NodeSize: 80,24

Function Dens_exponential(x,rate : numeric orNull)
Title: Dens_Exponential~
(x,rate)
Description: The density of an exponential distribution with the given rate parameter at x.
Definition: rate * exp(-rate * x)
NodeLocation: 272,176,1
NodeSize: 80,24
WindState: 2,675,236,476,224

Function Dens_gamma(x : Nonnegative orNull; alpha : positive orNull; beta : optional = 1 )
Title: Dens_Gamma~
(x,a,b)
Description: The probability density of a gamma(alpha,beta) distribution at x.
Definition: beta^(-alpha) * x^(alpha-1) * exp(-x/beta) / gammafn(alpha)
NodeLocation: 104,240,1
NodeSize: 64,24
WindState: 2,473,89,476,218

Function Dens_gaussian(x,m : Number OrNull[I] ; cv : Number[I,J] ; I,J : Index)
Title: Dens_Gaussian~
(x,m,cv,I,J)
Description: The probability density of a point x in a mult-variate Gaussian distribution.  m is the mean vector, cv the covariance matrix defining the Gaussian.
Definition: var N := size(I);~
if max(x=null or m=null,I) then null else~
1/ sqrt( (2*Pi)^N * Determinant(cv,I,J) ) * ~
exp( -1/2 * sum( sum( (x-m)[I=J]*Invert(cv,I,J), J) * (x-m), I ) )
NodeLocation: 256,240,1
NodeSize: 72,24
WindState: 2,319,347,599,406

Function Dens_lognormal(x ; median,gsdev,mean,stddev : optional atomic)
Title: Dens_LogNormal~
(x,median,gsdev)
Description: The density of the Log Normal distribution
Definition: if IsNotSpecified(median)+IsNotSpecified(gsdev)+~
    IsNotSpecified(mean)+IsNotSpecified(stddev)<>2 ~
then Error("You must specify exactly two of the distribution parameters to Dens_LogNormal");~
~
var w := 0;~
if not IsNotSpecified(mean) and not IsNotSpecified(stddev) then (~
   w := (stddev/mean)^2+1~
);~
~
if IsNotSpecified(median) then (~
  median := if IsNotSpecified(gsdev) then mean/sqrt(w)~
                  else if IsNotSpecified(mean) then (~
                            var tmp := exp(ln(gsdev)^2);~
                            stddev/sqrt(tmp*(tmp-1))~
                   ) else mean * exp(-ln(gsdev)^2/2)~
);~
~
if IsNotSpecified(gsdev) then  (~
  gsdev := if IsNotSpecified(median) then exp(sqrt(ln(w)))~
                 else if IsNotSpecified(mean) then exp(sqrt(ln(1+sqrt(1+4*(stddev/median)^2))/2))~
                 else exp(sqrt(2*ln(mean/median)))~
);~
~
Dens_Normal(ln(x),ln(median),ln(gsdev))/x
NodeLocation: 256,376,1
NodeSize: 80,24
WindState: 2,43,416,611,613

Function Dens_weibull( x : scalar ; shape : positive ; scale : optional positive )
Title: Dens Weibull
Description: The probability density of the Weibull distribution at a point x.
Definition: if x<0 then 0~
else (~
  shape / scale * (x/scale)^(shape-1) * exp( -(x/scale)^shape )~
)
NodeLocation: 304,520,1
NodeSize: 48,24

Function Dens_studentt(x,dof)
Title: Dens_StudentT~
(x,dof)
Description: The probability density at x of the Student's T distribution with dof degrees of freedom.
Definition: var c := (dof+1)/2;~
GammaFn( c )~
/ ( Sqrt(dof*Pi) * GammaFn(dof/2) )~
* ( 1+x^2/dof) ^ -c
NodeLocation: 96,440,1
NodeSize: 72,24
WindState: 2,589,819,475,294

Function Dens_triangular(x,min,mode,max)
Title: Dens_Triangular~
(x,min,mode,max)
Description: The probability density at x of a Triangular distribution.
Definition: var h := 2/(max-min);~
~
if x<min or x>max then 0~
else if x<mode then (x-min) * h / (mode-min)~
else (max-x) * h / (max-mode)
NodeLocation: 264,440,1
NodeSize: 80,24
WindState: 2,599,453,476,224

Function Dens_logistic(x,mean ; scale : optional=1)
Title: Dens_Logistic~
(x,mean,scale)
Description: The probability density at x of a logistic distribution
Definition: var ex:= exp(-(x-mean)/scale );~
ex / ( scale * (1+ex)^2 )
NodeLocation: 104,376,1
NodeSize: 64,24
WindState: 2,560,470,476,224

Function Dens_cumdist(x : Reduced ; P:NonNegative[I,Run] ; R : ascending Numeric[I,Run] ;~
I : Index = Common ; Smooth : optional boolean[] = true )
Title: Dens CumDist~
(x,P,R,I)
Description: The probability density at point x in a custom distribution defined using the CumDist function.~
~
Currently this uses a very inefficient and noisy method for the smooth=true case (including when smooth isn't specified).
Definition: var eps := (Max(R,I) - Min(R,I)) * 1e-6;~
if smooth then begin~
  { This method doesn't seem to work -- seems like the way to do it though }~
  if AnalyticaVersion>=40102 then ~
      ( MonoCubicInterp( R, P, x+Eps/2, I ) - MonoCubicInterp( R,P,x-Eps/2, I)) / Eps~
  else (~
      { Here is an alternative approximate method for now.  Unfortunately, it isn't very Analytic }~
      { Necessary because MonoCubicInterp doesn't work prior to release 4.1.2 }~
      Index J := 1..max([500,10*size(I)]);~
     var df := Pdf(Random(CumDist(P,R,I,over:J)),J,samplesPerStep:20,binMethod:1);  ~
     LinearInterp( df[DensityIndex='X'], df[DensityIndex='Y'], x, df.Step )~
  )~
end Else~
   ( LinearInterp( R, P, x+Eps/2, I ) - LinearInterp( R,P,x-Eps/2, I)) / Eps~

NodeLocation: 544,112,1
NodeSize: 80,24
WindState: 2,198,164,666,650

Function Prob_poisson(x,mean)
Title: Prob_Poisson~
(x,mean)
Description: The probability at the integer value x of a Poisson distribution.
Definition: if abs(Round(x)-x) > 1e-6 then 0~
else if mean=0 then x=0~
else (~
  exp( -mean + x*ln(mean) - LGamma(x+1) )~
)
NodeLocation: 432,376,1
NodeSize: 64,24
WindState: 2,42,710,476,224

Function Dens_probdist(x : Reduced ; ~
P : NonNegative[I,Run] ; R : Numeric[I,Run] ; I : Index = Common )
Title: Dens ProbDist~
(x,P,R,I)
Description: The probability density at x in a distribution defined by ProbDist(P,R,I)
Definition: if x=null then null ~
else if x<Min(R,I) or x>Max(R,I) then 0~
else ( ~
   var a := LinearInterp(R,P,x,I);~
   index J := CopyIndex(R); ~
   a / Area(P[@I=@J],J)~
)
NodeLocation: 592,376,1
NodeSize: 80,24
WindState: 2,525,87,513,359

Function Prob_geometric(k,p)
Title: Prob_Geometric~
(k,p)
Description: The probability at point k in a Geometric(p) discrete distribution.
Definition: if k<0 or abs(round(k)-k)>1e-6 then 0~
else (1-p)^(k-1) * p
Check: p>=0 and p<=1
NodeLocation: 408,240,1
NodeSize: 72,24
WindState: 2,798,3,476,224

Function Prob_hypergeometric(k,trials,posEvents,size : atomic)
Title: Prob_Hypergeometric~
(k,trials,posEvents,size)
Description: The probability at point k in a HyperGeometric(trials,posEvents,size) discrete distribution.
Definition: if k<0 or k>posEvents or trials-k > size-posEvents or abs(round(k)-k)>1e-6 ~
then 0~
else ~
   Combinations(k,posEvents) ~
   * Combinations(trials-k,size-posEvents)~
   / Combinations( trials,size)
NodeLocation: 120,304,1
NodeSize: 96,24
WindState: 2,761,109,571,260

Function Dens_fdist(x,d1,d2)
Title: Dens_FDist~
(x,d1,d2)
Description: The probability density at x of an F-distribution with d1 and d2 degrees of freedom.~
~
Note that the F-distribution is not a built-in distribution in Analytica.
Definition: exp( 0.5 * ~
   (d1 * ln(d1*x) + d2*ln(d2) - (d1+d2)*ln(d1*x+d2) ) )~
/~
( x * BetaFn( d1/2, d2/2 ) )
NodeLocation: 416,176,1
NodeSize: 56,24
WindState: 2,443,69,494,301

Close Distribution_densit1

Close Distribution_densiti

Index I_Reg_Estad_Gen
Att_PrevIndexValue: ['R2','R2 Ajustado','Residual standard error (desv)','Grados Libertad']
Title: Estadisticas Generales
Description: Estadisticas Generales de un Analisis de Regresion
Definition: ['R2','R2 Ajustado','Residual standard error (desv)','Grados Libertad']
NodeLocation: 168,424,1
NodeSize: 48,24
WindState: 2,102,82,476,224

Index I_Reg_Estad_Var_Ind
Att_PrevIndexValue: ['Coeficiente','Std','IC 5','IC 95','t-value','Prob(>|t|) %','Significancia %']
Title: Estadisticas Variables Ind
Description: Estadisticas  de las variables independientes
Definition: ['Coeficiente','Std','IC 5','IC 95','t-value','Prob(>|t|) %','Significancia %']
NodeLocation: 256,424,1
NodeSize: 48,24
WindState: 2,102,82,476,224
ValueState: 2,965,335,416,303,0,MIDM

Function F_Reg_Ana_Var(reg_coef:samptype,X:Numeric[I_X,I_Var] orNull,Y:Numeric[I_X] orNull,I_X:index,I_Var:index,Tipo_Reg:optional='Lineal')
Title: Funcion Regresion Analisis Variables
Description: Funcion para obtener estadisticas de los coeficientes de la regresion. ~
~
Se presenta la media, la desviacion estandar, y se calcula la probabilidad que el coeficiente sea distinto de cero usando una distribucion t-Student.~
~
PBH, Agosto 2017
Definition: var Yij:=Y;~
var Xij:=X;~
~
var y_ajust:=F_Ajustar_Reg(reg_coef,Xij,I_Var,tipo_Reg);~
var tvalue:=mean(reg_coef,run)/sdeviation(reg_coef,run);~
var n:=size(I_X);~
var k:=size(i_var); {N variables incluidas}~
var pr_t:=2*(1-cumstudentt(abs(tvalue),n-k))*100;~
var sign:=(100-pr_t);~
{TABLA RESUMEN}~
table(I_Reg_Estad_Var_Ind)~
(mean(reg_coef,run),~
sdeviation(reg_coef,run),~
getfract(reg_coef,0.05,run),~
getfract(reg_coef,0.95,run),~
tvalue,~
pr_t,~
sign)
NodeLocation: 168,328,1
NodeSize: 48,32
WindState: 2,786,185,863,481

Function F_Reg_Ana_Gen(reg_coef:Numeric,X:Numeric[I_X,I_Var] orNull,Y:Numeric[I_X] orNull,I_X:index,I_Var:index,Tipo_Reg:optional='Lineal')
Title: Funcion Regresion Analisis General
Description: Funcion para obtener datos generales de una regresion. ~
~
El R2 se calcula de manera distinta segun se incluye o no el intercepto. Se programo de manera similar a lo que hace R (https://stats.stackexchange.com/questions/26176/removal-of-statistically-significant-intercept-term-increases-r2-in-linear-mo)~
~
PBH, Agosto 2017
Definition: var Yij:=Y;~
var Xij:=X;~
var y_ajust:=F_Ajustar_Reg(reg_coef,Xij,I_Var,Tipo_Reg);~
var noise:=f_noise_Especial(Xij,Yij,I_X,I_Var,Tipo_Reg); {Errores distribuyen N(0,S)}~
var SSE:=sum((Yij-y_ajust)^2,I_X); {SUMA ERRORES CUADRATICOS}~
var SSTO:=if reg_Incluir_Intercep=1 then sum((Yij-mean(Yij,I_X))^2,I_X) else sum(Yij^2,I_X);~
var r:=1-SSE/SSTO; {R2}~
var n:=size(I_X); {N datos}~
N:=sum(if Yij=Null then 0 else 1,I_X);~
var k:=size(i_var); {N variables incluidas}~
var r_ajustado:=1-(1-r)*(n-1)/(n-k+reg_Incluir_Intercep-1);~
~
{TABLA RESUMEN}~
table(I_Reg_Estad_Gen)(r,r_ajustado,noise,n-k)
NodeLocation: 256,328,1
NodeSize: 48,32
WindState: 2,1108,212,713,475

Function F_Ajustar_Reg(reg_coef:array,X:array,I_Var:index,Tipo_Reg:optional='Lineal')
Title: Funcion Ajustar Regresion
Description: Para ajustar los parametros de una regresion segun cada modelo (lineal, exponencial, logaritmico)~
~
PBH, Agosto 2017
Definition: if tipo_Reg='Lineal' then~
sum(if reg_coef=0 then 0 else reg_coef*X, I_Var)~
else if tipo_Reg='Exponencial' then ~
product(if reg_coef=0 then 1 else exp(reg_coef*X), I_Var)~
else if tipo_Reg='Logaritmico' then ~
product(if reg_coef=0 then 1 else X^reg_coef, I_Var)~
else 0
NodeLocation: 344,328,1
NodeSize: 48,32
WindState: 2,865,500,987,372

Decision Reg_Tipo_Ajuste
Title: Tipo de Ajuste
Definition: Choice(I_Ajuste,0,1)
NodeLocation: 80,504,1
NodeSize: 48,24
NodeInfo: 1,0,0,1,1,1,0,,0,,0
WindState: 2,102,82,567,267
{!40200|Att_ChoiceIndexes: Index I_Ajuste}

Function F_Noise_Especial(X:Numeric[I_X,I_Var] orNull,Y:Numeric[I_X] orNull,I_X:index,I_Var:index,Tipo_Reg:optional='Lineal')
Title: Funcion Noise Especial
Description: Funciona con la Funcion de Analytica "Regressionnoise", le pasa los parametros Y e X de manera correcto segun el tipo de ajuste empleado.~
~
PBH, Agosto 2017
Definition: var X_noise:=if tipo_Reg='Logaritmico' then ln(X) else X;~
var Y_noise:= ~
if tipo_Reg='Exponencial' then ln(Y) ~
else if tipo_Reg='Logaritmico' then ln(Y)~
else Y;~
{LLAMO A LA FUNCION REGRESSION NOISE}~
var noise:=regressionnoise(Y_noise,X_noise,I_X,I_Var); ~
noise
NodeLocation: 432,328,1
NodeSize: 48,32
WindState: 2,102,82,990,365

Decision Reg_Incluir_Intercep
Title: Incluir Intercepto
Definition: Checkbox(0)
NodeLocation: 176,504,1
NodeSize: 48,24
NodeInfo: 1,0,1,1,1,1,0,,0,,0

Decision Reg_Coef_Estand
Title: Coeficientes Estandarizados
Description: Esta opcion realiza la regresion usando valores estandarizados, estos es restandoles la media y dividiendo por su desviacion estandar. Esto para el Y y para todos los X.~
~
Los coeficientes resultantes indican la variacion parcial normalizada. Por ejemplo, un coeficiente de 0.6 de X1 indica que al aumentar X1 en una unidad de desviacion estandar de X1, manteniendo las demas variables constantes, el Y aumenta en 0.6 desviaciones estandar de Y.
Definition: Checkbox(0)
NodeLocation: 280,504,1
NodeSize: 56,24
NodeInfo: 1,0,1,1,1,1,0,,0,,0
WindState: 2,102,82,660,290

Text Te14
Description: REGRESIONES
NodeLocation: 416,412,-1
NodeSize: 392,140
NodeInfo: 1,0,0,1,1,1,1,,0,,0
NodeColor: 39321,52431,65535
NodeFont: Arial Black,12

Function F_Suma_Total_Menos_1(arreglo:array,indice:Text)
Title: Suma Total Menos 1 Indice
Description: Obtiene la suma total del array excepto del indice que se entregue.~
~
Suma sobre todos los otros indices del array~
~
PBH, Agosto 2017
Definition: var cubo:=arreglo;~
index a:=indexNames(cubo); {INDICES DEL ARREGLO}~
index i_suma:=subset(a<>indice); {CREO ARREGLO DE INDICES MENOS EL QUE NO DESEO SUMAR}~
for i:=i_suma do(~
   var b:=handleFromIdentifier(i);{HANDLE FROM IDENTIFIER ME PERMITE EVALUAR UN STRING COMO SI FUERA EL ID DE LA VARIABLE}~
   cubo:=sum(cubo,b);~
  );~
cubo
NodeLocation: 208,216,1
NodeSize: 56,24
WindState: 2,474,185,834,446
DisplayOutputs: Index Indice_Sort_Indicado

Function F_summary_Posicion(estad:array,arreglo:array,J:index,aprox_arriba: optional =False)
Title: Funcion Posicion Summary
Description: Devuelve el nombre o id de la posicion en el indice sobre el cual se realiza la Funcion Summary.~
En el caso de los percentiles y la media, entrega el identificador con el valor mas aproximado a lo largo del array.~
~
Por ejemplo: Devuelve el identificador con valor correspondiente al percentil 50.~
~
Funciona para una sola dimension. En caso de que estadigrafos este indexados por mas dimensiones, se debe utilizar un for, por ejemplo:~
~
for j:=estadigrafos_Margen.vals do(~
     var a:=estadigrafos_Margen[.vals=j]; {Filtrar este indice para hacer unidimensional}~
     .....~
      F_Estad_Posicion(a {Ahora bien filtrado!})~
~
PBH, Agosto 2017
Definition: var arreglo_ordenado:=sort(arreglo,J);~
var pos:=Stepinterp(arreglo_ordenado,arreglo_ordenado,estad,J,LeftLookup:aprox_arriba);~
pos:=positionInIndex(arreglo,pos,J);~
var a:=slice(J,J,pos);~
if i_estadigrafo='stddev' then null else a {No devuelve nada para la desviacion estandar}
NodeLocation: 288,144,1
NodeSize: 48,24
WindState: 2,102,82,937,317

Function F_Prom_Total_Menos_1(arreglo:array,indice:Text)
Title: Promedio Total Menos 1 Indice
Description: Obtiene el promedio del array excepto del indice que se entregue.~
~
Promedio sobre todos los otros indices del array~
~
Como la funcion average no me permite pasar un "HandloFromIdentifier" directo, y los for permiten solo una linea de asignacion, calculo el promedio a mano (SUMA/CUENTA)~
~
PBH, Agosto 2017
Definition: var cubo:=arreglo;~
index a:=indexNames(cubo); {INDICES DEL ARREGLO}~
index i_suma:=subset(a<>indice);~
for i:=i_suma do (~
   var b:=HandleFromIdentifier(i);~
   cubo:=average(cubo,b);~
   );~
cubo
NodeLocation: 400,216,1
NodeSize: 56,24
WindState: 2,185,152,834,353

Function F_Promedio_Total(array)
Title: Promedio Total
Description: Obtiene el promedio del array.~
Pasa el cubo a una tabla 2D, sin ningun Null, y despues obtiene el promedio de la columna con los valores. Esto permite promediar correctamente cada valor del cubo.~
~
PBH, Agosto 2017
Definition: var cubo:=f_array2table_nonul(array);~
average(cubo[.col='valor'],cubo.row)
NodeLocation: 304,216,1
NodeSize: 48,24
WindState: 2,907,191,657,411

Function F_Summary_Total(arreglo)
Title: Funcion Summary Total
Description: Calcula diferentes estadigrafos de una variable across de todo los valores del cubo ~
(como si fuera una tabla)~
~
Se debe entregar el arreglo conteniendo <nulls>; e ignorar los warnings~
~
PBH, Agosto 2017
Definition: var tabla:=f_array_to_table(arreglo);~
tabla:=tabla[.i2='valor'];~
f_summary(tabla,tabla.i1)
NodeLocation: 200,144,1
NodeSize: 48,24
WindState: 2,102,82,753,290

Function F_Histograma(arreglo;J:index;n:optional atomic = 100;relativo: optional=True )
Title: Histograma
Description: Funcion para a partir de un arreglo crear su histograma.~
~
Busca el maximo y minimo de TODO EL CUBO entregado para crear el indice de steps, y despues agrupa el indice J dentro de este indice Steps por cuenta.~
~
Se debe tener especial consideracion de que el valor maximo del cubo difiere del valor maximo de la suma del cubo en algun indice, por lo que se debe reducir la dimensionalidad del cubo previo a usar la funcion, segun lo que se desee calcular.~
~
Por defecto considera 100 intervalos y calcula la frecuencia relativa~
~
PBH Agosto 2017
Definition: {STEPS}~
var a:=f_array_to_table(arreglo);~
a:=a[.i2='valor']; {ARREGLO DE 1D CON TODOS LOS VALORES}~
var maxi:=max(a,a.i1);~
var mini:=min(a,a.i1);~
var steps:=(maxi-mini)/n;~
index hist:=sequence(mini,maxi,steps);~
{HISTOGRAMA}~
var freq:=frequency(arreglo,hist);~
freq:=sum(freq,J);~
var total:=f_suma_total(freq);~
if relativo=True then freq/total else freq
NodeLocation: 544,144,1
NodeSize: 48,24
WindState: 2,102,82,1049,448

Function F_CDF(arreglo;J:index;n:optional atomic = 100)
Title: CDF
Description: Utiliza la funcion programada para calcular el histograma de un arreglo.Por defecto considera 100 intervalos.~
~
Es un cumulate del histograma, para mayor detalle ver la descripcion de la funcion F_Histograma~
~
PBH Agosto 2017
Definition: var histograma:=f_histograma(arreglo,J,n,True);~
cumulate(histograma,histograma.hist)
NodeLocation: 624,144,1
NodeSize: 40,24
WindState: 2,741,106,937,289
DisplayOutputs: Variable CDF_Emisiones

Text Te1544550599
Description: Librerias Lumina
NodeLocation: 644,328,-1
NodeSize: 124,48
NodeInfo: 1,0,0,1,1,1,0,,0,,0
NodeColor: 52427,65535,65535

Function F_Estandarizar(arreglo;J:index)
Title: Funcion Estandarizar
Description: Para estandarizar una set de numeros en una dimension.~
~
Estandarizar se refiere a restar el promedio y dividir por la desviacion estandar. Ambos estimadores de momento se calculan en base al indice J entregado.~
~
Para el caso que la desviacion estandar sea cero, no estandariza.~
~
PBH Agosto 2107
Definition: var mu:=average(arreglo,J);~
var sd:=sdeviation(arreglo,J);~
if sd=0 then arreglo else (arreglo-mu)/sd
NodeLocation: 192,600,1
NodeSize: 48,24
WindState: 2,369,148,704,304

Close Funciones__estadist

Text Te1475005122
Description: Funcions iArrays:~
-Elimina Nulls~
-Tabla a Arreglo~
-Lectura BD~
-Crear Indice~
~
Funciones Estadisticas:~
-Summary (similar a R)~
~
Funciones Financieras:~
-Valor Anualizado~

NodeLocation: 840,132,-1
NodeSize: 288,116
NodeInfo: 1,0,0,1,0,1,0,,0,,0
WindState: 2,102,90,476,224
NodeColor: 65535,65535,65535

Text Test1475005122
Description: Modulo Funciones Greenlab~

NodeLocation: 284,44,-1
NodeSize: 244,20
NodeInfo: 1,0,0,1,0,1,1,,0,,0
WindState: 2,97,331,476,224
NodeColor: 65535,65533,52427
NodeFont: Arial Rounded MT Bold,19

Text Test1477685970
Description: V2~
~
ultima modificacion:  26 Junio 2019
NodeLocation: 284,132,-1
NodeSize: 244,36
NodeInfo: 1,0,0,1,0,1,1,,0,,0
NodeColor: 65535,65533,52427
NodeFont: Arial Rounded MT Bold,19

Module Iconos
Title: Iconos
Author: Green12
Date: Thu, Jun 29, 2017 11:10 AM
NodeLocation: 640,304,0
NodeSize: 48,24
NodeInfo: 1,1,1,1,1,1,0,0,0,0,
DiagState: 2,703,162,986,227,17
FontStyle: Arial,15

Variable Icono_Tabla
Title: Tabla
Definition: 1
NodeLocation: 80,160,1
NodeSize: 48,32
WindState: 2,102,82,476,224
Icon: (00 00 00 00 00 00 00 00 1F FF FF FE 10 80 00 02 10 80 00 02 10 80 00 02 10 80 00 02 1F FF FF FE 10 80 00 02 10 80 00 02 10 80 00 02 10 80 00 02 10 80 00 02 10 80 00 02 10 80 00 02 10 80 00 02 10 80 00 02 10 80 00 02 10 80 00 02 10 80 00 02 10 80 00 02 10 80 00 02 10 80 00 02 10 80 00 02 10 80 00 02 10 80 00 02 10 80 00 02 10 80 00 02 10 80 00 02 1F FF FF FE 00 00 00 00 00 00 00 00)

Variable Icono_Histograma
Title: Histograma
Definition: 2
NodeLocation: 496,248,1
NodeSize: 48,32
WindState: 2,102,82,476,224
Icon: (00 00 00 00 00 00 00 00 08 00 00 00 1C 00 00 00 3E 00 00 00 08 00 00 00 08 00 00 00 08 00 00 00 08 00 00 00 08 00 00 00 08 00 80 00 08 01 40 00 08 02 20 00 08 02 20 00 08 04 10 00 08 08 08 00 08 08 08 00 08 08 08 00 08 08 08 00 08 10 04 00 08 10 04 00 08 20 02 00 08 40 01 00 09 80 00 80 0F 00 00 68 08 00 00 0C 0F FF FF FE 00 00 00 0C 00 00 00 08 00 00 00 00 00 00 00 00 00 00 00 00)

Variable Icono_Array
Title: Array
Definition: 3
NodeLocation: 200,160,1
NodeSize: 48,32
WindState: 2,102,82,476,224
Icon: (00 00 00 00 00 00 00 08 00 00 00 10 00 20 00 20 00 10 00 40 00 10 00 80 00 10 00 80 00 08 01 00 00 08 02 00 00 08 04 00 02 04 08 00 01 04 10 00 00 C4 20 00 00 32 20 00 00 0E 40 00 00 01 C0 00 00 03 80 00 00 0D 80 00 00 32 80 00 00 C2 40 00 01 02 40 00 02 04 20 00 00 04 20 00 00 04 10 00 00 08 10 00 00 08 08 00 00 00 08 00 00 00 04 00 00 00 04 00 00 00 02 00 00 00 02 00 00 00 00 00)

Variable Icono_CDF
Title: CDF
Definition: 4
NodeLocation: 432,160,1
NodeSize: 48,32
WindState: 2,102,82,476,224
Icon: (00 00 00 00 00 00 00 00 08 00 00 00 1C 00 00 00 3E 00 00 00 08 00 00 1C 08 00 00 E0 08 00 03 00 08 00 0E 00 08 00 30 00 08 00 C0 00 08 03 80 00 08 06 00 00 08 18 00 00 08 30 00 00 08 60 00 00 08 C0 00 00 09 80 00 00 09 00 00 00 0B 00 00 00 0A 00 00 00 0E 00 00 00 0C 00 00 00 0C 00 00 00 08 00 00 08 08 00 00 0C 0F FF FF FE 00 00 00 0C 00 00 00 08 00 00 00 00 00 00 00 00 00 00 00 00)

Variable Icono_X_vs_Y
Title: X vs Y
Definition: 5
NodeLocation: 536,168,1
NodeSize: 48,32
WindState: 2,102,82,476,224
Icon: (00 00 00 00 00 00 00 00 08 00 00 00 1C 00 00 00 3E 00 00 00 08 00 00 00 08 00 00 00 08 00 00 00 08 00 00 00 08 01 01 00 08 00 20 00 08 00 10 20 08 20 05 00 08 12 80 00 08 00 01 00 08 00 50 00 08 12 00 00 09 04 24 20 08 80 80 00 08 00 20 00 08 24 02 00 09 00 00 00 08 01 00 00 0A 50 00 00 08 00 00 08 08 00 00 0C 0F FF FF FE 00 00 00 0C 00 00 00 08 00 00 00 00 00 00 00 00 00 00 00 00)

Variable Icono_Estadigrafos
Title: Estadigrafos
Definition: 23
NodeLocation: 128,248,1
NodeSize: 56,32
WindState: 2,102,82,476,224
Icon: (00 00 00 1C 00 00 00 14 00 00 00 08 00 00 00 1E 00 00 00 00 00 00 00 08 00 00 00 08 FF FC 03 F8 00 00 06 08 80 04 04 00 40 08 04 00 20 10 02 00 10 20 02 00 08 40 01 00 04 80 00 80 03 00 00 60 03 00 00 20 04 80 00 18 08 40 00 08 10 20 00 08 20 10 00 08 40 08 08 30 80 04 0F E0 00 00 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00)

Variable Sort1
Title: Sort
Definition: 12
NodeLocation: 248,248,1
NodeSize: 48,32
WindState: 2,102,82,476,224
Icon: (00 00 00 00 00 00 00 00 08 00 00 00 1C 00 00 00 3E 00 00 00 08 00 00 00 08 00 00 00 08 00 00 00 08 00 00 00 0B 00 00 00 0B 00 00 00 0B 00 00 00 0B 00 00 00 0B 00 00 00 0B 60 00 00 0B 60 00 00 0B 60 00 00 0B 60 00 00 0B 60 00 00 0B 60 00 00 0B 6C 00 00 0B 6C 00 00 0B 6D 80 00 0B 6D 80 00 0B 6D B0 08 0B 6D B0 0C 0F FF FF FE 00 00 06 CC 00 00 06 C8 00 00 00 C0 00 00 00 C0 00 00 00 00)

Variable Ajuste_Regresion
Title: Ajuste Regresion
Definition: 32
NodeLocation: 376,248,1
NodeSize: 48,40
WindState: 2,102,82,476,224
Icon: (00 00 00 00 00 00 00 00 08 00 00 00 1C 00 00 00 3E 00 00 40 08 00 08 80 08 01 01 00 08 00 02 20 08 20 14 00 08 01 09 00 08 04 10 00 08 00 20 20 08 20 45 00 08 12 90 00 08 01 01 00 08 82 50 00 08 14 00 00 09 48 24 20 08 92 80 00 0C 20 20 00 08 44 02 00 0A 90 50 00 09 01 00 00 0A 54 00 00 0C 00 00 08 08 00 00 0C 0F FF FF FE 00 00 00 0C 00 00 00 08 00 00 00 00 00 00 00 00 00 00 00 00)

Variable Icono_Array2
Title: Array
Definition: 3
NodeLocation: 304,160,1
NodeSize: 48,32
WindState: 2,102,82,476,224
Icon: (00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 3F FF E0 00 60 00 60 00 A0 00 A0 01 20 01 20 02 20 02 20 04 20 04 20 08 20 08 20 10 20 10 20 3F FF E0 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 3F FF E0 20 40 20 40 20 80 20 80 21 00 21 00 22 00 22 00 24 00 24 00 28 00 28 00 30 00 30 00 3F FF E0 00 00 00 00 00 00 00 00 00)

Close Iconos

Module Codigo_Colores_GL
Title: Codigo Colores GL
Author: sg
Date: jue., jun. 27, 2019 5:53 p. m.
NodeLocation: 776,304,1
NodeSize: 48,24
DiagState: 2,489,57,1155,528,17

Text Te1561592778
Description: Leyenda de Colores de Nodos
NodeLocation: 292,196,-1
NodeSize: 228,172
NodeInfo: 1,,,,,1
NodeColor: 52427,58983,65535

Index Indice
Title: Indice
Definition: 1
NodeLocation: 144,80,1
NodeSize: 48,24

Decision Selector
Title: Selector (Choice o CheckBox)
Definition: 1
NodeLocation: 144,144,1
NodeSize: 48,32

Constant Valor_Constante_o_Ex
Title: Valor Constante o Exogeno
Definition: 1
NodeLocation: 144,224,1
NodeSize: 48,32

Variable Parametro_Modelo
Title: Parametro Modelo
Definition: 1
NodeLocation: 144,296,1
NodeSize: 48,24
NodeColor: 1,65535,49152

Variable Variable_Intermedia_
Title: Variable Intermedia de calculo
Definition: 1
NodeLocation: 272,80,1
NodeSize: 48,32

Variable Equivalencia_o_Map_e
Title: Equivalencia o Map entre indices
Definition: 1
NodeLocation: 272,160,1
NodeSize: 48,32
NodeColor: 65535,45873,39321

Variable Resultado_Intermedio
Title: Resultado Intermedio Chequeo
Definition: 1
NodeLocation: 272,280,1
NodeSize: 48,32
NodeColor: 65535,65531,1

Objective Resultado_Interes_Mo
Title: Resultado Interes Modelo
Definition: 1
NodeLocation: 392,160,1
NodeSize: 48,32

Text Te1561592958
Description: Leyenda de Colores de Modulos
NodeLocation: 756,196,-1
NodeSize: 236,172
NodeInfo: 1,,,,,1
NodeColor: 65535,63895,52427

Module Modulo_Libreria_GL
Title: Modulo Libreria GL
Author: sg
Date: jue., jun. 27, 2019 5:53 p. m.
NodeLocation: 592,80,1
NodeSize: 48,24

Close Modulo_Libreria_GL

Module Modulo_General
Title: Modulo General
Author: sg
Date: jue., jun. 27, 2019 5:53 p. m.
NodeLocation: 592,160,1
NodeSize: 48,24
NodeColor: 1,19984,65535

Close Modulo_General

Module Modulo_Reporte_Resul
Title: Modulo Reporte Resultados
Author: sg
Date: jue., jun. 27, 2019 5:53 p. m.
NodeLocation: 592,240,1
NodeSize: 48,32
NodeColor: 65535,19661,38773

Close Modulo_Reporte_Resul

Variable Resultado_Interes_M1
Title: Resultado Interes Modulo
Definition: 1
NodeLocation: 400,80,1
NodeSize: 48,32
NodeColor: 65531,39321,65535

Variable Tabla_2D_para_Excel
Title: Tabla 2D para Excel
Definition: 1
NodeLocation: 400,272,1
NodeSize: 48,24
NodeColor: 58978,52427,65535

Module Modulo_Exportacion_R
Title: Modulo Exportacion Resultados
Author: GreenBook9
Date: Thu, Aug 8, 2019 9:16 AM
NodeLocation: 728,160,1
NodeSize: 48,32
NodeColor: 52425,39321,65535

Close Modulo_Exportacion_R

Close Codigo_Colores_GL

Library Funciones_Lumina
Title: Funciones Lumina
Author: sg
Date: vie., ago. 23, 2019 12:00 p. m.
NodeLocation: 304,408,1
NodeSize: 48,24

{!40404|FreePassObjectCount hb0TWqHcsObfWXB0sff2QUfmlR$jJkJIGJG4ylaqJZuu1nSBjNvGnVhqYL$U6cxCAE4BZ3d$YgtxqsmVAY0GnecWeKDuemmbzzoYL8z3HZfWMH3g0e5AGHMElN5L3VwuEc_NoDf6a3Z3b7hFqQ1fIxcI_iQ9vgSE2tiZQIB60yvsrqrsux$4AGOXgq0CPds5MdvDXsCZxKk9a1UyRxS_X5fFrS4jN2kR9tdN8wjXMC2woicXTQOMMN}
Library Odbc_library
Title: ODBC Library
Author: Lonnie
Date: Thu, Sep 11, 1997 2:15 PM
NodeLocation: 504,72,1
NodeSize: 56,24
NodeInfo: 1,1,1,1,1,1,0,0,0,0,,,,0
DiagState: 2,844,49,679,137,17
FontStyle: Arial, 13
Att_PreLoadScript: {!40404|FreePassObjectCount hb0TWqHcsObfWXB0sff2QUfmlR$jJkJIGJG4ylaqJZuu1nSBjNvGnVhqYL$U6cxCAE4BZ3d$YgtxqsmVAY0GnecWeKDuemmbzzoYL8z3HZfWMH3g0e5AGHMElN5L3VwuEc_NoDf6a3Z3b7hFqQ1fIxcI_iQ9vgSE2tiZQIB60yvsrqrsux$4AGOXgq0CPds5MdvDXsCZxKk9a1UyRxS_X5fFrS4jN2kR9tdN8wjXMC2woicXTQOMMN}
{!40400|Att_clearTypeFonts: -1}

Function Insertrecsql(A:ArrayType;I:IndexType;L:IndexType;row;dbTableName)
Title: InsertRecSql
Description: Generates the SQL "INSERT INTO" statement for one line of table A.  A is a 2-D table indexed by rows I and columns L.  L's domain serves as the column names in the database table.  dbTableName is the name of the table in the database.  The result begins with two semi-colons, since it will be used with an SQL statement preceeding it.
Definition: (';;INSERT INTO ' & MakeValidSqlTableNam(dbTableName) & ~
   '(' & JoinText(MakeValidSQLName(L),L,',') & ') VALUES (' & Vallist(A[I=row],L)) & ')'
NodeLocation: 184,32,1
NodeSize: 52,24
WindState: 2,260,34,603,423

Function Vallist(V:ArrayType;I:IndexType)
Title: ValList
Description: Takes a list of values, and returns a string which the concatenation of each value, separated by commas, and with each value quoted.
Definition: var quoted := if IsNumber(V) then V ~
                      else '''' & TextReplace(V,"'","''",true) & '''';~
JoinText( quoted, I, ',')
NodeLocation: 72,32,0
NodeSize: 52,24
WindState: 2,98,83,583,224
NumberFormat: 2,F,4,14,0,0,4,0,$,0,"ABBREV",0,,,0,0

Function Writetablesql(Tabl:ArrayType;RowIndex:IndexType;LabelIndex:IndexType;dbTableName)
Title: WriteTableSql(Table,Rows,Labels,dbTableName)
Description: Returns the SQL that will write the table to the database table.~
This can be used as the second argument to DBWrite.~
This SQL statement replaces the entire contents of an existing table with the new data.
Definition: 'DELETE FROM '& MakeValidSqlTableNam(Dbtablename) & JoinText(Insertrecsql(Tabl, Rowindex, Labelindex, Rowindex, Dbtablename),RowIndex)
NodeLocation: 360,32,1
NodeSize: 120,24
WindState: 2,220,436,510,476

Function Isvalidsqlname(s:coerce text)
Title: IsValidSQLName(s)
Description: In SQL, a table name or column label should begin with a letter and then contain only alphanumerics and underscores.  If so, it can appear in SQL without special treatment.  If it violates this, such as if it contains a space, then it must be surrounded by brackets. ~
~
This function tests whether a name adheres to the valid unbracketed naming convention.  If so, then you don't need to bracket when it appears in the SQL statement.
Definition: FindInText("^" & Reg_exp_SQL_ident & "$", s, re:1, caseInsensitive:true, return:'P')>0
NodeLocation: 96,96,1
NodeSize: 72,24
WindState: 2,598,420,1016,411

Function Makevalidsqlname(s : coerce text)
Title: MakeValidSqlName(s)
Description: In SQL, a table name or column label should begin with a letter and then contain only alphanumerics and underscores.  If so, it can appear in SQL without special treatment.  If it violates this, such as if it contains a space, then it must be surrounded by brackets.~
~
This brackets s if necessary.~
~
It does not handle the case where s contains brackets, which would cause problems on the db side anyway.
Definition: if IsValidSQLName(s) then s else "[" & s & "]"
NodeLocation: 264,96,1
NodeSize: 80,24
WindState: 2,98,83,814,354

Constant Reg_exp_SQL_ident
Title: Reg exp SQL ident
Description: A regular expression for a valid SQL identifier. ~
~
It says that an SQL identifier ma be either of: ~
1. Opening '[' followed by any sequence of characters, excluding a square brackets, followed by a closing bracket~
2. First character: Letter, underscore, @, or #.~
    Remaining characters: Letter, digit, underscore, @ or #.
Definition: "^(?:(?:\[[^\[\]]+\])|(?:(?:\w|[_@#])(?:\w|\d|[_@#\$])*))$"
NodeLocation: 72,160,1
NodeSize: 48,24
WindState: 2,348,484,720,350

Function MakeValidSqlTableNam(s:atom text)
Title: MakeValidSqlTableName(s)
Description: Adds brackets as necessary to turn s into a valid SQL table name.~
Names with special characters or spaces need to be surrounded with brackets. So the table name "My table" needs to be "[My table]".  Unlike a simple SQL identifier, table names can have multiple levels, like "[dbo].[My table]" or "dbo.[My table]".~
~
If it can't make it valid, it returns the original.
Definition: index part := SplitText(s,'.');~
Var opens := SelectText(part,1,1)='[';~
Var closes := SelectText(part, TextLength(part))=']';~
Var openWt := opens and not closes;~
Var closeWt := (closes and not opens)[@part=@part-1,defVal:0];~
Var nesting := Cumulate(openWt - closeWt,part);~
Var fixed := if nesting=0 then Makevalidsqlname(part) else part;~
JoinText(fixed,part,'.')
NodeLocation: 432,96,1
NodeSize: 72,24
WindState: 2,739,410,841,477

Close Odbc_library

Library Flat_file_library
Title: Flat File Library
Description: Routines for writing data to and from flat files, particularly for 2-D tables to and from comma-separated files.
Author: Lonnie Chrisman
Date: Thu, Mar 17, 2005 12:59 PM
NodeLocation: 520,168,1
NodeSize: 48,24
NodeInfo: 1,1,1,1,1,1,0,0,0,0,,,,0
DiagState: 2,316,25,1078,505,17
FontStyle: Arial, 15
{!40400|Att_clearTypeFonts: 0}

Function WriteCsvFile(filename: Atom Text; a: Array[col, row]; col, row: Index; ~
sep: Optional = chr(44);  lineSep: Optional = chr(10);~
warn: = False; showDialog: = False)
Title: WriteCsvFile(filename, a, row, col)
Description: Write a two-dimensional array a indexed by col and row to a CsvFile with name filename.~
col is written across the columns, with the values of index col in the first line.~
Values are separated by sep, default to ',' if sep is not specified.~
~
The Row dimension has each element on a separate line.~
The first line of the file contains the names of the I index elements.~
~
Warning: You should make sure that values in array a don't contain the sep or lineSep text values,~
which would be confused with the value or line separators in the resulting file.~
~
Numbers are written in an exponential full-precision format.  To use an alternative format, caller can coerce to strings before calling, for example use ""&A as the A parameter and set the caller's number format to the desired output format.  If you do that, be careful not to include thousand separators if sep is a comma.
Definition: { Write the column headers }~
WriteTextFile(filename,~
                       JoinText( '"' & col & '"', col, sep )&lineSep,~
                       warn: warn);~
{  Write the 2-D data: }~
WriteTextFile(filename, ~
                       JoinText(a, col, sep, textForNull:"" ),  ~
                       append: true, ~
                       warn: warn,~
                       sep : lineSep)
NodeLocation: 104,352,1
NodeSize: 80,32

Function WriteTableToFile(filename: Atom Text; a: Array; col, row: Index; ~
sep: Optional = chr(44);  lineSep, tableSep: Optional = chr(10);~
warn: = False; dialog: = True)
Title: WriteTableToFile(filename, a, row, col)
Description: Write a two-dimensional table a indexed by col and row to a file with name filename.~
It puts the values of index col in the first line as column headers.~
It puts the values of index row in the first column as row headers.~
Values are separated by sep, which defaults to ','.~
Lines are separated by lineSep, which defaults to newline (CR).~
Tables (if a has more than two dimensions) are separated by tableSep, which also defaults to newline (CR),~
i.e. creating a blank line between successive 2D tables.~
Using these defaults, you can open the file as a CSV (Comma-separated values) file in Excel and~
many other applications. ~
~
By default, it prompts for the name and directory of the file, using fileName as default. ~
Set dialog to False to prevent this prompt.~
If the file exists, it appends the table to that file.~
If a has a third or more dimensions, it will write each slice over those additional~
dimensions to the file as a 2D table.~
~
Warning: Avoid using values in a that contain the sep or lineSep text values,~
because that would confuse applications reading the file about where~
the values or lines end.~
~
It writes numbers in an exponential full-precision format.  For an alternative format, you can convert numbers to text values before calling this function, e.g.  ""&A as the A parameter and set the caller's number format to the desired output format.  Avoid using the thousand separators if sep is a comma.~
~
If successful, it returns the path and name of the file to which it wrote.
Definition: WriteTextFile(filename,~
     sep & JoinText( '"' & col & '"', col, sep ) & lineSep { column headers}~
     & JoinText(row&sep & JoinText(a, col, sep, textForNull:""  ), row, lineSep)&tableSep, ~
     sep: lineSep, { Extra line separator between tables, if a has >2D }~
     append: true, warn: 0, showDialog: dialog)
NodeLocation: 288,304,1
NodeSize: 80,32

Function Readcsvfile(filename:atomic textual ; linesep,colsep : optional textual)
Title: ReadCsvFile
Description: Reads in a CSV file.~
The first line of the CSV should be the field names.~
Lines are separated by linesep (Chr(10) by default) and columns by colsep (comma by default).~
~
The result will be an array of STRINGS.  You must convert them to numbers separately.  They will be indexed by two local indexes:  Field and Row.
Definition: ParseCsvText(ReadTextFile(filename),linesep,colsep)
NodeLocation: 480,248,1
NodeSize: 60,24
WindState: 2,188,146,517,447

Function Parsenum(x)
Title: ParseNum
Description: Parses text to a numeric value, for example:~
ParseNum("3.14") --> 3.14
Definition: Coerce_to_numeric(x)
NodeLocation: 512,112,1
NodeSize: 60,24
WindState: 2,313,237,476,224
NumberFormat: 1,D,4,2,0,0

Function ParseDate(x)
Title: ParseDate
Description: Converts a textual date to an integer representing the # of days since the date origin, either 1 Jan 1904 or 1 Jan 1900 (the latter when the "Use Excel Date Origin" preference is checked).
Definition: Coerce_to_numeric(x)
NodeLocation: 208,120,1
NodeSize: 60,24
NumberFormat: 1,DD,2,2,0,0

Module Flat_file_internals
Title: Flat File Internals
Author: Lonnie
Date: Wed, Aug 08, 2007 1:00 PM
NodeLocation: 88,184,1
NodeSize: 48,24

Function Coerce_to_numeric(x : coerce numeric)
Title: Coerce to Numeric
Description: When x is text, parses it to a numeric value based on the calling object's number format.  If the caller uses a date format, then a date can be parsed, etc.  If x is already numeric, x is returned.
Definition: x
NodeLocation: 96,48,1
NodeSize: 48,24
WindState: 2,454,371,476,224

Close Flat_file_internals

Function Parsecsvtext(s:atomic textual ; linesep,colsep : optional textual)
Title: ParseCsvText
Description: Parses the textual contents of a CSV file.  You provide the actual CSV contents -- already obtained from a flie or other data source.~
~
The first line of the CSV should be the field names.~
Lines are separated by linesep (Chr(10) by default) and columns by colsep (comma by default).~
~
The result will be an array of STRINGS.  You must convert them to numbers separately.  They will be indexed by two local indexes:  Field and Row.
Definition: if IsNotSpecified(linesep) then linesep := Chr(10);~
if IsNotSpecified(colsep) then colsep := ",";~
var file := split(s,linesep);~
var n:=size(file);~
while (n>1 and slice(file,n)="") do n:=n-1;~
index Row := 1..n-1;~
index Field := Split(Slice(file,1),colsep);~
for line[] := Slice(file,Row+1) do Array(Field,Split(line,colsep))
NodeLocation: 328,48,1
NodeSize: 60,24

Close Flat_file_library

Close Funciones_Lumina

Close Funciones

Index Subcategorias_IPPU
Title: Subcategorias IPPU
Definition: ['A. Industria Mineral','B. Industria Química','C. Industria Metálica','D. Uso no energético de productos de combustibles y solventes','E. Industria Electrónica','F. Uso de productos de SAO','G. Otra producción y usos']
NodeLocation: 640,88,1
NodeSize: 64,24
{!40300|Att_SlicerPopupSize: 227,144}

Module IP
Title: IP
Author: adm
Date: Fri, Jul 17, 2020 4:01 PM
NodeLocation: 296,104,1
NodeSize: 48,24
DiagState: 2,182,221,1353,586,17

Module A_Industria_Mineral
Title: A Industria Mineral
Author: adm
Date: Fri, Jul 17, 2020 4:01 PM
NodeLocation: 256,120,1
NodeSize: 48,32
DiagState: 2,181,265,937,484,17

Index SubC_Ind_Mineral
Title: Subcategoria Industria Mineral
Definition: ['Producción Cemento','Producción Cal','Producción Vidrio']
NodeLocation: 544,48,1
NodeSize: 64,32

Variable Em_ind_Min
Title: Emisiones Industria Mineral
Units: ktCO2e
Definition: if SubC_Ind_Mineral='Producción Cemento' then Emisiones_Cemento else~
if SubC_Ind_Mineral='Producción Cal' then Emisiones_Cal else~
if SubC_Ind_Mineral='Producción Vidrio' then Emisiones_Vidrio
NodeLocation: 552,144,1
NodeSize: 48,32
WindState: 2,124,349,720,350
Aliases: Alias Al1812055165

Variable Emisiones_Cemento
Title: Emisiones Cemento
Units: ktCO2
Definition: Table(Time)(650.0869922336371,959.7521337862388,1073.014969687057,1166.243915863942,1158.6904738143296,1009.6197659999999,978.4629072,962.9370180000001,1151.0657874,967.9007664,1028.5742934,1031.4052218,1098.52816488696,1133.3155269014999,1214.9317818,1172.6468046,1258.5547134,1340.081928934228,1330.9172743338002,1100.034501607556,1065.257873705847,1099.4772064875638,1147.72986184592,966.4418208334936,870.8512403533325,841.8865522325399,882.037006126074,779.409846931819,828.9331117655018,873.589335871688,913.3924313706084,950.5484597618959,982.8855044161687,1011.8253815682099,1038.4642194421342,1063.620653200228,1087.8919581951109,1111.70581872451,1135.363428000646,1159.0734167329845,1182.9776631939048,1205.3253683412781,1226.6556120184696,1247.3659920206926,1267.751350409016,1288.020006298748,1308.3103236442098,1328.713386299092,1349.269451734638,1369.969678696876,1390.7752673728276,1411.6452069023326,1432.5523212176556,1453.4553976810466,1474.296049057284,1495.0022298530585,1515.5075429049973,1535.7667197447768,1555.7359178402949,1575.3781747751182,1594.6563366804317)
NodeLocation: 400,80,1
NodeSize: 48,24
ReformDef: [Time,Null]

Variable Emisiones_Cal
Title: Emisiones Cal
Units: ktCO2
Definition: Table(Time)(118.20351485505002,113.6355161505,126.03837522169246,121.99920060512123,137.9534133084,167.92004135622875,180.67053085240613,180.13464453323493,187.8419631126637,239.30496884719244,230.97448741982123,249.72365717249997,218.79319267649998,256.39894133985,316.47354746580004,373.09651444785,371.27551286445,416.29586643525,396.48472684275004,371.1759037827,412.3948796559,432.9453399885,476.62798048365,498.738983097,560.6670559885499,564.79308550815,616.65031131225,590.724280867875,618.0775803308438,638.2123688294594,657.0194163371083,672.0318349112284,687.5413180774651,702.022831255849,715.2929350922541,727.3665788347616,738.8801603856057,749.5571738427042,759.4341011678769,768.6032004477494,777.1767970686954,785.136886571928,792.5307299634218,799.408878306853,805.8120095360556,811.7634045938125,817.2971446043364,822.4444610342637,827.2321695919364,831.6840055804194,835.8241760833677,839.6747527914818,843.2558272504574,846.586098078382,849.6832726672362,852.5636826750616,855.2424564974847,857.7336972661625,860.0505596780442,862.2052466626374,864.20910232519)
NodeLocation: 408,168,1
NodeSize: 48,24
ReformDef: [Time,Undefined]

Variable Emisiones_Vidrio
Title: Emisiones Vidrio
Units: ktCO2
Definition: Table(Time)(12.026574,14.601426,17.176278,19.75113,22.325982,24.878817599999994,33.2525592,42.13316729999999,44.2996932,44.747682000000005,52.61119856999999,50.80708920000001,55.194867,58.818209835,66.3772093845,67.70615459999999,73.53885251999999,100.42508175,98.99850400019999,84.976333911,73.43484666,87.28163946452999,84.669016152,94.59416588999999,95.71128566694408,96.737340168,103.00394861399997,103.93419584199951,18.287183859984,18.2308733284824,18.0804017518608,17.969104817751266,17.96499955232348,17.897879952150536,17.820210451964275,17.73836861283685,17.669938880107104,17.60988422506467,17.538897645832193,17.467155970835996,17.39657256185522,17.3976233465811,17.398691316470323,17.398123188948635,17.39774616795542,17.39775131636214,17.39798706726352,17.39805981140001,17.397933510385943,17.397895574673402,17.397925456017006,17.397960283947977,17.397954927284868,17.397933950461837,17.39793403847702,17.39794173123774,17.39794498628189,17.39794192674867,17.397939326641435,17.39794040187735,17.397941674557412)
NodeLocation: 408,256,1
NodeSize: 48,24
ReformDef: [Time,Undefined]

Close A_Industria_Mineral

Alias Al1812055165
Title: Emisiones Industria Mineral
Definition: 1
NodeLocation: 568,120,1
NodeSize: 48,32
Original: Em_ind_Min

Module B_Industria_Quimica
Title: B Industria Química
Author: adm
Date: Fri, Jul 17, 2020 4:01 PM
NodeLocation: 256,216,1
NodeSize: 48,32
DiagState: 2,0,0,939,484,17

Index SubC_Ind_Quimica
Title: Subcategorias Industria Qumica
Definition: ['B2 Produccion de Acido Nitrico','B8 Petroquímica']
NodeLocation: 600,56,1
NodeSize: 64,32

Variable Em_Ind_Quimica
Title: Emisiones Industria Quimica
Units: ktCO2e
Definition: if SubC_Ind_Quimica='B2 Produccion de Acido Nitrico' then Emisiones_Prod_Ac_Ni else~
if SubC_Ind_Quimica='B8 Petroquímica' then Emisiones_Prod_Petro
NodeLocation: 624,216,1
NodeSize: 56,32
WindState: 2,93,398,720,350
Aliases: Alias Al700564605

Variable Emisiones_Prod_Ac_Ni
Title: Emisiones Prod Ac Nitrico
Units: ktCO2e
Definition: Table(Time)(295.737435,295.737435,295.737435,295.737435,295.737435,295.737435,295.737435,295.737435,295.737435,295.737435,513.3156907499999,562.957331625,540.988265025,698.7853107000001,811.376777025,856.7935974000001,873.481638375,374.46592346912865,401.86134757214836,412.95906340041415,504.0061593339307,486.43915792978083,594.7105748421517,541.3051267039107,528.1773431651544,538.6932877922991,452.22479651133784,477.4045859498523,467.1898023094445,462.08241048924054,459.52871457913864,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625,458.6864145625)
NodeLocation: 464,152,1
NodeSize: 48,32
ReformDef: [Time,Undefined]

Variable Emisiones_Prod_Petro
Title: Emisiones Prod Petroquimica
Units: ktCO2e
Definition: Table(Time)(657.4816831170283,540.3172367951964,642.9022179223034,617.1760987455689,665.9669662750489,646.5439253013094,658.5928599971063,1212.0799643348046,1263.586238692035,1703.8853639427045,2131.9846756434927,2047.4080369963108,2154.8177953859513,1984.3922938450414,1979.530837951473,2218.3253597682988,2323.5992453079393,1365.9108808600959,827.3642535967987,724.9928603669554,702.2600446207149,446.0142642185544,318.52767427927455,221.52466588899279,168.75501513058308,173.46820569096536,286.0807582339835,299.937721984193,368.224509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193,513.724509484193)
NodeLocation: 464,264,1
NodeSize: 56,32
ReformDef: [Time,Undefined]

Close B_Industria_Quimica

Alias Al700564605
Title: Emisiones Industria Quimica
Definition: 1
NodeLocation: 560,216,1
NodeSize: 56,32
Original: Em_Ind_Quimica

Module C_Industria_Metalica
Title: C Industria Metalica
Author: adm
Date: Fri, Jul 17, 2020 4:01 PM
NodeLocation: 256,312,1
NodeSize: 48,32
DiagState: 2,0,0,1094,530,17

Index SubC_Ind_Metalica
Title: Subcategorias Industria Metalica
Definition: ['C1 Produccion de Hierro y Acero','C2 Produccion Ferroaleaciones']
NodeLocation: 728,48,1
NodeSize: 64,32
WindState: 2,98,82,720,350

Variable Em_Ind_Metalica
Title: Emisiones Industria Metalica
Units: ktCO2e
Definition: if SubC_Ind_Metalica='C1 Produccion de Hierro y Acero' then Em_Hierro_Acero else ~
if SubC_Ind_Metalica='C2 Produccion Ferroaleaciones' then sum(Emisiones_FerroAleac*PCG_AR4,gei)
NodeLocation: 728,192,1
NodeSize: 48,32
Aliases: Alias Al1251067005

Variable Emisiones_Hierro
Title: Emisiones Hierro
Units: tCO2
Definition: Table(Time)(48.324637009K,62.99712868166666K,64.77604008700001K,58.583185378666676K,56.514275927999995K,59.770388589999995K,74.12302612000001K,70.90736856133334K,74.14897258266667K,53.581636115333335K,57.38911211000001K,63.40147085066667K,58.55839876333333K,59.67585804766667K,58.35473189333334K,48.418948072K,52.436072216K,57.19279199333334K,58.38115460833333K,32.859029067333344K,54.59263606133333K,43.16911663533333K,29.826382600666668K,23.356170471333327K,25.561816038000004K,51.198049012K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K,52.484282774K)
NodeLocation: 256,64,1
NodeSize: 48,24
ReformDef: [Time,Undefined]

Variable Emisiones_Acero_BOF
Title: Emisiones Acero BOF
Units: tCO2
Definition: Table(Time)(1.3454233298573578M,1.454799159854201M,1.7577651611261654M,1.844213054988278M,1.7317436693220877M,1.6855026490686096M,1.849060563212823M,1.6331567910363749M,1.8049587709804422M,1.873642118397883M,1.9112601848548667M,1.77396853260409M,1.8438310810596228M,1.9014460572216215M,2.122035482396936M,1.965084017068972M,2.0356269404248744M,1.9264186941636205M,1.8524346230418703M,1.6307206572690038M,1.1551580166856279M,2.0146236291120949M,2.0031281243895257M,1.5242509545843638M,1.2411531529411173M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M,1.3193429788955625M)
NodeLocation: 256,144,1
NodeSize: 48,32
ReformDef: [Time,Undefined]

Variable Emisiones_Acero_EAF
Title: Emisiones Acero EAF
Units: tCO2
Definition: Table(Time)(0,0,3145.584998712542,3847.5267215766303,4549.468444440716,5200.183651040458,6267.715459170181,6747.712949300815,6794.622152500448,12.19076494216496K,18.217080547467K,20.17331560948538K,22.019227786561565K,23.723579725633866K,30.80914438937126K,32.498756113385996K,38.036305933096424K,42.54426809379589K,36.29282302864406K,38.35341413438632K,41.40124469408829K,34.17214498573333K,29.877191348766664K,29.74554996427667K,26.49414995183K,22.394430188020004K,18.534858628623333K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K,18.958951131721395K)
NodeLocation: 256,232,1
NodeSize: 48,24
WindState: 2,98,82,720,350
ReformDef: [Time,Undefined]

Variable Em_Hierro_Acero
Title: Emisiones Hierro y Acero
Units: ktCO2e
Definition: (Emisiones_Hierro+Emisiones_Acero_BOF+Emisiones_Acero_EAF)/1k
NodeLocation: 448,136,1
NodeSize: 48,32
WindState: 2,30,415,720,350

Variable Emisiones_FerroAleac
Title: Emisiones FerroAleaciones
Units: kt
Definition: Table(Time,GEI)(~
31.563000000000002,5.1259999999999995m,0,~
42.2506,6.0676m,0,~
34.5066,4.213m,0,~
52.7548,8.305m,0,~
44.33389999999999,6.054400000000001m,0,~
38.3325,4.7069m,0,~
40.0083,5.115m,0,~
21.5317,1.4234m,0,~
19.130599999999998,1.2749m,0,~
11.9167,1.0999999999999998m,0,~
8.5365,0,0,~
3.3195,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0.1703,0,0,~
0.1092,0,0,~
0.2509,0,0,~
0.0702,0,0,~
0.0143,0,0,~
0.23920000000000002,0,0,~
0.0455,0,0,~
0.08710000000000001,0,0,~
0.091,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0,~
0,0,0)
NodeLocation: 448,320,1
NodeSize: 72,24
ReformDef: [Time,GEI]

Close C_Industria_Metalica

Alias Al1251067005
Title: Emisiones Industria Metalica
Definition: 1
NodeLocation: 560,312,1
NodeSize: 48,32
Original: Em_Ind_Metalica

Close IP

Module PU
Title: PU
Author: adm
Date: Fri, Jul 17, 2020 4:01 PM
NodeLocation: 296,232,1
NodeSize: 48,24
DiagState: 2,226,19,944,484,17

Module D__Uso_no_energetic_
Title: D. Uso no energetic y solventes
Author: adm
Date: Fri, Jul 17, 2020 4:01 PM
NodeLocation: 240,104,1
NodeSize: 56,32
DiagState: 2,441,297,939,484,17

Variable Em_NoEnerg_Solv
Title: Emisiones No energetico y Solventes
Units: ktCO2e
Definition: Table(Time)(75.14541829646265,92.75770499129715,90.45859347854706,78.94969175562642,86.21269339899979,87.6460644776266,93.61795746995648,95.2762244515626,95.78290523994927,31.001071607115577,114.81285925811507,186.70212932875359,125.98467933207462,147.25481598282752,99.17087639983127,108.29827090810201,106.4862536012009,101.90239272173226,247.94371524441615,140.9289506879302,241.0215608068626,128.88500462116752,188.0262781820424,141.98938810684322,146.23853200756713,145.1574499991255,129.9258916433799,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255,145.1574499991255)
NodeLocation: 456,112,1
NodeSize: 56,40
Aliases: Alias Al290571389
ReformDef: [Time,Undefined]

Close D__Uso_no_energetic_

Alias Al290571389
Title: Emisiones No energetico y Solventes
Definition: 1
NodeLocation: 520,112,1
NodeSize: 56,40
Original: Em_NoEnerg_Solv

Module G__Otras_Produccione
Title: G. Otras Producciones y Usos
Author: adm
Date: Fri, Jul 17, 2020 4:01 PM
NodeLocation: 248,408,1
NodeSize: 64,32
DiagState: 2,14,230,939,484,17

Index SubC_Equi_Elec
Title: SubCategoria Equipos Electricos
Definition: ['G.1.A Manufactura de equipos eléctricos','G.1.B Uso de equipos eléctricos','G.1.C Eliminación de equipos eléctricos']
NodeLocation: 320,72,1
NodeSize: 64,32
Att_PrevIndexValue: ['G.1.A Manufactura de equipos eléctricos','G.1.B Uso de equipos eléctricos','G.1.C Eliminación de equipos eléctricos']

Variable Em_Equipos_Electrico
Title: Em Equipos Electricos
Units: ktCO2e
Definition: Table(Time,SubC_Equi_Elec)(~
25.482647999999998,35.84576792664,0,~
0,43.749966896160004,0,~
5.6202,43.749966896160004,0,~
1.0975919999999997,45.49323859416,0,~
24.008172,45.83574021012001,0,~
23.194895999999993,53.282586722400005,0,~
14.275307999999999,60.47717156543999,0,~
34.098084,64.90508167835999,0,~
46.87908,75.47956270764,0,~
13.111595999999997,90.02049957684,0,~
0,94.08744990288,0,~
4.555668,94.08744990288,0,~
0.5091239999999999,95.50052543219998,0,~
40.79603999999999,95.65844533895998,0,~
14.222411999999998,108.31459786643998,0,~
0.6149159999999999,112.72610071631999,0,~
16.820927999999995,112.91478424128002,0,~
27.082752,118.13434479588,0,~
52.327367999999986,126.53486347236002,0,~
25.932263999999996,142.76574843467998,0,~
54.02003999999999,150.80940914004,37.86168,~
34.666716,163.9803395454,46.200779999999995,~
16.516775999999997,170.35866305219997,46.200779999999995,~
16.516775999999997,171.10724442839998,46.200779999999995,~
14.84090554788416,171.8558258046,46.200779999999995,~
24.040413012474605,172.08458626184907,46.200779999999995,~
50.90084572610612,175.16684677222088,46.200779999999995,~
31.684485628646485,193.8457791100282,46.200779999999995,~
32.14465899151113,197.93074845487126,46.200779999999995,~
30.126388090662243,202.07931070326936,46.200779999999995,~
30.545800499728472,202.07931070326936,46.200779999999995,~
28.198376549701322,218.05122252690575,46.200779999999995,~
27.551542604671454,218.7642512454699,46.200779999999995,~
28.655019265138595,218.7642512454699,46.200779999999995,~
29.86884359165246,219.65378943077434,46.200779999999995,~
31.371637396029293,219.65378943077434,46.200779999999995,~
32.10475983438476,219.65378943077434,46.200779999999995,~
30.225151245212622,219.82101595056164,46.200779999999995,~
30.07921780686923,220.36690177233885,46.200779999999995,~
29.87267368840504,220.44750921838786,46.200779999999995,~
29.847302248179325,224.96937834571204,46.200779999999995,~
29.777452423024414,225.11255309267585,46.200779999999995,~
29.935360010356714,232.72710815524377,46.200779999999995,~
30.173741750925238,235.09141551300252,46.200779999999995,~
30.325613999503908,237.1568997400656,46.200779999999995,~
30.371291040289048,238.7719103693383,46.200779999999995,~
30.271256404715036,240.05326530043777,46.200779999999995,~
30.087906061748054,246.0550539654758,46.200779999999995,~
30.0741815434016,249.24106538065152,46.200779999999995,~
30.07367791705484,252.18968890651314,46.200779999999995,~
30.093778339919815,255.58489139745694,46.200779999999995,~
30.118425949093865,258.6004437822178,46.200779999999995,~
30.152523301700814,262.06024171962616,46.200779999999995,~
30.174239630835224,265.7021743969826,46.200779999999995,~
30.174289418826227,267.75052157134166,46.200779999999995,~
30.15915696075846,271.695455854786,46.200779999999995,~
30.1379435528054,275.4701772216335,46.200779999999995,~
30.12461226761443,278.14652981923456,46.200779999999995,~
30.128282888201067,281.931118529237,46.200779999999995,~
30.133693022681012,285.3048551208178,46.200779999999995,~
30.13969453324363,289.02770859893417,46.200779999999995)
NodeLocation: 320,200,1
NodeSize: 48,32
WindState: 2,98,82,720,350
ReformDef: [Time,SubC_Equi_Elec]

Variable Em_OtrProdUsos
Title: Emisiones Otras Producciones y Usos
Units: ktCO2e
Definition: sum(Em_Equipos_Electrico,SubC_Equi_Elec)
NodeLocation: 624,200,1
NodeSize: 64,40
Aliases: Alias Al1035060349

Close G__Otras_Produccione

Text Te1051837565
Title: E. Industria Electrica no tiene emisiones en Chile
NodeLocation: 244,212,-1
NodeSize: 124,28
NodeInfo: 1,,,,,1
NodeColor: 5,65535,1

Alias Al1035060349
Title: Emisiones Otras Producciones y Usos
Definition: 1
NodeLocation: 536,408,1
NodeSize: 64,40
Original: Em_OtrProdUsos

Module F__Uso_SAO
Title: F. Uso SAO
Author: adm
Date: Fri, Jul 17, 2020 4:01 PM
NodeLocation: 248,304,1
NodeSize: 48,24
DiagState: 2,66,70,1430,488,17

Constant DSN_HFC
Title: DSN HFC
Definition: F_DSN('LecturaDatos\DatosHFC.xlsx','Excel',True)
NodeLocation: 120,296,1
NodeSize: 48,24
ValueState: 2,132,138,765,431,,MIDM

Alias Al1175045245
Title: Releer Bases de Datos
Definition: 1
NodeLocation: 152,88,1
NodeSize: 48,24
Original: GL_Releer_BasesDatos

Index TipoBanco
Title: TipoBanco
Definition: ['AA. Est. Equipos ','AA. Est. Instalaciones ','AA. Movil','Agente Espumante','Extinción Fuego','Ref. Comercial - Equipos','Ref. Comercial - in situ','Ref. Domestica','Ref. Industrial','Ref. Transporte']
NodeLocation: 320,136,1
NodeSize: 48,24
WindState: 2,98,191,720,241
{!40300|Att_SlicerPopupSize: 237,168}
Att_PrevIndexValue: ['AA. Est. Equipos ','AA. Est. Instalaciones ','AA. Movil','Agente Espumante','Extinción Fuego','Ref. Comercial - Equipos','Ref. Comercial - in situ','Ref. Domestica','Ref. Industrial','Ref. Transporte']

Module Estimacion_Banco_His
Title: Estimacion Banco Historico
Author: adm
Date: Fri, Jul 17, 2020 4:01 PM
NodeLocation: 328,296,1
NodeSize: 56,32
DiagState: 2,288,5,1233,526,17

Constant Tabla_Nt
Title: Tabla Nt
Units: kg
Description: Desde HFC2
Definition: F_lectura_tabla(DSN_HFC,'Nt','Excel')
NodeLocation: 96,248,1
NodeSize: 48,24
WindState: 2,0,246,720,350
ValueState: 2,148,154,573,460,,MIDM
ReformVal: [Sys_LocalIndex('i2'),Sys_LocalIndex('i1')]

Picture Pi793363581
NodeLocation: 336,88,-1
NodeSize: 216,32
Aliases: Alias Al1383711869
Pict

Variable Nt
Title: Nt
Units: kg
Definition: F_null_cero( F_Table_to_Array(Tabla_Nt,'sum'))
NodeLocation: 288,248,1
NodeSize: 48,24
WindState: 2,1094,131,720,350
ValueState: 2,123,103,646,476,0,MIDM
Aliases: Alias Al226492797, Alias Al1870251133
Att_ResultSliceState: [TipoBanco,8,SustanciaHFC,1,Time,1]

Variable Bt_2018
Title: Bt 2018
Units: kg
Description: dynamic(Nt[time=1990],Bt_2018[time-1]+Nt-Nt_vu)
Definition: dynamic(Nt[time=1990],Self[time-1]+Nt-Nt_vu)
NodeLocation: 496,248,1
NodeSize: 48,24
WindState: 2,191,561,727,335
ValueState: 2,0,197,1141,560,0,MIDM
Aliases: Alias Al857326717, Alias Al233292925
Att__TotalsIndex: [TipoBanco]
Att_ResultSliceState: [TipoBanco,0,SustanciaHFC,1,Time,1]
{!50000|Att_ColumnWidths: [,Time,\([,,,66])]}

Variable Nt_vu
Title: Nt-vu
Definition: if time-VU <1990 then 0~
else~
Nt[Time=time-vu]
NodeLocation: 288,152,1
NodeSize: 48,24
WindState: 2,98,82,720,350
ValueState: 2,110,310,722,492,,MIDM
Aliases: Alias Al763363709, Alias Al1971700861

Alias Al1417266301
Title: VU
Definition: 1
NodeLocation: 496,152,1
NodeSize: 48,24
Original: VU

Close Estimacion_Banco_His

Constant VU
Title: VU
Units: años
Definition: Table(TipoBanco)(15,15,12,50,15,12,12,15,20,10)
NodeLocation: 712,128,1
NodeSize: 48,24
WindState: 2,912,360,720,350
DefnState: 2,308,314,416,303,0,DFNM
Aliases: Alias Al1417266301, Alias Al1971323261, Alias Al2088354941, Alias Al1551484029

Module Proyeccion_Banco
Title: Proyeccion Banco
Author: adm
Date: Fri, Jul 17, 2020 4:01 PM
NodeLocation: 712,400,1
NodeSize: 56,24
DiagState: 2,67,47,944,484,17

Alias Al857326717
Title: Bt 2018
Definition: 1
NodeLocation: 152,264,1
NodeSize: 48,24
Original: Bt_2018

Variable Bt_Proyectado
Title: Bt Proyectado
Units: kg HFC
Definition: if time> 2018 then~
Bt_2018[time=2018] else Bt_2018
NodeLocation: 736,264,1
NodeSize: 56,24
WindState: 2,98,93,706,339
ValueState: 2,132,138,642,391,1,MIDM
Aliases: Alias Al551142525, Alias Al618251389, Alias Al939115645
Att_ResultSliceState: [TipoBanco,3,SustanciaHFC,1,Time,1]

Module Proy_Kigali
Title:  Proy Kigali
Author: adm
Date: Fri, Jul 17, 2020 4:01 PM
NodeLocation: 576,128,1
NodeSize: 48,24
DiagState: 2,168,126,1577,715,17

Constant Tasa_Mantencion
Title: Tasa Mantencion
Description: Tasa mantencion se considera igual a la tasa anual. Porcentaje de equipos  con fugas anualmente
Definition: Table(TipoBanco)(0.04,0.06,0.2,5m,0.032,0.15,0.35,5m,0.2,0.5)
NodeLocation: 264,376,1
NodeSize: 56,24
WindState: 2,98,82,720,350
Aliases: Alias Al1057227133

Alias Al608173693
Title: Proyeccion Tendencial
Definition: 1
NodeLocation: 128,160,1
NodeSize: 56,32
Original: Proyeccion_Tendencia

Variable Umbral
Title: Umbral
Units: kgCO2e
Description: sum(prombase*PCG_HFC_AR4,SustanciaHFC)
Definition: var promBase:=(Consumo_Tendencial[Time=2020]+Consumo_Tendencial[Time=2021]+Consumo_Tendencial[Time=2022])/3;~
sum(prombase*PCG_HFC_AR4,SustanciaHFC,Usos,TipoBanco)+Aporte_HCFC_a_umbral
NodeLocation: 464,160,1
NodeSize: 48,24
WindState: 2,413,306,720,350
ValueState: 2,84,90,416,303,,MIDM
Att__TotalsIndex: [TipoBanco,SustanciaHFC]

Constant Limite_HCFC
Title: Limite HCFC
Units: kg SAO
Definition: 90000
NodeLocation: 120,48,1
NodeSize: 48,24

Variable Aporte_HCFC_a_umbral
Title: Aporte HCFC a umbral
Units: kgCO2e
Description: Supone que la LB HCFC es solo R-22 ~
Potencial SAO 0.055 PCG 1810~
Kigali aporta 65%
Definition: 65%*1810*(Limite_HCFC/0.055)
NodeLocation: 464,48,1
NodeSize: 48,32
WindState: 2,110,302,720,350

Module Proyeccion_Nt_Tenden
Title: Proyeccion Nt Tendencial
Author: adm
Date: Fri, Jul 17, 2020 4:01 PM
NodeLocation: 128,456,1
NodeSize: 56,32
DiagState: 2,0,0,1309,669,17

Alias Al1971323261
Title: VU
Definition: 1
NodeLocation: 432,560,1
NodeSize: 48,24
Original: VU

Alias Al226492797
Title: Nt
Definition: 1
NodeLocation: 176,320,1
NodeSize: 48,24
Original: Nt

Variable Nt_Proyectado3
Title: Nt Proyectado1
Units: kg
Definition: Dynamic(Nt[time=1990],Proyeccion_Tendencia[time]-Proyeccion_Tendencia[Time-1]+Nt_vu[time])
NodeLocation: 432,320,1
NodeSize: 56,24
WindState: 2,577,154,884,444
ValueState: 2,116,122,1299,548,,MIDM
Att_ResultSliceState: [TipoBanco,4,SustanciaHFC,1,Time,1]

Alias Al763363709
Title: Nt-vu
Definition: 1
NodeLocation: 176,432,1
NodeSize: 48,24
Original: Nt_vu

Variable Nt_vu_proyectado3
Title: Nt-vu_proyectado1
Units: kg
Definition: if time-VU <1990 then 0~
else~
Nt_Proyectado3[Time=time-vu]
NodeLocation: 432,440,1
NodeSize: 72,24
WindState: 2,706,338,720,350
ValueState: 2,180,186,1059,486,1,MIDM
Att_ResultSliceState: [TipoBanco,6,SustanciaHFC,1,Time,1]

Variable Nt_Proyectado4
Title: Nt Proyectado2
Units: kg HFC
Definition: Dynamic(Nt_Proyectado3[time=1990],Proyeccion_Tendencia[time]-Proyeccion_Tendencia[Time-1]+Nt_vu_proyectado3[time])
NodeLocation: 656,320,1
NodeSize: 56,24
ValueState: 2,212,218,1286,488,0,MIDM
ReformVal: [Time,TipoBanco]
Att__TotalsIndex: [SustanciaHFC]
Att_ResultSliceState: [SustanciaHFC,0,TipoBanco,1,Time,1]

Variable Nt_vu_proyectado4
Title: Nt-vu_proyectado2
Units: kg
Definition: if time-VU <1990 then 0~
else~
Nt_Proyectado4[Time=time-vu]
NodeLocation: 656,440,1
NodeSize: 72,24
WindState: 2,706,338,720,350
ValueState: 2,180,186,1059,486,1,MIDM
Att_ResultSliceState: [TipoBanco,6,SustanciaHFC,1,Time,1]

Variable Nt_Proyectado5
Title: Nt Proyectado
Units: kg HFC
Definition: Dynamic(Nt_Proyectado4[time=1990],Proyeccion_Tendencia[time]-Proyeccion_Tendencia[Time-1]+Nt_vu_proyectado4[time])
NodeLocation: 848,320,1
NodeSize: 56,24
ValueState: 2,212,218,1286,488,0,MIDM
ReformVal: [Time,SustanciaHFC]
Att__TotalsIndex: []
Att_ResultSliceState: [SustanciaHFC,2,TipoBanco,1,Time,1]

Alias Al2071986557
Title: Proyeccion Tendencial Banco
Definition: 1
NodeLocation: 672,184,1
NodeSize: 56,24
Original: Proyeccion_Tendencia

Variable Nt_Tendencial
Title: Nt Tendencial
Units: kg HFC
Definition: if Nt_Proyectado5<0 then 0 else Nt_Proyectado5
NodeLocation: 1032,320,1
NodeSize: 56,24
ValueState: 2,298,64,1070,566,,MIDM
Aliases: Alias Al621019517
Att_ResultSliceState: [TipoBanco,6,SustanciaHFC,1,Time,1]

Close Proyeccion_Nt_Tenden

Alias Al621019517
Title: Nt Tendencial
Definition: 1
NodeLocation: 272,456,1
NodeSize: 56,24
Original: Nt_Tendencial

Variable Mantencion_Tendencia
Title: Mantencion Tendencial
Units: kg HFC
Definition: Proyeccion_Tendencia*Tasa_Mantencion
NodeLocation: 264,248,1
NodeSize: 56,24
ValueState: 2,548,554,797,322,,MIDM

Constant Nt_a_Granel
Title: Nt a Granel
Units: kg
Description: 1 si es que entra a granel~
0 si entra contenido en equipos
Definition: Table(TipoBanco)(0,1,0,1,1,0,1,0,1,1)
NodeLocation: 464,552,1
NodeSize: 48,24
WindState: 2,98,82,720,350
DefnState: 2,36,42,416,303,0,DFNM

Variable Proyeccion_Nt_granel
Title: Proyeccion Nt granel
Units: kg
Definition: Nt_a_Granel*Nt_Tendencial
NodeLocation: 464,456,1
NodeSize: 56,24

Variable Consumo_Tendencial
Title: Consumo Tendencial
Units: kg de HFC~

Definition: if Usos='Mantencion' then Mantencion_Tendencia else~
Proyeccion_Nt_granel
NodeLocation: 456,248,1
NodeSize: 56,24
WindState: 2,108,-13,720,350
ValueState: 2,196,202,816,582,,MIDM
Att__TotalsIndex: [SustanciaHFC]

Constant Cronograma_Kigali
Title: Cronograma Kigali
Definition: if time<2024 then 2 else~
if time<2029 then 1 else~
if time<2035 then 0.9 else~
if time<2040 then 0.7 else~
if time<2045 then 0.5 else~
0.2
NodeLocation: 728,48,1
NodeSize: 56,24
ValueState: 2,276,282,416,303,1,MIDM

Variable Consumo_Maximo
Title: Consumo Maximo
Units: kgCO2e
Definition: Cronograma_Kigali*Umbral
NodeLocation: 728,160,1
NodeSize: 48,24
ValueState: 2,212,218,416,303,1,MIDM

Index Usos
Att_PrevIndexValue: ['Mantencion','Nuevo Banco']
Definition: ['Mantencion','Nuevo Banco']
NodeLocation: 304,168,1
NodeSize: 48,24

Variable Consumo_a_reducir
Title: Consumo a reducir
Units: kgCO2e
Definition: var dif:=sum(Consumo_Tendencial*PCG_HFC_AR4,SustanciaHFC,Usos,TipoBanco)-Consumo_Maximo;~
if dif<0 then 0 else dif
NodeLocation: 728,248,1
NodeSize: 48,24
ValueState: 2,217,11,455,624,,MIDM

Variable Potencial_reduccion_
Title: Potencial reduccion Uso-Tipo
Units: kgCO2es
Description: var nuevo:=sum(Potencial_de_reducci,Usos);~
cumulate(nuevo[TipoBanco= prioridad[@TipoBanco=Reduccion1]],Reduccion1)
Definition: F_Tabla_Concat_I (Potencial_de_reducci,Usos,TipoBanco,Uso_Tipo_banco)
NodeLocation: 800,368,1
NodeSize: 48,32
WindState: 2,319,22,720,350
ValueState: 2,1036,1,808,498,,MIDM
ReformVal: [0,Time]

Variable Potencial_de_reducci
Title: Potencial de reduccion
Units: kgCO2e
Definition: sum(Consumo_Tendencial*PCG_HFC_AR4,SustanciaHFC)
NodeLocation: 640,368,1
NodeSize: 64,24
ValueState: 2,60,191,750,627,,MIDM
ReformVal: [Usos,Time]
Att_ResultSliceState: [TipoBanco,5,Time,1,Usos,1]

Function F_Concat_I_NN(param1;I,J,K:Index)
Description: var Kvar=K;~
Index aux:=1..2;~
var sep=SplitText(Kvar,'-',resultindex:aux);~
var ik=sep[.aux=1];~
var jk=sep[.aux=2];~
~
var ivar=(I);~
var jvar=(J);~
~
var Matriz:= if ik=ivar and jk=jvar then 1 else 0;~
~
sum(Matriz*param1,I,J)
Definition: var Kvar=K;~
Index aux:=1..2;~
var sep=SplitText(Kvar,'-',resultindex:aux);~
var ik=sep[.aux=1];~
var jk=sep[.aux=2];~
~
var ivar=(I);~
var jvar=(J);~
~
var Matriz:= if ik=ivar and jk=jvar then 1 else 0;~
~
sum(Matriz*param1,I,J)
NodeLocation: 1224,128,1
NodeSize: 72,24
WindState: 2,891,11,720,350

Variable Potencial_priorizado
Title: Potencial priorizado
Definition: Potencial_reduccion_[Uso_Tipo_banco=Uso_Tipo_Banco_Prior]
NodeLocation: 976,368,1
NodeSize: 48,24
ValueState: 2,624,113,648,593,,MIDM
ReformVal: [Uso_Tipo_banco,Time]

Index Uso_Tipo_Banco_Prior
Att_PrevIndexValue: ['Nuevo Banco-Ref. Domestica','Mantencion-Ref. Domestica','Nuevo Banco-Agente Espumante','Mantencion-Agente Espumante','Nuevo Banco-Extinción Fuego','Mantencion-Extinción Fuego','Mantencion-Ref. Comercial - Equipos','Mantencion-Ref. Industrial','Nuevo Banco-Ref. Industrial','Mantencion-AA. Movil','Mantencion-AA. Est. Equipos ','Nuevo Banco-Ref. Comercial - in situ','Mantencion-Ref. Comercial - in situ','Nuevo Banco-AA. Est. Instalaciones ','Mantencion-AA. Est. Instalaciones ','Mantencion-Ref. Transporte','Nuevo Banco-Ref. Transporte','Nuevo Banco-Ref. Comercial - Equipos','Nuevo Banco-AA. Movil','Nuevo Banco-AA. Est. Equipos ']
Title: Uso Tipo Banco Priorizado
Definition: CopyIndex(Prioridad)
NodeLocation: 984,472,1
NodeSize: 48,32

Variable Potencial_acumulado
Title: Potencial acumulado
Units: kgCO2e
Definition: Cumulate(Potencial_priorizado,Uso_Tipo_Banco_Prior)
NodeLocation: 976,288,1
NodeSize: 56,24
ValueState: 2,467,391,829,439,,MIDM
ReformVal: [Uso_Tipo_Banco_Prior,Time]

Objective Consumo_Kigali
Title: Consumo Kigali
Definition: var aux:=if ~
Potencial_acumulado-Consumo_a_reducir<0 then 0 else 1;~
~
var aux2:=cumulate(aux,Uso_Tipo_Banco_Prior);~
~
var marginal:=if aux2=1 then 1 else 0;~
~
var marginal2:=if aux2>1 then 1 else 0;~
~
var delta:=Potencial_acumulado-Consumo_a_reducir;~
~
delta*marginal + marginal2*Potencial_priorizado
NodeLocation: 1200,248,1
NodeSize: 56,32
WindState: 2,98,82,720,350
ValueState: 2,1192,42,593,572,1,MIDM
ReformVal: [Null,Time]
Att__TotalsIndex: [Time,Uso_Tipo_Banco_Prior]
{!50000|Att_ColumnWidths: [,Uso_Tipo_Banco_Prior,\([,206])]}

Module Priorizacion
Title: Priorizacion
Author: adm
Date: Thu, Sep 17, 2020 10:44 AM
NodeLocation: 640,480,1
NodeSize: 56,24
DiagState: 2,0,0,1101,599,17

Constant Parametros_Costo_Alt
Title: Parametros Costo Alternativas
Units: por ktHFC consumido
Description: Hoglund-Isaksson et al 2017. - Cost estimats of the Kigali Amendment to phase down HFC ~
Valores para alternativas seleccinadas, los valores salen de la tabla de suplemento.~
~
El costo de de mantención debiera ser más alto pq implica un gasto que no ocurriría necesariamente. Para eso se puede suponer una inversion adicional que se suma a la inversión, dado que se pierde lo que quedaba de vida util~
~
Evaluan varias alternativas, seleccionan por costos las siguientes:~
~
AA. Est. Equipos 			Propane~
AA. Est. Instalaciones 		HFO-1234yf~
AA. Movil					HFO-1234yf~
Agente Espumante			CO2-based~
Extinción Fuego				Fluoroketane	~
Ref. Comercial - Equipos	Propane~
Ref. Comercial - in situ		CO2 based~
Ref. Domestica				Isobutano~
Ref. Industrial				Amoniaco~
Ref. Transporte				CO2 based
Definition: Table(TipoBanco,Parametros_Tecologia)(~
0,10,-0.6,0,~
169.17,10,2.25,0,~
48.67,12,6.92,0,~
6.96,15,-1,0,~
25.88,20,0.37,0,~
243.33,10,-28.35,-202.5,~
486.65,10,-28.35,-205.5,~
0,0,0,0,~
728,30,-48.05,-337.5,~
389.32,10,-14.26,-98.46)
NodeLocation: 104,152,1
NodeSize: 56,32
WindState: 2,98,82,720,350
DefnState: 2,79,376,816,359,0,DFNM
ValueState: 2,209,272,1583,637,,MIDM
ReformDef: [Parametros_Tecologia,TipoBanco]
ReformVal: [Parametros_Tecologia,TipoBanco]
Att_EditSliceState: [Usos,2,TipoBanco,1,Parametros_Tecologia,1]
{!50000|Att_ColumnWidths: [62,Parametros_Tecologia,\([,109])]}

Index Parametros_Tecologia
Att_PrevIndexValue: ['Inversion MEuro','Vida util Años','O&M MEuro/año','Demanda electricidad GWh']
Title: Parametros Tecologia alternativa~

Definition: ['Inversion MEuro','Vida util Años','O&M MEuro/año','Demanda electricidad GWh']
NodeLocation: 96,224,1
NodeSize: 56,32

Constant Tasa_dscto_eval_Alte
Title: Tasa dscto eval Alternativas
Definition: 10%
NodeLocation: 344,320,1
NodeSize: 56,32

Variable Costo_Nivelado_kg_HF
Title: Costo Nivelado kg HFC
Units: Millon Euro/kt HFC cons
Description: ~
Inv*(((1+r)^vu)*r/((1+r)^vu-1))+op+el*pe
Definition: var inv:=Parametros_Costo_Alt[Parametros_Tecologia='Inversion MEuro'];~
var vu:=Parametros_Costo_Alt[Parametros_Tecologia='Vida util Años'];~
var op:=Parametros_Costo_Alt[Parametros_Tecologia='O&M MEuro/año'];~
var el:=Parametros_Costo_Alt[Parametros_Tecologia='Demanda electricidad GWh'];~
var r:=Tasa_dscto_eval_Alte;~
var pe:=Precio_Electricidad;~
~
if TipoBanco='Ref. Domestica' then -1M else~
Inv*(((1+r)^vu)*r/((1+r)^vu-1))+op+el*pe~

NodeLocation: 400,152,1
NodeSize: 48,32
WindState: 2,98,82,1237,424
ValueState: 2,356,416,481,312,,MIDM
ReformVal: [Usos,TipoBanco]
DisplayInputs: Constant Inversion_Reemplazo
{!50000|Att_ColumnWidths: [,Usos,\([97])]}

Constant Precio_Electricidad
Title: Precio Electricidad
Units: MEuro/GWh~

Description: COnsidero 50 USD/MWH ~
multiplico por 1000 para GWh~
Dividio por 1M para MEuro
Definition: 42.3*1000/1e6
NodeLocation: 240,216,1
NodeSize: 56,24

Variable Prioridad
Title: Prioridad
Definition: SortIndex(Costo_Nivelado_Aplan,Uso_Tipo_banco)
NodeLocation: 808,56,1
NodeSize: 48,24
WindState: 2,98,82,720,350
ValueState: 2,164,170,847,432,,MIDM

Variable PCG_promedio_por_Tip
Title: PCG promedio por TipoBanco
Units: kgCO2e/kgHFC
Definition: if sum(Consumo_Tendencial,SustanciaHFC)=0 then 1 else~
Potencial_de_reducci/sum(Consumo_Tendencial,SustanciaHFC)
NodeLocation: 112,56,1
NodeSize: 48,40
ValueState: 2,193,382,637,404,,MIDM
ReformVal: [Usos,Time]
Att_ResultSliceState: [TipoBanco,1,Time,1,Usos,1]

Variable Costo_nivelado_kgCO2
Title: Costo nivelado kgCO2e
Units: Millon Euro/ktCO2e cons
Definition: Costo_Nivelado_kg_HF/PCG_promedio_por_Tip[Time=2016]
NodeLocation: 400,56,1
NodeSize: 48,32
ValueState: 2,743,431,847,352,,MIDM
ReformVal: [Usos,TipoBanco]

Index Uso_Tipo_banco
Title: Uso Tipo banco
Definition: F_Concatenar_Indices(usos,TipoBanco)
NodeLocation: 576,120,1
NodeSize: 48,24
WindState: 2,98,82,720,350

Variable Costo_Nivelado_Aplan
Title: Costo Nivelado Aplanado
Definition: F_Tabla_Concat_I (Costo_nivelado_kgCO2,Usos,TipoBanco,Uso_Tipo_banco)
NodeLocation: 576,56,1
NodeSize: 48,32
WindState: 2,90,82,720,350
ValueState: 2,236,177,1161,723,,MIDM

Constant Inversion_Reemplazo
Title: Inversion Reemplazo 
Description: Veces inversión para mantención.~
~
La lógica es que para cambiar la inversión debo renovar un equipo, lo cual implica que perdí la inversión anterior en un 50%
Definition: 1.5
NodeLocation: 504,248,1
NodeSize: 56,24
DisplayOutputs: Variable Costo_Nivelado_kg_HF

Close Priorizacion

Variable Consumo_segun_uso
Title: Consumo segun uso
Units: kgCO2e
Definition: sum(Consumo_Kigali*Eq_Usos*Eq_Tipo_Banco,Uso_Tipo_Banco_Prior)
NodeLocation: 1360,248,1
NodeSize: 48,24
ValueState: 2,180,186,1075,548,,MIDM
Att_ResultSliceState: [Usos,1,TipoBanco,1,Time,1]

Constant Map_Usos
Title: Map Usos
Definition: if SelectText( Uso_Tipo_Banco_Prior, 1 ,11)="Nuevo Banco" then "Nuevo Banco" else "Mantencion"
NodeLocation: 1080,472,1
NodeSize: 48,24
ValueState: 2,116,122,446,406,,MIDM

Variable Eq_Usos
Title: Eq Usos
Definition: if usos=Map_Usos then 1 else 0
NodeLocation: 1200,472,1
NodeSize: 48,24
ValueState: 2,148,154,932,558,,MIDM

Constant Map_tipo_banco
Title: Map tipo banco
Definition: SelectText( Uso_Tipo_Banco_Prior, FindInText("-",Uso_Tipo_Banco_Prior)+1)
NodeLocation: 1080,536,1
NodeSize: 48,24
ValueState: 2,228,234,1023,577,,MIDM

Variable Eq_Tipo_Banco
Title: Eq Tipo Banco
Definition: if Map_tipo_banco=TipoBanco then 1 else 0
NodeLocation: 1208,536,1
NodeSize: 48,24
WindState: 2,98,82,720,350
ValueState: 2,260,266,994,467,,MIDM
Att__TotalsIndex: [TipoBanco]

Close Proy_Kigali

Module Proy_base
Title: Proy base
Author: adm
Date: Fri, Jul 17, 2020 4:01 PM
NodeLocation: 152,128,1
NodeSize: 48,24
DiagState: 2,-254,123,1641,862,17

Variable Driver_Proyeccion
Title: Driver Proyeccion
Definition: Table(TipoBanco)(CE_AA_Res,CE_AA_Inst,Parque_Vehicular,PIB,PIB,CE_SM,CE_SM,Poblacion,PIB,PIB)
NodeLocation: 408,440,1
NodeSize: 56,24
WindState: 2,98,82,720,350
DefnState: 2,135,520,676,343,0,DFNM
ValueState: 2,228,234,968,423,,MIDM
{!50000|Att_ColumnWidths: [100]}

Constant CE_SM
Title: Consumo Electrico Supermercados
Units: 10e9 kCal
Definition: Table(Time)(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,429.3891322656434,433.27635978615416,431.7739326367328,431.4389508396203,433.1512921066817,435.6409027350369,438.3741898605458,438.29697672264183,436.44518203452765,433.76576797441004,430.8467876187981,427.46907887002624,432.20212811159416,437.1842852079815,438.3403017845922,440.2685287717102,441.9163342446623,442.77767403603684,443.52745882818516,444.4363246502863,446.4282900187368,446.75869880517155,447.4405404423371,447.59676688270986,451.4988925427129,456.31916541683444,460.9099014874264,464.3529535403703,468.48461600390294,472.15720486037645,476.05933052037966,480.4205297874419,483.8635818403858,488.68385471450733,491.43829635686245)
NodeLocation: 104,72,1
NodeSize: 72,32

Constant CE_AA_Inst
Title: Consumo Electrico AA Malls+Clinicas+Supermercados~

Units: 10e9 kCal
Definition: Table(Time)(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,356.04146847807385,361.1169229578675,395.73743250452264,428.3635315259844,449.01977960708507,501.2865445520033,554.3555336644454,610.1897389909285,659.8067919046259,706.0296080687875,749.7038676758727,805.3687388632242,871.1582842979535,932.2431287361392,985.0508243463023,1036.88041481828,1099.8289558831125,1159.7962288565002,1206.9986986161048,1269.6859978371106,1321.0657467009803,1377.9978914386497,1436.4199273057177,1493.4716583763368,1562.8093425456402,1635.1587303559068,1707.5081181661735,1780.0598084508852,1859.6464183897501,1942.4470344440238,2018.0104283696985,2086.943507590111,2166.125512580086,2245.914424993396,2318.0615103292175)
NodeLocation: 136,152,1
NodeSize: 120,32

Constant CE_AA_Res
Title: Consumo electrico AA residencial
Units: 10e9 kCal
Definition: Table(Time)(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,198.02481724815203,202.80823495545488,220.08899455827157,225.26867306995382,244.70040392865894,249.9159774144871,267.7174061115152,288.5199748317952,308.78176912552834,321.32487222885936,339.342113343701,361.3473209177754,386.4478672657662,398.78943757050075,415.4135372229081,437.8160891114325,460.4368951251778,477.9052307950336,484.80000547623905,506.10402694022474,521.7088637050878,540.7101126532411,560.0748208215722,581.3217497846766,602.186809195165,610.8650487376628,631.5259357236181,655.7606445701138,673.571020576925,694.8421681315898,716.2721508059417,727.1543060017514,748.6964305588056,767.5835008059552,789.231356031574)
NodeLocation: 104,224,1
NodeSize: 56,32
WindState: 2,98,82,720,352

Constant Parque_Vehicular
Title: Parque Vehicular
Units: veh
Definition: Table(Time)(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4.618261M,4.823066045670405M,4.995009788267761M,5.16346005914348M,5.348489350867359M,5.519256003719593M,5.711055871159987M,5.8737760408424465M,6.027691206846814M,6.18013727789253M,6.332915417720308M,6.471030769483432M,6.649761071827173M,6.8246353045844175M,6.999073381955821M,7.132224361808846M,7.299884347690053M,7.427430994229112M,7.579363436319185M,7.704605737132964M,7.8286679044719525M,7.977612082844317M,8.099183429740652M,8.218536949261338M,8.335677648117035M,8.450606059688952M,8.590285596646907M,8.701351602791134M,8.810837498963878M,8.891306564612962M,8.997647909245009M,9.102303798252992M,9.2052384828553M,9.306403858924966M)
NodeLocation: 96,304,1
NodeSize: 48,24
WindState: 2,98,82,720,350

Constant PIB
Title: PIB
Units: miles de MCLP2013
Definition: Table(Time)(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,132.51594028771K,137.876215768077K,140.509228703447K,143.674250720979K,145.957266982995K,148.1466259877399K,154.07249102724952K,159.15688323114873K,164.32489810059874K,169.57522191394304K,174.9064774641442K,180.31722647653188K,185.8059720905636K,191.3711613979561K,197.0111880296485K,202.72439478418345K,208.50907629024144K,214.36348169622823K,220.28581738000168K,226.27424967202364K,232.32690758543878K,238.44188554680912K,244.61724612147303K,250.85102272774457K,257.1412223344277K,263.48582813638065K,269.8828022031362K,276.3300880958539K,282.8256134481565K,289.367292506677K,295.9530286274207K,302.5807167243202K,309.2482456666354K,315.95350062212086K,322.69436534314964K,329.4687243932443K,336.27446531172446K,343.10948071442865K,349.9716703287172K)
NodeLocation: 96,440,1
NodeSize: 48,24

Constant Poblacion
Title: Poblacion
Definition: Table(Time)(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17.444799M,17.631579M,17.819054M,18.006407M,18.167147M,18.419192M,18.751405M,19.107216M,19.45831M,19.678363M,19.828563M,19.960889M,20.086377M,20.206953M,20.322807M,20.433791M,20.539666M,20.64023M,20.735289M,20.826397M,20.912278M,20.992831M,21.067996M,21.137769M,21.202223M,21.261462M,21.31563M,21.364889M,21.409418M,21.449428M,21.485105M,21.516611M,21.544064M,21.567513M,21.587015M,21.602589M,21.614271M,21.622101M,21.626079M)
NodeLocation: 104,368,1
NodeSize: 48,24
WindState: 2,98,82,720,350

Alias Al233292925
Title: Bt 2018
Definition: 1
NodeLocation: 136,592,1
NodeSize: 48,24
Original: Bt_2018

Variable Proyeccion_Proporcio
Title: Proyeccion Proporcional
Units: kg
Definition: if time<2019 then Bt_2018 else~
~
Multiplicadores*Driver_Proyeccion
NodeLocation: 408,528,1
NodeSize: 56,24
WindState: 2,176,61,720,350
ValueState: 2,276,282,668,577,0,MIDM
ReformVal: [TipoBanco,SustanciaHFC]
Att_ResultSliceState: [Time,31,SustanciaHFC,1,TipoBanco,4]

Constant Multiplicadores
Title: Multiplicadores
Definition: Table(TipoBanco,SustanciaHFC)(~
0,0,0,0,0,0,0,0,724,8923,0,~
0,2000,0,0,0,0,0,0,430,2621,0,~
0,0.3558914620100924,0,0,0,0,0,0,0,0,0,~
0,0,1.192106884265115,0,0,0,18.01356874599991,0,0,0,0,~
0,0,1.8385259864339931,0,0,0,0,0,0,0,0,~
0,622.9711551717448,0,0,0,0,0,94.09109187878157,0,0,0,~
0,0,0,0,0,0,0,-3270.8884941001625,0,0,39.4290784468671K,~
0,0.04275619743342353,0,0,0,0,0,0,0,0,0,~
0,5.723232695873833,0,0,0,0,0,1.7082476469074965,0,0,55.704359345386415,~
0,0.28645829120291844,0,0,0,0,0,0.10988868420064635,0,0,0)
NodeLocation: 608,440,1
NodeSize: 64,24
DefnState: 2,260,266,525,468,0,DFNM
ReformDef: [Null,SustanciaHFC]
Att_EditSliceState: [TipoBanco,10,SustanciaHFC,1]

Variable Proyeccion_por_delta
Title: Proyeccion por delta año a año
Units: kg
Definition: Dynamic(Bt_2018[Time=1990],if Time<2019 then Bt_2018 else Self[time-1]+ (Driver_Proyeccion[Time]-Driver_Proyeccion[time-1])*Multiplicadores)
NodeLocation: 592,528,1
NodeSize: 56,32
WindState: 2,215,11,720,350
ValueState: 2,149,194,675,553,,MIDM
Att__TotalsIndex: []
Att_ResultSliceState: [TipoBanco,7,SustanciaHFC,1,Time,1]

Variable Proyeccion_Tendencia
Title: Proyeccion Tendencial Banco
Units: kg
Definition: if TipoBanco='AA. Est. Instalaciones ' or TipoBanco='Ref. Comercial - in situ' or TipoBanco='Ref. Industrial'~
then ~
Proyeccion_por_delta ~
else~
Proyeccion_Proporcio
NodeLocation: 520,656,1
NodeSize: 56,24
ValueState: 2,609,33,1123,426,,MIDM
Aliases: Alias Al608173693, Alias Al2071986557, Alias Al668991101
ReformVal: [TipoBanco,Time]
Att__TotalsIndex: [SustanciaHFC,TipoBanco]
Att_ResultSliceState: [SustanciaHFC,0,Time,29,TipoBanco,4]

Close Proy_base

Alias Al668991101
Title: Proyeccion Tendencial
Definition: 1
NodeLocation: 368,128,1
NodeSize: 56,32
Original: Proyeccion_Tendencia

Close Proyeccion_Banco

Module Emisiones1
Title: Emisiones
Author: adm
Date: Fri, Jul 17, 2020 4:01 PM
NodeLocation: 1104,288,1
NodeSize: 56,24
DiagState: 2,78,315,1573,559,17

Alias Al551142525
Title: Bt Proyectado
Definition: 1
NodeLocation: 152,104,1
NodeSize: 56,24
Original: Bt_Proyectado

Module Emisiones_Operacion
Title: Emisiones Operacion
Author: adm
Date: Fri, Jul 17, 2020 4:01 PM
NodeLocation: 368,104,1
NodeSize: 56,24
DiagState: 2,873,198,944,484,17

Alias Al618251389
Title: Bt Proyectado
Definition: 1
NodeLocation: 120,224,1
NodeSize: 56,24
Original: Bt_Proyectado

Variable Fugas_Operacion
Title: Fugas Operacion
Units: kg
Definition: Bt_Proyectado*Tasa_Mantencion
NodeLocation: 376,224,1
NodeSize: 48,24

Variable Emisiones_Operacion1
Title: Emisiones Operacion
Units: ktCO2
Definition: sum(Fugas_Operacion*PCG_HFC_AR4,SustanciaHFC)/1e6
NodeLocation: 584,224,1
NodeSize: 48,24
Aliases: Alias Al1215939709

Alias Al1057227133
Title: Tasa Mantencion
Definition: 1
NodeLocation: 376,88,1
NodeSize: 56,24
Original: Tasa_Mantencion

Close Emisiones_Operacion

Alias Al1215939709
Title: Emisiones Operacion
Definition: 1
NodeLocation: 584,104,1
NodeSize: 48,24
Original: Emisiones_Operacion1

Module Emisiones_fin_de_vid
Title: Emisiones fin de vida
Author: adm
Date: Fri, Jul 17, 2020 4:01 PM
NodeLocation: 368,296,1
NodeSize: 56,24
DiagState: 2,0,71,944,413,17

Alias Al2088354941
Title: VU
Definition: 1
NodeLocation: 344,72,1
NodeSize: 48,24
Original: VU

Variable Proyeccion_Nt_vu
Title: Proyeccion Nt-vu
Units: kg
Definition: if time-VU <1990 then 0~
else~
Nt_Proyectado[Time=time-vu]
NodeLocation: 344,208,1
NodeSize: 56,24

Alias Al346408061
Title: Nt Proyectado
Definition: 1
NodeLocation: 144,208,1
NodeSize: 56,24
Original: Nt_Proyectado

Variable Emision_Fin_de_Vida
Title: Emision Fin de Vida
Units: ktCO2e
Definition: sum(Proyeccion_Nt_vu*PCG_HFC_AR4,SustanciaHFC)/1M
NodeLocation: 560,208,1
NodeSize: 48,32
Aliases: Alias Al1382401149

Close Emisiones_fin_de_vid

Alias Al1382401149
Title: Emision Fin de Vida
Definition: 1
NodeLocation: 600,296,1
NodeSize: 48,32
Original: Emision_Fin_de_Vida

Alias Al1634059389
Title: Nt Proyectado
Definition: 1
NodeLocation: 152,296,1
NodeSize: 56,24
Original: Nt_Proyectado

Index Tipo_Emisiones_HFC
Title: Tipo Emisiones HFC
Definition: ['Operacion','Fin de Vida']
NodeLocation: 816,328,1
NodeSize: 48,32
{!40300|Att_SlicerPopupSize: 232,64}

Variable Emisiones_HFC
Title: Emisiones HFC
Units: ktCO2e
Definition: if Tipo_Emisiones_HFC='Operacion'  then Emisiones_Operacion1~
else~
if Tipo_Emisiones_HFC='Fin de Vida' then Emision_Fin_de_Vida
NodeLocation: 800,200,1
NodeSize: 48,24
ValueState: 2,114,299,1189,496,0,MIDM
GraphSetup: Att_StackedBar Graph_Primary_Valdim:1~
Att_ForceCategorical Graph_Primary_Valdim:1
ReformVal: [Time,TipoBanco]
Att__TotalsIndex: [TipoBanco]
Att_ResultSliceState: [TipoBanco,0,Tipo_Emisiones_HFC,1,Time,1]

Index SubC_Uso_SAO
Title: SubCategoria Uso SAO
Units: ktCO2e
Definition: ['F.1.1 Ref Comercial e Industrial','F.1.2 Ref Residencial','F.1.3 AC Movil','F.1.3 AC Fijo','F.2 Agente Espumante','F.3 Proteccion Fuego']
NodeLocation: 1024,40,1
NodeSize: 64,24
WindState: 2,98,82,720,350

Constant Map_SC_Uso_SAO
Title: Map SC Uso SAO
Definition: Table(TipoBanco)('F.1.3 AC Fijo','F.1.3 AC Fijo','F.1.3 AC Movil','F.2 Agente Espumante','F.3 Proteccion Fuego','F.1.1 Ref Comercial e Industrial','F.1.1 Ref Comercial e Industrial','F.1.2 Ref Residencial','F.1.1 Ref Comercial e Industrial','F.1.1 Ref Comercial e Industrial')
NodeLocation: 1008,352,1
NodeSize: 48,24
WindState: 2,934,110,720,350
DefnState: 2,484,490,416,303,0,DFNM

Variable Emisiones_Uso_SAO
Title: Emisiones Uso SAO
Units: ktCO2e
Definition: Aggregate(Emisiones_HFC,Map_SC_Uso_SAO,TipoBanco,SubC_Uso_SAO)-Emisiones_Evitadas
NodeLocation: 1008,200,1
NodeSize: 48,24
WindState: 2,680,451,720,350
ValueState: 2,276,282,416,303,1,MIDM
Aliases: Alias Al1043711101, Alias Al288736381
ReformVal: [Time,Escenario]
Att__TotalsIndex: [Tipo_Emisiones_HFC]
Att_ResultSliceState: [Tipo_Emisiones_HFC,0,SubC_Uso_SAO,4,Escenario,1,Time,1]

Module Regeneracion_y_elimi
Title: Regeneracion y eliminacion
Author: adm
Date: Fri, Jul 17, 2020 4:01 PM
NodeLocation: 592,32,1
NodeSize: 64,24
DiagState: 2,877,326,944,484,17

Variable Capacidad
Title: Capacidad
Units: t/año
Description: Se asume que en el escenario medida entran 3 plantas nuevas de regeneracion con la misma capacidad
Definition: if time<2017 then 0 else~
if time >Ano_Implementacion then ~
	if Escenario='Base' then 365~
	else if Escenario='Medida' then 365+3*365~
	else 0~
else 365
NodeLocation: 272,128,1
NodeSize: 48,24

Constant FdPlanta
Title: FdPlanta
Description: HFC2 se reciclan 2 tHFC. El resto es HCFC~
se supone que alcanzan un fdp de 10% al 2030 y 60% al 2040 lineal entre medio
Definition: if time<2017 then 0 else~
if time<2020 then 2/365 else ~
if time<2031 then 2/365+(time-2020)*(10%-2/365)/10 else ~
if time<2040 then 10%+(time-2030)*(50%)/10 else 60%
NodeLocation: 112,240,1
NodeSize: 48,24
ValueState: 2,212,218,416,303,1,MIDM

Variable Toneladas_recuperada
Title: Toneladas recuperadas
Units: tHFC
Definition: Capacidad*FdPlanta
NodeLocation: 272,240,1
NodeSize: 56,24

Variable Emisiones_Evitadas
Title: Emisiones Evitadas
Units: ktCO2e
Description: Se supone que son todas R507A y de comercial industrial
Definition: if SubC_Uso_SAO='F.1.1 Ref Comercial e Industrial' then ~
Toneladas_recuperada*PCG_HFC_AR4[SustanciaHFC='R507A']/1k else 0
NodeLocation: 272,344,1
NodeSize: 48,24
Aliases: Alias Al1441645693

Constant Ano_Implementacion
Title: Año Implementacion
Definition: 2025
NodeLocation: 376,48,1
NodeSize: 72,24

Module Costos_Regeneracion
Title: Costos Regeneracion
Author: adm
Date: Fri, Jul 17, 2020 4:01 PM
NodeLocation: 488,240,1
NodeSize: 64,24
Aliases: Alias Al1966982269

Variable Inversion_Recuperaci
Title: Inversion Recuperacion
Units: USD2017
Description: SUpuesto falta hacerlo bien
Definition: if time=Ano_Implementacion then 100M else 0
NodeLocation: 232,64,1
NodeSize: 64,24
NodeColor: 65535,65532,19661

Variable Costos_de_operacion
Title: Costos de operacion
Units: US2017
Definition: (Toneladas_recuperada-Toneladas_recuperada[Escenario='Base'])*1000*Costo_Unitario
NodeLocation: 232,176,1
NodeSize: 48,24
NodeColor: 65535,65532,19661

Constant Costo_Unitario
Title: Costo Unitario
Units: USD2017/kg
Description: supuesto
Definition: 5
NodeLocation: 232,272,1
NodeSize: 48,24
WindState: 2,101,87,720,350

Alias Al918406269
Title: Flujo Caja Regenracion
Definition: 1
NodeLocation: 408,152,1
NodeSize: 56,24
Original: Flujo_Caja_Regenraci

Close Costos_Regeneracion

Close Regeneracion_y_elimi

Alias Al1441645693
Title: Emisiones Evitadas
Definition: 1
NodeLocation: 792,32,1
NodeSize: 48,24
Original: Emisiones_Evitadas

Close Emisiones1

Alias Al1383711869
Title: Pi793363581
Definition: 1
NodeLocation: 440,56,-1
NodeSize: 216,32
Pict
Original: Pi793363581

Module Proyeccion_Nt
Title: Proyeccion Nt
Author: adm
Date: Fri, Jul 17, 2020 4:01 PM
NodeLocation: 712,288,1
NodeSize: 56,24
DiagState: 2,0,0,1309,669,17

Alias Al1551484029
Title: VU
Definition: 1
NodeLocation: 432,560,1
NodeSize: 48,24
Original: VU

Alias Al1870251133
Title: Nt
Definition: 1
NodeLocation: 176,320,1
NodeSize: 48,24
Original: Nt

Variable Nt_Proyectado1
Title: Nt Proyectado1
Units: kg
Definition: Dynamic(Nt[time=1990],Bt_Proyectado[time]-Bt_Proyectado[Time-1]+Nt_vu[time])
NodeLocation: 432,320,1
NodeSize: 56,24
WindState: 2,577,154,884,444
ValueState: 2,116,122,1299,548,,MIDM
Att_ResultSliceState: [TipoBanco,3,SustanciaHFC,1,Time,1]

Alias Al939115645
Title: Bt Proyectado
Definition: 1
NodeLocation: 656,216,1
NodeSize: 56,24
Original: Bt_Proyectado

Alias Al1971700861
Title: Nt-vu
Definition: 1
NodeLocation: 176,432,1
NodeSize: 48,24
Original: Nt_vu

Variable Nt_vu_proyectado1
Title: Nt-vu_proyectado1
Units: kg
Definition: if time-VU <1990 then 0~
else~
Nt_Proyectado1[Time=time-vu]
NodeLocation: 432,440,1
NodeSize: 72,24
WindState: 2,706,338,720,350
ValueState: 2,180,186,1059,486,1,MIDM
Att_ResultSliceState: [TipoBanco,6,SustanciaHFC,1,Time,1]

Variable Nt_Proyectado2
Title: Nt Proyectado2
Units: kg HFC
Definition: Dynamic(Nt_Proyectado1[time=1990],Bt_Proyectado[time]-Bt_Proyectado[Time-1]+Nt_vu_proyectado1[time])
NodeLocation: 656,320,1
NodeSize: 56,24
ValueState: 2,212,218,1286,488,0,MIDM
ReformVal: [Time,TipoBanco]
Att__TotalsIndex: [SustanciaHFC]
Att_ResultSliceState: [SustanciaHFC,0,TipoBanco,1,Time,1]

Variable Nt_vu_proyectado2
Title: Nt-vu_proyectado2
Units: kg
Definition: if time-VU <1990 then 0~
else~
Nt_Proyectado2[Time=time-vu]
NodeLocation: 656,440,1
NodeSize: 72,24
WindState: 2,706,338,720,350
ValueState: 2,180,186,1059,486,1,MIDM
Att_ResultSliceState: [TipoBanco,6,SustanciaHFC,1,Time,1]

Variable Nt_Proyectado
Title: Nt Proyectado
Units: kg HFC
Definition: Dynamic(Nt_Proyectado2[time=1990],Bt_Proyectado[time]-Bt_Proyectado[Time-1]+Nt_vu_proyectado2[time])
NodeLocation: 848,320,1
NodeSize: 56,24
ValueState: 2,212,218,1286,488,0,MIDM
Aliases: Alias Al346408061, Alias Al1634059389
ReformVal: [Time,TipoBanco]
Att__TotalsIndex: [SustanciaHFC]
Att_ResultSliceState: [SustanciaHFC,0,TipoBanco,1,Time,1]

Module Proyeccion_Banco1
Title: Proyeccion Banco
Author: adm
Date: Thu, Aug 27, 2020 7:07 PM
NodeLocation: 648,80,1
NodeSize: 56,24

Close Proyeccion_Banco1

Close Proyeccion_Nt

Alias Al1043711101
Title: Emisiones Uso SAO
Definition: 1
NodeLocation: 1336,288,1
NodeSize: 48,24
Original: Emisiones_Uso_SAO

Close F__Uso_SAO

Alias Al288736381
Title: Emisiones Uso SAO
Definition: 1
NodeLocation: 536,304,1
NodeSize: 48,24
Original: Emisiones_Uso_SAO

Close PU

Objective Emisiones
Title: Emisiones
Units: ktCO2e
Description: No hay emisiones de e
Definition: if Subcategorias_IPPU='A. Industria Mineral' then sum(Em_ind_Min,SubC_Ind_Mineral) else ~
if Subcategorias_IPPU='B. Industria Química' then sum(Em_Ind_Quimica,SubC_Ind_Quimica) else ~
if Subcategorias_IPPU='C. Industria Metálica' then sum(Em_Ind_Metalica,SubC_Ind_Metalica) else ~
if Subcategorias_IPPU='D. Uso no energético de productos de combustibles y solventes' then Em_NoEnerg_Solv else ~
if Subcategorias_IPPU='G. Otra producción y usos' then Em_OtrProdUsos else~
if Subcategorias_IPPU='F. Uso de productos de SAO' then sum(Emisiones_Uso_SAO,SubC_Uso_SAO,Tipo_Emisiones_HFC)~
else 0
NodeLocation: 624,152,1
NodeSize: 48,24
WindState: 2,382,306,720,350
ValueState: 2,-108,42,1491,631,1,MIDM
Aliases: Alias Al1719518333
GraphSetup: Att_StackedBar Graph_Primary_Valdim:1~
Att_ForceCategorical Graph_Primary_Valdim:1

Module GEI1
Title: GEI
Author: adm
Date: Fri, Jul 17, 2020 4:01 PM
NodeLocation: 144,144,1
NodeSize: 48,24
DiagState: 2,314,73,944,484,17

Index GEI
Title: GEI
Definition: ['CO2','CH4','N2O']
NodeLocation: 104,48,1
NodeSize: 48,24
Att_PrevIndexValue: ['CO2','CH4','N2O']

Constant PCG_AR4
Title: PCG AR4
Definition: Table(GEI)(1,25,298)
NodeLocation: 96,136,1
NodeSize: 48,24

Index SustanciaHFC
Title: SustanciaHFC
Definition: ['HFC125','HFC134a','HFC227ea','HFC23','HFC236fa','HFC32','HFC365mfc','R404A','R407C','R410A','R507A']
NodeLocation: 136,216,1
NodeSize: 64,24
WindState: 2,121,307,720,350
{!40300|Att_SlicerPopupSize: 232,182}
Att_PrevIndexValue: ['HFC125','HFC134a','HFC227ea','HFC23','HFC236fa','HFC32','HFC365mfc','R404A','R407C','R410A','R507A']

Constant PCG_HFC_AR4
Title: PCG HFC AR4
Definition: Table(SustanciaHFC)(3500,1430,3220,14.8K,9810,675,794,3921.6,1773.85,2087.5,3985)
NodeLocation: 104,328,1
NodeSize: 48,24
WindState: 2,72,30,720,350
DefnState: 2,148,154,416,303,0,DFNM

Close GEI1

Index Escenario
Title: Escenario
Definition: ['Base','Medida']
NodeLocation: 656,16,1
NodeSize: 48,24
{!40300|Att_SlicerPopupSize: 227,64}

Module Costos_Medidas
Title: Costos Medidas
Author: adm
Date: Fri, Jul 17, 2020 4:01 PM
NodeLocation: 296,352,1
NodeSize: 48,24
DiagState: 2,871,177,1418,629,17

Alias Al1966982269
Title: Costos Regeneracion
Definition: 1
NodeLocation: 112,48,1
NodeSize: 64,24
Original: Costos_Regeneracion

Variable Flujo_Caja_Regenraci
Title: Flujo Caja Regenracion
Units: MMUSD2017
Definition: Inversion_Recuperaci+Costos_de_operacion
NodeLocation: 312,48,1
NodeSize: 56,24
Aliases: Alias Al918406269

Index Medidas
Title: Medidas
Definition: ['Regeneracion','Clinker']
NodeLocation: 744,56,1
NodeSize: 48,24

Alias Al679330941
Title: Flujo Caja
Definition: 1
NodeLocation: 520,40,1
NodeSize: 48,24
Original: Flujo_Caja

Close Costos_Medidas

Objective Flujo_Caja
Title: Flujo Caja
Units: MMSUD2017
Definition: if Medidas='Regeneracion' then Flujo_Caja_Regenraci else 0
NodeLocation: 632,352,1
NodeSize: 48,24
Aliases: Alias Al679330941, Alias Al628999293

Module Indicadores
Title: Indicadores
Author: adm
Date: Fri, Jul 17, 2020 4:01 PM
NodeLocation: 792,248,1
NodeSize: 56,24

Alias Al1719518333
Title: Emisiones
Definition: 1
NodeLocation: 112,80,1
NodeSize: 48,24
Original: Emisiones

Alias Al628999293
Title: Flujo Caja
Definition: 1
NodeLocation: 104,256,1
NodeSize: 48,24
Original: Flujo_Caja

Variable Reduccion
Title: Reduccion
Units: ktCO2e
Definition: sum(Emisiones[Escenario='Base']-Emisiones,Subcategorias_IPPU)
NodeLocation: 504,80,1
NodeSize: 48,24
ValueState: 2,380,315,1016,303,1,MIDM
ReformVal: [Time,Escenario]
Att__TotalsIndex: [Subcategorias_IPPU]
Att_ResultSliceState: [Subcategorias_IPPU,0,Escenario,1,Time,1]

Constant Ano_Base_Valor_Prese
Title: Año Base Valor Presente
Definition: 2017
NodeLocation: 96,352,1
NodeSize: 48,32
Aliases: FormNode Fo184403069

FormNode Fo184403069
Title: Año Base Valor Presente
Definition: 0
NodeLocation: 288,360,1
NodeSize: 136,16
NodeInfo: 1,,,,,,,64,,,,,,0
Original: Ano_Base_Valor_Prese

Variable Flujo_Periodo
Title: Flujo Periodo
Units: MMSUD2017
Definition: Flujo_Caja[Time=Periodo_Costos]
NodeLocation: 296,256,1
NodeSize: 48,24
WindState: 2,614,366,720,350

Index Periodo_Costos
Title: Periodo Costos
Definition: Ano_Base_Valor_Prese..2050
NodeLocation: 104,184,1
NodeSize: 48,24

Variable VPC
Title: VPC
Units: MMSUD2017
Definition: Npv(Tasa_Descuento,Flujo_Periodo,Periodo_Costos)
NodeLocation: 496,256,1
NodeSize: 48,24
WindState: 2,275,121,720,350

Constant Tasa_Descuento
Title: Tasa Descuento
Definition: 6%
NodeLocation: 496,408,1
NodeSize: 48,24
Aliases: FormNode Fo1661191293

FormNode Fo1661191293
Title: Tasa Descuento
Definition: 0
NodeLocation: 284,416,1
NodeSize: 108,16
Original: Tasa_Descuento

Variable Costo_Medio
Title: Costo Medio
Units: USD2017/tCO2e
Definition: 1000*VPC/sum(Reduccion,time)
NodeLocation: 664,152,1
NodeSize: 48,24
ValueState: 2,68,74,468,261,,MIDM

Close Indicadores

Close DDPLTS_IPPU

